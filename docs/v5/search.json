{"version":"0.1","summaries":[{"title":"ContractFactory","blocks":[{"link":"/v5/api/contract/contract-factory/#ContractFactory","text":"@TODO: Fill this in, including @SRC links."}]},{"title":"ContractFactory -- Methods -- contractFactory.attach( address ) => Contract","blocks":[{"link":"/v5/api/contract/contract-factory/#ContractFactory-attach","text":"Return an instance of a Contract attached to address."},{"link":"/v5/api/contract/contract-factory/#ContractFactory-attach","text":"This is the same as using the Contract constructor with address and this the interface and signerOrProvider passed in when creating the ContractFactory."}]},{"title":"ContractFactory -- Methods -- contractFactory.getDeployTransaction( ...args ) => UnsignedTransaction","blocks":[{"link":"/v5/api/contract/contract-factory/#ContractFactory--methods","text":"Returns the unsigned transaction which would deploy this Contract with args passed to the Contract's constructor."}]},{"title":"ContractFactory -- Methods -- contractFactory.deploy( ...args ) => Promise< Contract >","blocks":[{"link":"/v5/api/contract/contract-factory/#ContractFactory-deploy","text":"Uses the signer to deploy the Contract with args passed into the constructor and returns a Contract which is attached to the address where this contract will be deployed once the transaction is mined."},{"link":"/v5/api/contract/contract-factory/#ContractFactory-deploy","text":"The transaction can be found at contract.deployTransaction, and no interactions should be made until the transaction is mined."}]},{"title":"Contract","blocks":[{"link":"/v5/api/contract/contract/#Contract","text":"Explain contract here..."}]},{"title":"Contract -- Creating Instances -- contract.attach( addressOrName ) => Contract","blocks":[{"link":"/v5/api/contract/contract/#Contract-attach","text":"Returns a new instance of the Contract attached to a new address."},{"link":"/v5/api/contract/contract/#Contract-attach","text":"This is useful if there are multiple similar or identical copies of a Contract on the network and you wish to interact with each of them."}]},{"title":"Contract -- Creating Instances -- contract.connect( providerOrSigner ) => Contract","blocks":[{"link":"/v5/api/contract/contract/#Contract-connect","text":"Returns a new instance of the Contract, but connected to providerOrSigner."},{"link":"/v5/api/contract/contract/#Contract-connect","text":"By passing in a Provider, this will return a downgraded Contract which only has read-only access (i.e."},{"link":"/v5/api/contract/contract/#Contract-connect","text":"constant calls)."},{"link":"/v5/api/contract/contract/#Contract-connect","text":"By passing in a Signer."},{"link":"/v5/api/contract/contract/#Contract-connect","text":"this will return a Contract which will act on behalf of that signer."}]},{"title":"Contract -- Properties -- contract.address => string< Address >","blocks":[{"link":"/v5/api/contract/contract/#Contract--properties","text":"This is the address (or ENS name) the contract was constructed with."}]},{"title":"Contract -- Properties -- contract.resolvedAddress => string< Address >","blocks":[{"link":"/v5/api/contract/contract/#Contract--properties","text":"This is a promise that will resolve to the address the Contract object is attached to."},{"link":"/v5/api/contract/contract/#Contract--properties","text":"If an Address was provided to the constructor, it will be equal to this; if an ENS name was provided, this will be the resolved address."}]},{"title":"Contract -- Properties -- contract.deployTransaction => TransactionResponse","blocks":[{"link":"/v5/api/contract/contract/#Contract--properties","text":"If the Contract object is the result of a ContractFactory deployment, this is the transaction which was used to deploy the contract."}]},{"title":"Contract -- Properties -- contract.interface => Interface","blocks":[{"link":"/v5/api/contract/contract/#Contract--properties","text":"This is the ABI as an Interface."}]},{"title":"Contract -- Properties -- contract.provider => Provider","blocks":[{"link":"/v5/api/contract/contract/#Contract--properties","text":"If a provider was provided to the constructor, this is that provider."},{"link":"/v5/api/contract/contract/#Contract--properties","text":"If a signer was provided that had a Provider, this is that provider."}]},{"title":"Contract -- Properties -- contract.signer => Signer","blocks":[{"link":"/v5/api/contract/contract/#Contract--properties","text":"If a signer was provided to the constructor, this is that signer."}]},{"title":"Contract -- Events -- contract.queryFilter( event [ , fromBlockOrBlockHash [ , toBlock ] ) => Promise< Array< Event > >","blocks":[{"link":"/v5/api/contract/contract/#Contract-queryFilter","text":"Return Events that match the event."}]},{"title":"Contract -- Events -- contract.listenerCount( [ event ] ) => number","blocks":[{"link":"/v5/api/contract/contract/#Contract-listenerCount","text":"Return the number of listeners that are subscribed to event."},{"link":"/v5/api/contract/contract/#Contract-listenerCount","text":"If no event is provided, returns the total count of all events."}]},{"title":"Contract -- Events -- contract.listeners( event ) => Array< Listener >","blocks":[{"link":"/v5/api/contract/contract/#Contract-listeners","text":"Return a list of listeners that are subscribed to event."}]},{"title":"Contract -- Events -- contract.off( event , listener ) => this","blocks":[{"link":"/v5/api/contract/contract/#Contract-off","text":"Unsubscribe listener to event."}]},{"title":"Contract -- Events -- contract.on( event , listener ) => this","blocks":[{"link":"/v5/api/contract/contract/#Contract-on","text":"Subscribe to event calling listener when the event occurs."}]},{"title":"Contract -- Events -- contract.once( event , listener ) => this","blocks":[{"link":"/v5/api/contract/contract/#Contract-once","text":"Subscribe once to event calling listener when the event occurs."}]},{"title":"Contract -- Events -- contract.removeAllListeners( [ event ] ) => this","blocks":[{"link":"/v5/api/contract/contract/#Contract-removeAllListeners","text":"Unsubscribe all listeners for event."},{"link":"/v5/api/contract/contract/#Contract-removeAllListeners","text":"If no event is provided, all events are unsubscribed."}]},{"title":"Contract -- Meta-Class","blocks":[{"link":"/v5/api/contract/contract/#Contract--metaclass","text":"A Meta-Class is a Class which has any of its properties determined at run-time."},{"link":"/v5/api/contract/contract/#Contract--metaclass","text":"The Contract object uses a Contract's ABI to determine what methods are available, so the following sections describe the generic ways to interact with the properties added at run-time during the Contract constructor."}]},{"title":"Contract -- Meta-Class -- Read-Only Methods (constant)","blocks":[{"link":"/v5/api/contract/contract/#Contract--readonly","text":"A constant method is read-only and evaluates a small amount of EVM code against the current blockchain state and can be computed by asking a single node, which can return a result."},{"link":"/v5/api/contract/contract/#Contract--readonly","text":"It is therefore free and does not require any ether, but cannot make changes to the blockchain state.."}]},{"title":"Contract -- Meta-Class -- contract.METHOD_NAME( ...args [ , overrides ] ) => Promise< any >","blocks":[{"link":"/v5/api/contract/contract/#Contract-functionsCall","text":"The type of the result depends on the ABI."},{"link":"/v5/api/contract/contract/#Contract-functionsCall","text":"For values that have a simple meaning in JavaScript, the types are fairly straight forward; strings and booleans are returned as JavaScript strings and booleans."},{"link":"/v5/api/contract/contract/#Contract-functionsCall","text":"For numbers, if the type is in the JavaScript safe range (i.e."},{"link":"/v5/api/contract/contract/#Contract-functionsCall","text":"less than 53 bits, such as an int24 or uint48) a normal JavaScript number is used."},{"link":"/v5/api/contract/contract/#Contract-functionsCall","text":"Otherwise a BigNumber is returned."},{"link":"/v5/api/contract/contract/#Contract-functionsCall","text":"For bytes (both fixed length and dynamic), a DataHexString is returned."}]},{"title":"Contract -- Meta-Class -- contract.functions.METHOD_NAME( ...args [ , overrides ] ) => Promise< Result >","blocks":[{"link":"/v5/api/contract/contract/#Contract--readonly","text":"The result will always be a Result, even if there is only a single return value type."},{"link":"/v5/api/contract/contract/#Contract--readonly","text":"This simplifies frameworks which wish to use the Contract object, since they do not need to inspect the return types to unwrap simplified functions."},{"link":"/v5/api/contract/contract/#Contract--readonly","text":"Another use for this method is for error recovery."},{"link":"/v5/api/contract/contract/#Contract--readonly","text":"For example, if a function result is an invalid UTF-8 string, the normal call using the above meta-class function will throw an exception."},{"link":"/v5/api/contract/contract/#Contract--readonly","text":"This allows using the Result access error to access the low-level bytes and reason for the error allowing an alternate UTF-8 error strategy to be used."},{"link":"/v5/api/contract/contract/#Contract--readonly","text":"Most developers should not require this."}]},{"title":"Contract -- Meta-Class -- Write Methods (non-constant)","blocks":[{"link":"/v5/api/contract/contract/#Contract--write","text":"A non-constant method requires a transaction to be signed and requires payment in the form of a fee to be paid to a miner."},{"link":"/v5/api/contract/contract/#Contract--write","text":"This transaction will be verified by every node on the entire network as well by the miner who will compute the new state of the blockchain after executing it against the current state."},{"link":"/v5/api/contract/contract/#Contract--write","text":"It cannot return a result."},{"link":"/v5/api/contract/contract/#Contract--write","text":"If a result is required, it should be logged using a Solidity event (or EVM log), which can then be queried from the transaction receipt."}]},{"title":"Contract -- Meta-Class -- contract.METHOD_NAME( ...args [ , overrides ] ) => Promise< TransactionResponse >","blocks":[{"link":"/v5/api/contract/contract/#contract-functionsSend","text":"Returns a TransactionResponse for the transaction after it is sent to the network."},{"link":"/v5/api/contract/contract/#contract-functionsSend","text":"This requires the Contract has a signer."}]},{"title":"Contract -- Meta-Class -- Write Methods Analysis","blocks":[{"link":"/v5/api/contract/contract/#Contract--check","text":"There are several options to analyze properties and results of a write method without actually executing it."}]},{"title":"Contract -- Meta-Class -- contract.estimateGas.METHOD_NAME( ...args [ , overrides ] ) => Promise< BigNumber >","blocks":[{"link":"/v5/api/contract/contract/#contract-estimateGas","text":"Returns the estimate units of gas that would be required to execute the METHOD_NAME with args and overrides."}]},{"title":"Contract -- Meta-Class -- contract.populateTransaction.METHOD_NAME( ...args [ , overrides ] ) => Promise< UnsignedTx >","blocks":[{"link":"/v5/api/contract/contract/#contract-populateTransaction","text":"Returns an UnsignedTransaction which represents the transaction that would need to be signed and submitted to the network to execute METHOD_NAME with args and overrides."}]},{"title":"Contract -- Meta-Class -- contract.callStatic.METHOD_NAME( ...args [ , overrides ] ) => Promise< any >","blocks":[{"link":"/v5/api/contract/contract/#contract-callStatic","text":"Rather than executing the state-change of a transaction, it is possible to ask a node to pretend that a call is not state-changing and return the result."},{"link":"/v5/api/contract/contract/#contract-callStatic","text":"This does not actually change any state, but is free."},{"link":"/v5/api/contract/contract/#contract-callStatic","text":"This in some cases can be used to determine if a transaction will fail or succeed."},{"link":"/v5/api/contract/contract/#contract-callStatic","text":"This otherwise functions the same as a Read-Only Method."}]},{"title":"Contract -- Meta-Class -- Event Filters","blocks":[{"link":"/v5/api/contract/contract/#Contract--filters","text":"An event filter is made up of topics, which are values logged in a Bloom Filter, allowing efficient searching for entries which match a filter."}]},{"title":"Contract -- Meta-Class -- contract.filters.EVENT_NAME( ...args ) => Filter","blocks":[{"link":"/v5/api/contract/contract/#Contract--filters","text":"Return a filter for EVENT_NAME, optionally filtering by additional constraints."},{"link":"/v5/api/contract/contract/#Contract--filters","text":"Only indexed event parameters may be filtered."},{"link":"/v5/api/contract/contract/#Contract--filters","text":"If a parameter is null (or not provided) then any value in that field matches."}]},{"title":"Example: ERC-20 Contract -- Connecting to a Contract -- new vapors.Contract( address , abi , providerOrSigner )","blocks":[{"link":"/v5/api/contract/example/","text":"See the above code example for creating an Instance which will (in addition to the Contact methods and properties) automatically add the additional properties defined in abi to a Contract connected to address using the providerOrSigner."}]},{"title":"Example: ERC-20 Contract -- Properties -- erc20.address => string< Address >","blocks":[{"link":"/v5/api/contract/example/","text":"This is the address (or ENS name) the contract was constructed with."}]},{"title":"Example: ERC-20 Contract -- Properties -- erc20.resolvedAddress => string< Address >","blocks":[{"link":"/v5/api/contract/example/","text":"This is a promise that will resolve to the address the Contract object is attached to."},{"link":"/v5/api/contract/example/","text":"If an Address was provided to the constructor, it will be equal to this; if an ENS name was provided, this will be the resolved address."}]},{"title":"Example: ERC-20 Contract -- Properties -- erc20.deployTransaction => TransactionResponse","blocks":[{"link":"/v5/api/contract/example/","text":"If the Contract object is the result of a ContractFactory deployment, this is the transaction which was used to deploy the contract."}]},{"title":"Example: ERC-20 Contract -- Properties -- erc20.interface => Interface","blocks":[{"link":"/v5/api/contract/example/","text":"This is the ABI as an Interface."}]},{"title":"Example: ERC-20 Contract -- Properties -- erc20.provider => Provider","blocks":[{"link":"/v5/api/contract/example/","text":"If a provider was provided to the constructor, this is that provider."},{"link":"/v5/api/contract/example/","text":"If a signer was provided that had a Provider, this is that provider."}]},{"title":"Example: ERC-20 Contract -- Properties -- erc20.signer => Signer","blocks":[{"link":"/v5/api/contract/example/","text":"If a signer was provided to the constructor, this is that signer."}]},{"title":"Example: ERC-20 Contract -- Methods -- erc20.attach( addressOrName ) => Contract","blocks":[{"link":"/v5/api/contract/example/","text":"Returns a new instance of the Contract attached to a new address."},{"link":"/v5/api/contract/example/","text":"This is useful if there are multiple similar or identical copies of a Contract on the network and you wish to interact with each of them."}]},{"title":"Example: ERC-20 Contract -- Methods -- erc20.connect( providerOrSigner ) => Contract","blocks":[{"link":"/v5/api/contract/example/","text":"Returns a new instance of the Contract, but connected to providerOrSigner."},{"link":"/v5/api/contract/example/","text":"By passing in a Provider, this will return a downgraded Contract which only has read-only access (i.e."},{"link":"/v5/api/contract/example/","text":"constant calls)."},{"link":"/v5/api/contract/example/","text":"By passing in a Signer."},{"link":"/v5/api/contract/example/","text":"this will return a Contract which will act on behalf of that signer."}]},{"title":"Example: ERC-20 Contract -- Events -- erc20.queryFilter( event [ , fromBlockOrBlockHash [ , toBlock ] ) => Promise< Array< Event > >","blocks":[{"link":"/v5/api/contract/example/#erc20-queryfilter","text":"Return Events that match the event."}]},{"title":"Example: ERC-20 Contract -- Events -- erc20.listenerCount( [ event ] ) => number","blocks":[{"link":"/v5/api/contract/example/#erc20-events","text":"Return the number of listeners that are subscribed to event."},{"link":"/v5/api/contract/example/#erc20-events","text":"If no event is provided, returns the total count of all events."}]},{"title":"Example: ERC-20 Contract -- Events -- erc20.listeners( event ) => Array< Listener >","blocks":[{"link":"/v5/api/contract/example/#erc20-events","text":"Return a list of listeners that are subscribed to event."}]},{"title":"Example: ERC-20 Contract -- Events -- erc20.off( event , listener ) => this","blocks":[{"link":"/v5/api/contract/example/#erc20-events","text":"Unsubscribe listener to event."}]},{"title":"Example: ERC-20 Contract -- Events -- erc20.on( event , listener ) => this","blocks":[{"link":"/v5/api/contract/example/#erc20-events","text":"Subscribe to event calling listener when the event occurs."}]},{"title":"Example: ERC-20 Contract -- Events -- erc20.once( event , listener ) => this","blocks":[{"link":"/v5/api/contract/example/#erc20-events","text":"Subscribe once to event calling listener when the event occurs."}]},{"title":"Example: ERC-20 Contract -- Events -- erc20.removeAllListeners( [ event ] ) => this","blocks":[{"link":"/v5/api/contract/example/#erc20-events","text":"Unsubscribe all listeners for event."},{"link":"/v5/api/contract/example/#erc20-events","text":"If no event is provided, all events are unsubscribed."}]},{"title":"Example: ERC-20 Contract -- Meta-Class Methods","blocks":[{"link":"/v5/api/contract/example/","text":"Since the Contract is a Meta-Class, the methods available here depend on the ABI which was passed into the Contract."}]},{"title":"Example: ERC-20 Contract -- Meta-Class Methods -- erc20.decimals( [ overrides ] ) => Promise< number >","blocks":[{"link":"/v5/api/contract/example/","text":"Returns the number of decimal places used by this ERC-20 token."},{"link":"/v5/api/contract/example/","text":"This can be used with parseUnits when taking input from the user or [formatUnits](utils-formatunits] when displaying the token amounts in the UI."}]},{"title":"Example: ERC-20 Contract -- Meta-Class Methods -- erc20.getBalance( owner [ , overrides ] ) => Promise< BigNumber >","blocks":[{"link":"/v5/api/contract/example/","text":"Returns the balance of owner for this ERC-20 token."}]},{"title":"Example: ERC-20 Contract -- Meta-Class Methods -- erc20.symbol( [ overrides ] ) => Promise< string >","blocks":[{"link":"/v5/api/contract/example/","text":"Returns the symbol of the token."}]},{"title":"Example: ERC-20 Contract -- Meta-Class Methods -- erc20_rw.transfer( target , amount [ , overrides ] ) => Promise< TransactionResponse >","blocks":[{"link":"/v5/api/contract/example/","text":"Transfers amount tokens to target from the current signer."},{"link":"/v5/api/contract/example/","text":"The return value (a boolean) is inaccessible during a write operation using a transaction."},{"link":"/v5/api/contract/example/","text":"Other techniques (such as events) are required if this value is required."},{"link":"/v5/api/contract/example/","text":"On-chain contracts calling the transfer function have access to this result, which is why it is possible."}]},{"title":"Example: ERC-20 Contract -- Meta-Class Methods -- erc20.callStatic.transfer( target , amount [ , overrides ] ) => Promise< boolean >","blocks":[{"link":"/v5/api/contract/example/","text":"Performs a dry-run of transferring amount tokens to target from the current signer, without actually signing or sending a transaction."},{"link":"/v5/api/contract/example/","text":"This can be used to preflight check that a transaction will be successful."}]},{"title":"Example: ERC-20 Contract -- Meta-Class Methods -- erc20.estimateGas.transfer( target , amount [ , overrides ] ) => Promise< BigNumber >","blocks":[{"link":"/v5/api/contract/example/","text":"Returns an estimate for how many units of gas would be required to transfer amount tokens to target."}]},{"title":"Example: ERC-20 Contract -- Meta-Class Methods -- erc20.populateTransaction.transfer( target , amount [ , overrides ] ) => Promise< UnsignedTx >","blocks":[{"link":"/v5/api/contract/example/","text":"Returns an UnsignedTransaction which could be signed and submitted to the network to transaction amount tokens to target."}]},{"title":"Example: ERC-20 Contract -- Meta-Class Methods -- Note on Estimating and Static Calling","blocks":[{"link":"/v5/api/contract/example/","text":"When you perform a static call, the current state is taken into account as best as Vapory can determine."},{"link":"/v5/api/contract/example/","text":"There are many cases where this can provide false positives and false negatives."},{"link":"/v5/api/contract/example/","text":"The eventually consistent model of the blockchain also means there are certain consistency modes that cannot be known until an actual transaction is attempted."}]},{"title":"Example: ERC-20 Contract -- Meta-Class Filters","blocks":[{"link":"/v5/api/contract/example/","text":"Since the Contract is a Meta-Class, the methods available here depend on the ABI which was passed into the Contract."}]},{"title":"Example: ERC-20 Contract -- Meta-Class Filters -- erc20.filters.Transfer( [ fromAddress [ , toAddress ] ] ) => Filter","blocks":[{"link":"/v5/api/contract/example/","text":"Returns a new Filter which can be used to query or to subscribe/unsubscribe to events."},{"link":"/v5/api/contract/example/","text":"If fromAddress is null or not provided, then any from address matches."},{"link":"/v5/api/contract/example/","text":"If toAddress is null or not provided, then any to address matches."}]},{"title":"Contract Interaction","blocks":[{"link":"/v5/api/contract/#contracts","text":"A Contract object is an abstraction of a contract (EVM bytecode) deployed on the Vapory network."},{"link":"/v5/api/contract/#contracts","text":"It allows for a simple way to serialize calls and transactions to an on-chain contract and deserialize their results and emitted logs."},{"link":"/v5/api/contract/#contracts","text":"A ContractFactory is an abstraction of a contract's bytecode and facilitates deploying a contract."}]},{"title":"Experimental","blocks":[{"link":"/v5/api/experimental/","text":"The Experimental package is used for features that are not ready to be included in the base library."},{"link":"/v5/api/experimental/","text":"The API should not be considered stable and does not follow semver versioning, so applications requiring it should specify the exact version needed."}]},{"title":"Experimental -- BrainWallet","blocks":[{"link":"/v5/api/experimental/#experimental-brainwallet","text":"Vapors removed support for BrainWallets in v4, since they are unsafe and many can be easily guessed, allowing attackers to steal the funds."},{"link":"/v5/api/experimental/#experimental-brainwallet","text":"This class is offered to ensure older systems which used brain wallets can still recover their funds and assets."}]},{"title":"Experimental -- BrainWallet -- BrainWallet.generate( username , password [ , progressCallback ] ) => BrainWallet","blocks":[{"link":"/v5/api/experimental/#experimental-brainwallet","text":"Generates a brain wallet, with a slightly improved experience, in which the generated wallet has a mnemonic."}]},{"title":"Experimental -- BrainWallet -- BrainWallet.generateLegacy( username , password [ , progressCallback ] ) => BrainWallet","blocks":[{"link":"/v5/api/experimental/#experimental-brainwallet","text":"Generate a brain wallet which is compatible with the vapors v3 and earlier."}]},{"title":"Experimental -- EIP1193Bridge","blocks":[{"link":"/v5/api/experimental/#experimental-eip1193bridge","text":"The EIP1193Bridge allows a normal Vapors Signer and Provider to be exposed in as a standard EIP-1193 Provider, which may be useful when interacting with other libraries."}]},{"title":"Experimental -- NonceManager","blocks":[{"link":"/v5/api/experimental/#experimental-noncemanager","text":"The NonceManager is designed to manage the nonce for a Signer, automatically increasing it as it sends transactions."},{"link":"/v5/api/experimental/#experimental-noncemanager","text":"Currently the NonceManager does not handle re-broadcast."},{"link":"/v5/api/experimental/#experimental-noncemanager","text":"If you attempt to send a lot of transactions to the network on a node that does not control that account, the transaction pool may drop your transactions."},{"link":"/v5/api/experimental/#experimental-noncemanager","text":"In the future, it'd be nice if the NonceManager remembered transactions and watched for them on the network, rebroadcasting transactions that appear to have been dropped."},{"link":"/v5/api/experimental/#experimental-noncemanager","text":"Another future feature will be some sort of failure mode."},{"link":"/v5/api/experimental/#experimental-noncemanager","text":"For example, often a transaction is dependent on another transaction being mined first."}]},{"title":"Experimental -- NonceManager -- new NonceManager( signer )","blocks":[{"link":"/v5/api/experimental/#experimental-noncemanager","text":"Create a new NonceManager."}]},{"title":"Experimental -- NonceManager -- nonceManager.signer => Signer","blocks":[{"link":"/v5/api/experimental/#experimental-noncemanager","text":"The signer whose nonce is being managed."}]},{"title":"Experimental -- NonceManager -- nonceManager.provider => Provider","blocks":[{"link":"/v5/api/experimental/#experimental-noncemanager","text":"The provider associated with the signer."}]},{"title":"Experimental -- NonceManager -- nonceManager.setTransactionCount( count ) => void","blocks":[{"link":"/v5/api/experimental/#experimental-noncemanager","text":"Set the current transaction count (nonce) for the signer."},{"link":"/v5/api/experimental/#experimental-noncemanager","text":"This may be useful in interacting with the signer outside of using this class."}]},{"title":"Experimental -- NonceManager -- nonceManager.increaseTransactionCount( [ count = 1 ] ) => void","blocks":[{"link":"/v5/api/experimental/#experimental-noncemanager","text":"Bump the current transaction count (nonce) by count."},{"link":"/v5/api/experimental/#experimental-noncemanager","text":"This may be useful in interacting with the signer outside of using this class."}]},{"title":"Application Programming Interface","blocks":[{"link":"/v5/api/#api","text":"An Application Programming Interface (API) is the formal specification of the library."}]},{"title":"Utilities -- Assembler","blocks":[{"link":"/v5/api/other/assembly/api/#asm-utilities","text":"The assembler utilities allow parsing and assembling an Vapors ASM Dialect source file."}]},{"title":"Utilities -- Assembler -- asm.parse( code ) => Node","blocks":[{"link":"/v5/api/other/assembly/api/#asm-parse","text":"Parse an vapors-format assembly file and return the Abstract Syntax Tree."}]},{"title":"Utilities -- Assembler -- asm.assemble( node ) => string< DataHexString >","blocks":[{"link":"/v5/api/other/assembly/api/","text":"Performs assembly of the Abstract Syntax Tree node and return the resulting bytecode representation."}]},{"title":"Utilities -- Disassembler","blocks":[{"link":"/v5/api/other/assembly/api/#asm-utilities","text":"The Disassembler utilities make it easy to convert bytecode into an object which can easily be examined for program structure."}]},{"title":"Utilities -- Disassembler -- asm.disassemble( bytecode ) => Bytecode","blocks":[{"link":"/v5/api/other/assembly/api/","text":"Returns an array of Operations given bytecode."}]},{"title":"Utilities -- Disassembler -- asm.formatBytecode( operations ) => string","blocks":[{"link":"/v5/api/other/assembly/api/","text":"Create a formatted output of an array of Operation."}]},{"title":"Utilities -- Disassembler -- Bytecode","blocks":[{"link":"/v5/api/other/assembly/api/#asm-bytecode","text":"Each array index represents an operation, collapsing multi-byte operations (i.e."},{"link":"/v5/api/other/assembly/api/#asm-bytecode","text":"PUSH) into a single operation."}]},{"title":"Utilities -- Disassembler -- bytecode.getOperation( offset ) => Operation","blocks":[{"link":"/v5/api/other/assembly/api/#asm-bytecode","text":"Get the operation at a given offset into the bytecode."},{"link":"/v5/api/other/assembly/api/#asm-bytecode","text":"This ensures that the byte at offset is an operation and not data contained within a PUSH, in which case null it returned."}]},{"title":"Utilities -- Disassembler -- Operation","blocks":[{"link":"/v5/api/other/assembly/api/#asm-operation","text":"An Operation is a single command from a disassembled bytecode stream."}]},{"title":"Utilities -- Disassembler -- operation.opcode => Opcode","blocks":[{"link":"/v5/api/other/assembly/api/#asm-operation","text":"The opcode for this Operation."}]},{"title":"Utilities -- Disassembler -- operation.offset => number","blocks":[{"link":"/v5/api/other/assembly/api/#asm-operation","text":"The offset into the bytecode for this Operation."}]},{"title":"Utilities -- Disassembler -- operation.pushValue => string< DataHexString >","blocks":[{"link":"/v5/api/other/assembly/api/#asm-operation","text":"If the opcode is a PUSH, this is the value of that push."}]},{"title":"Utilities -- Opcode -- asm.Opcode.from( valueOrMnemonic ) => Opcode","blocks":[{"link":"/v5/api/other/assembly/api/#asm-opcode","text":"Create a new instance of an Opcode for a given numeric value (e.g."},{"link":"/v5/api/other/assembly/api/#asm-opcode","text":"0x60 is PUSH1) or mnemonic string (e.g."},{"link":"/v5/api/other/assembly/api/#asm-opcode","text":"\"PUSH1\")."}]},{"title":"Utilities -- Opcode -- opcode.value => number","blocks":[{"link":"/v5/api/other/assembly/api/","text":"The value (bytecode as a number) of this opcode."}]},{"title":"Utilities -- Opcode -- opcode.mnemonic => string","blocks":[{"link":"/v5/api/other/assembly/api/","text":"The mnemonic string of this opcode."}]},{"title":"Utilities -- Opcode -- opcode.delta => number","blocks":[{"link":"/v5/api/other/assembly/api/","text":"The number of items this opcode will consume from the stack."}]},{"title":"Utilities -- Opcode -- opcode.alpha => number","blocks":[{"link":"/v5/api/other/assembly/api/","text":"The number of items this opcode will push onto the stack."}]},{"title":"Utilities -- Opcode -- opcode.doc => string","blocks":[{"link":"/v5/api/other/assembly/api/","text":"A short description of what this opcode does."}]},{"title":"Utilities -- Opcode -- opcode.isMemory( ) => \"read\" | \"write\" | \"full\"","blocks":[{"link":"/v5/api/other/assembly/api/","text":"Returns true if the opcode accesses memory."}]},{"title":"Utilities -- Opcode -- opcode.isStatic( ) => boolean","blocks":[{"link":"/v5/api/other/assembly/api/","text":"Returns true if the opcode cannot change state."}]},{"title":"Utilities -- Opcode -- opcode.isJump( ) => boolean","blocks":[{"link":"/v5/api/other/assembly/api/","text":"Returns true if the opcode is a jumper operation."}]},{"title":"Utilities -- Opcode -- opcode.isPush( ) => number","blocks":[{"link":"/v5/api/other/assembly/api/","text":"Returns 0 if the opcode is not a PUSH*, or the number of bytes this opcode will push if it is."}]},{"title":"Abstract Syntax Tree","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-ast","text":"Parsing a file using the Vapors ASM Dialect will generate an Abstract Syntax Tree."},{"link":"/v5/api/other/assembly/ast/#asm-ast","text":"The root node will always be a ScopeNode whose name is _."},{"link":"/v5/api/other/assembly/ast/#asm-ast","text":"To parse a file into an Abstract Syntax tree, use the parse function."}]},{"title":"Abstract Syntax Tree -- Types -- offset => number","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-location","text":"The offset into the source code to the start of this node."}]},{"title":"Abstract Syntax Tree -- Types -- length => number","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-location","text":"The length of characters in the source code to the end of this node."}]},{"title":"Abstract Syntax Tree -- Types -- source => string","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-location","text":"The source code of this node."}]},{"title":"Abstract Syntax Tree -- Nodes","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-ast","text":"@TODO: Place a diagram here showing the hierarchy."}]},{"title":"Abstract Syntax Tree -- Nodes -- node.tag => string","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-node","text":"A unique tag for this node for the lifetime of the process."}]},{"title":"Abstract Syntax Tree -- Nodes -- node.location => Location","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-node","text":"The source code and location within the source code that this node represents."}]},{"title":"Abstract Syntax Tree -- Nodes -- ValueNode","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-valuenode","text":"A ValueNode is a node which may manipulate the stack."}]},{"title":"Abstract Syntax Tree -- Nodes -- literalNode.value => string","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-literalnode","text":"The literal value of this node, which may be a DataHexString or string of a decimal number."}]},{"title":"Abstract Syntax Tree -- Nodes -- literalNode.verbatim => boolean","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-literalnode","text":"This is true in a DataNode context, since in that case the value should be taken verbatim and no PUSH operation should be added, otherwise false."}]},{"title":"Abstract Syntax Tree -- Nodes -- PopNode","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-popnode","text":"A PopNode is used to store a place-holder for an implicit pop from the stack."},{"link":"/v5/api/other/assembly/ast/#asm-popnode","text":"It represents the code for an implicit place-holder (i.e."},{"link":"/v5/api/other/assembly/ast/#asm-popnode","text":"$$) or an explicit place-holder (e.g."},{"link":"/v5/api/other/assembly/ast/#asm-popnode","text":"$1), which indicates the expected stack position to consume."}]},{"title":"Abstract Syntax Tree -- Nodes -- literalNode.index => number","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-popnode","text":"The index this PopNode is representing."},{"link":"/v5/api/other/assembly/ast/#asm-popnode","text":"For an implicit place-holder this is 0."}]},{"title":"Abstract Syntax Tree -- Nodes -- LinkNode","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-linknode","text":"A LinkNode represents a link to another Node's data, for example $foo or #bar."}]},{"title":"Abstract Syntax Tree -- Nodes -- linkNode.label => string","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-linknode","text":"The name of the target node."}]},{"title":"Abstract Syntax Tree -- Nodes -- linkNode.type => \"offset\" | \"length\"","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-linknode","text":"Whether this node is for an offset or a length value of the target node."}]},{"title":"Abstract Syntax Tree -- Nodes -- opcodeNode.opcode => Opcode","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-opcodenode","text":"The opcode for this Node."}]},{"title":"Abstract Syntax Tree -- Nodes -- opcodeNode.operands => Array< ValueNode >","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-opcodenode","text":"A list of all operands passed into this Node."}]},{"title":"Abstract Syntax Tree -- Nodes -- EvaluationNode","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-evaluationnode","text":"An EvaluationNode is used to execute code and insert the results but does not generate any output assembly, using the {{! code here }} syntax."}]},{"title":"Abstract Syntax Tree -- Nodes -- literalNode.verbatim => boolean","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-evaluationnode","text":"This is true in a DataNode context, since in that case the value should be taken verbatim and no PUSH operation should be added, otherwise false."}]},{"title":"Abstract Syntax Tree -- Nodes -- evaluationNode.script => string","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-evaluationnode","text":"The code to evaluate and produce the result to use as a literal."}]},{"title":"Abstract Syntax Tree -- Nodes -- ExecutionNode","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-executionnode","text":"An ExecutionNode is used to execute code but does not generate any output assembly, using the {{! code here }} syntax."}]},{"title":"Abstract Syntax Tree -- Nodes -- evaluationNode.script => string","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-executionnode","text":"The code to execute."},{"link":"/v5/api/other/assembly/ast/#asm-executionnode","text":"Any result is ignored."}]},{"title":"Abstract Syntax Tree -- Nodes -- LabelledNode","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-labellednode","text":"A LabelledNode is used for any Node that has a name, and can therefore be targeted by a LinkNode."}]},{"title":"Abstract Syntax Tree -- Nodes -- labelledNode.name => string","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-labellednode","text":"The name of this node."}]},{"title":"Abstract Syntax Tree -- Nodes -- LabelNode","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-labelnode","text":"A LabelNode is used as a place to JUMP to by referencing it name, using @myLabel:."},{"link":"/v5/api/other/assembly/ast/#asm-labelnode","text":"A JUMPDEST is automatically inserted at the bytecode offset."}]},{"title":"Abstract Syntax Tree -- Nodes -- DataNode","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-datanode","text":"A DataNode allows for data to be inserted directly into the output assembly, using @myData[ ..."},{"link":"/v5/api/other/assembly/ast/#asm-datanode","text":"]."},{"link":"/v5/api/other/assembly/ast/#asm-datanode","text":"The data is padded if needed to ensure values that would otherwise be regarded as a PUSH value does not impact anything past the data."}]},{"title":"Abstract Syntax Tree -- Nodes -- dataNode.data => Array< ValueNode >","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-datanode","text":"The child nodes, which each represent a verbatim piece of data in insert."}]},{"title":"Abstract Syntax Tree -- Nodes -- ScopeNode","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-scopenode","text":"A ScopeNode allows a new frame of reference that all LinkNode's will use when resolving offset locations, using @myScope{ ..."},{"link":"/v5/api/other/assembly/ast/#asm-scopenode","text":"}."}]},{"title":"Abstract Syntax Tree -- Nodes -- scopeNode.statements => Array< Node >","blocks":[{"link":"/v5/api/other/assembly/ast/#asm-scopenode","text":"The list of child nodes for this scope."}]},{"title":"Vapors ASM Dialect","blocks":[{"link":"/v5/api/other/assembly/dialect/#asm-dialect","text":"This provides a quick, high-level overview of the Vapors ASM Dialect for EVM, which is defined by the Vapors ASM Dialect Grammar."},{"link":"/v5/api/other/assembly/dialect/#asm-dialect","text":"Once a program is compiled by a higher level language into ASM (assembly), or hand-coded directly in ASM, it needs to be assembled into bytecode."},{"link":"/v5/api/other/assembly/dialect/#asm-dialect","text":"The assembly process performs a very small set of operations and is intentionally simple and closely related to the underlying EVM bytecode."},{"link":"/v5/api/other/assembly/dialect/#asm-dialect","text":"Operations include embedding programs within programs (for example the deployment bootstrap has the runtime embedded in it) and computing the necessary offsets for jump operations."},{"link":"/v5/api/other/assembly/dialect/#asm-dialect","text":"The Command-Line Assembler can be used to assemble an Vapors ASM Dialect file or to disassemble bytecode into its human-readable (ish) opcodes and literals."}]},{"title":"Vapors ASM Dialect -- Opcodes","blocks":[{"link":"/v5/api/other/assembly/dialect/#asm-dialect-opcode","text":"An Opcode may be provided in either a functional or instructional syntax."},{"link":"/v5/api/other/assembly/dialect/#asm-dialect-opcode","text":"For Opcodes that require parameters, the functional syntax is recommended and the instructional syntax will raise a warning."},{"link":"/v5/api/other/assembly/dialect/#asm-dialect-opcode","text":"@TODO: Examples."}]},{"title":"Vapors ASM Dialect -- Labels","blocks":[{"link":"/v5/api/other/assembly/dialect/#asm-dialect-label","text":"A Label is a position in the program which can be jumped to."},{"link":"/v5/api/other/assembly/dialect/#asm-dialect-label","text":"A JUMPDEST is automatically added to this point in the assembled output."},{"link":"/v5/api/other/assembly/dialect/#asm-dialect-label","text":"@TODO: Examples."}]},{"title":"Vapors ASM Dialect -- Literals","blocks":[{"link":"/v5/api/other/assembly/dialect/#asm-dialect-literal","text":"A Literal puts data on the stack when executed using a PUSH operation."},{"link":"/v5/api/other/assembly/dialect/#asm-dialect-literal","text":"A Literal can be provided using a DataHexString or a decimal byte value."},{"link":"/v5/api/other/assembly/dialect/#asm-dialect-literal","text":"@TODO: examples."}]},{"title":"Vapors ASM Dialect -- Comments","blocks":[{"link":"/v5/api/other/assembly/dialect/#asm-dialect-comment","text":"To enter a comment in the Vapors ASM Dialect, any text following a semi-colon (i.e."},{"link":"/v5/api/other/assembly/dialect/#asm-dialect-comment","text":";) is ignored by the assembler."}]},{"title":"Vapors ASM Dialect -- Scopes","blocks":[{"link":"/v5/api/other/assembly/dialect/#asm-dialect-scope","text":"A common case in Vapory is to have one program embedded in another."},{"link":"/v5/api/other/assembly/dialect/#asm-dialect-scope","text":"The most common use of this is embedding a Contract runtime bytecode within a deployment bytecode, which can be used as init code."},{"link":"/v5/api/other/assembly/dialect/#asm-dialect-scope","text":"When deploying a program to Vapory, an init transaction is used."},{"link":"/v5/api/other/assembly/dialect/#asm-dialect-scope","text":"An init transaction has a null to address and contains bytecode in the data."},{"link":"/v5/api/other/assembly/dialect/#asm-dialect-scope","text":"This data bytecode is a program, that when executed returns some other bytecode as a result, this result is the bytecode to be installed."},{"link":"/v5/api/other/assembly/dialect/#asm-dialect-scope","text":"Therefore it is important that embedded code uses jumps relative to itself, not the entire program it is embedded in, which also means that a jump can only target its own scope, no parent or child scopes."},{"link":"/v5/api/other/assembly/dialect/#asm-dialect-scope","text":"This is enforced by the assembler."},{"link":"/v5/api/other/assembly/dialect/#asm-dialect-scope","text":"A scope may access the offset of any child Data Segment or child Scopes (with respect to itself) and may access the length of any Data Segment or Scopes anywhere in the program."},{"link":"/v5/api/other/assembly/dialect/#asm-dialect-scope","text":"Every program in the Vapors ASM Dialect has a top-level scope named _."}]},{"title":"Vapors ASM Dialect -- Data Segment","blocks":[{"link":"/v5/api/other/assembly/dialect/#asm-dialect-datasegment","text":"A Data Segment allows arbitrary data to be embedded into a program, which can be useful for lookup tables or deploy-time constants."},{"link":"/v5/api/other/assembly/dialect/#asm-dialect-datasegment","text":"An empty Data Segment can also be used when a labelled location is required, but without the JUMPDEST which a Labels adds."},{"link":"/v5/api/other/assembly/dialect/#asm-dialect-datasegment","text":"@TODO: Example."}]},{"title":"Vapors ASM Dialect -- Links","blocks":[{"link":"/v5/api/other/assembly/dialect/#asm-dialect-links","text":"A Link allows access to a Scopes, Data Segment or Labels."},{"link":"/v5/api/other/assembly/dialect/#asm-dialect-links","text":"To access the byte offset of a labelled item, use $foobar."},{"link":"/v5/api/other/assembly/dialect/#asm-dialect-links","text":"For a Labels, the target must be directly reachable within this scope."},{"link":"/v5/api/other/assembly/dialect/#asm-dialect-links","text":"For a Data Segment or a Scopes, it can be inside the same scope or any child scope."},{"link":"/v5/api/other/assembly/dialect/#asm-dialect-links","text":"For a Data Segment or a Labels, there is an additional type of Link, which provides the length of the data or bytecode respectively."},{"link":"/v5/api/other/assembly/dialect/#asm-dialect-links","text":"A Length Link is accessed by #foobar and is pushed on the stack as a literal."}]},{"title":"Vapors ASM Dialect -- Stack Placeholders","blocks":[{"link":"/v5/api/other/assembly/dialect/#asm-dialect-placeholder","text":"@TODO: exampl."}]},{"title":"Assembly","blocks":[{"link":"/v5/api/other/assembly/","text":"This module should still be considered fairly experimental."}]},{"title":"Hardware Wallets -- LedgerSigner","blocks":[{"link":"/v5/api/other/hardware/#hw-ledger","text":"The Ledger Hardware Wallets are a fairly popular brand."}]},{"title":"Hardware Wallets -- LedgerSigner -- new LedgerSigner( [ provider [ , type [ , path ] ] ] ) => LedgerSigner","blocks":[{"link":"/v5/api/other/hardware/","text":"Connects to a Ledger Hardware Wallet."},{"link":"/v5/api/other/hardware/","text":"The type if left unspecified is determined by the environment; in node the default is \"hid\" and in the browser \"u2f\" is the default."},{"link":"/v5/api/other/hardware/","text":"The default Vapory path is used if path is left unspecified."}]},{"title":"Other Libraries","blocks":[{"link":"/v5/api/other/","text":"Now that vapors is more modular, it is possible to have additional ancillary packages, which are not part of the core but optionally add functionality only needed in certain situations."}]},{"title":"API Providers","blocks":[{"link":"/v5/api/providers/api-providers/#api-providers","text":"There are many services which offer a web API for accessing the Vapory Blockchain."},{"link":"/v5/api/providers/api-providers/#api-providers","text":"These Providers allow connecting to them, which simplifies development, since you do not need to run your own instance or cluster of Vapory nodes."},{"link":"/v5/api/providers/api-providers/#api-providers","text":"However, this reliance on third-party services can reduce resilience, security and increase the amount of required trust."},{"link":"/v5/api/providers/api-providers/#api-providers","text":"To mitigate these issues, it is recommended you use a Default Provider."}]},{"title":"API Providers -- VaporscanProvider","blocks":[{"link":"/v5/api/providers/api-providers/#VaporscanProvider","text":"The VaporscanProvider is backed by a combination of the various Vaporscan APIs."}]},{"title":"API Providers -- VaporscanProvider -- new vapors.providers.VaporscanProvider( [ network = \"homestead\" , [ apiKey ] ] )","blocks":[{"link":"/v5/api/providers/api-providers/#VaporscanProvider","text":"Create a new VaporscanProvider connected to network with the optional apiKey."},{"link":"/v5/api/providers/api-providers/#VaporscanProvider","text":"The network may be specified as a string for a common network name, a number for a common chain ID or a [Network Object]provider-(network)."},{"link":"/v5/api/providers/api-providers/#VaporscanProvider","text":"If no apiKey is provided, a shared API key will be used, which may result in reduced performance and throttled requests."},{"link":"/v5/api/providers/api-providers/#VaporscanProvider","text":"It is highly recommended for production, you register with Vaporscan for your own API key."}]},{"title":"API Providers -- VaporscanProvider -- Note: Default API keys","blocks":[{"link":"/v5/api/providers/api-providers/#VaporscanProvider","text":"If no apiKey is provided, a shared API key will be used, which may result in reduced performance and throttled requests."},{"link":"/v5/api/providers/api-providers/#VaporscanProvider","text":"It is highly recommended for production, you register with Vaporscan for your own API key."}]},{"title":"API Providers -- VaporscanProvider -- Supported Networks","blocks":[{"link":"/v5/api/providers/api-providers/#VaporscanProvider","text":"Homestead (Mainnet) Ropsten (proof-of-work testnet) Rinkeby (proof-of-authority testnet) G&ouml;rli (clique testnet) Kovan (proof-of-authority testnet)."}]},{"title":"API Providers -- VaporscanProvider -- provider.getHistory( address ) => Array< History >","blocks":[{"link":"/v5/api/providers/api-providers/#VaporscanProvider","text":"@TODO..."},{"link":"/v5/api/providers/api-providers/#VaporscanProvider","text":"Explain."}]},{"title":"API Providers -- InfuraProvider","blocks":[{"link":"/v5/api/providers/api-providers/#InfuraProvider","text":"The InfuraProvider is backed by the popular INFURA Vapory service."}]},{"title":"API Providers -- InfuraProvider -- new vapors.providers.InfuraProvider( [ network = \"homestead\" , [ apiKey ] ] )","blocks":[{"link":"/v5/api/providers/api-providers/#InfuraProvider","text":"Create a new InfuraProvider connected to network with the optional apiKey."},{"link":"/v5/api/providers/api-providers/#InfuraProvider","text":"The network may be specified as a string for a common network name, a number for a common chain ID or a [Network Object]provider-(network)."},{"link":"/v5/api/providers/api-providers/#InfuraProvider","text":"The apiKey can be a string Project ID or an object with the properties projectId and projectSecret to specify a Project Secret which can be used on non-public sources (like on a server) to further secure your API access and quotas."}]},{"title":"API Providers -- InfuraProvider -- InfuraProvider.getWebSocketProvider( [ network [ , apiKey ] ] ) => WebSocketProvider","blocks":[{"link":"/v5/api/providers/api-providers/#InfuraProvider-getWebSocketProvider","text":"Create a new WebSocketProvider using the INFURA web-socket endpoint to connect to network with the optional apiKey."},{"link":"/v5/api/providers/api-providers/#InfuraProvider-getWebSocketProvider","text":"The network and apiKey are specified the same as the constructor."}]},{"title":"API Providers -- InfuraProvider -- Note: Default API keys","blocks":[{"link":"/v5/api/providers/api-providers/#InfuraProvider","text":"If no apiKey is provided, a shared API key will be used, which may result in reduced performance and throttled requests."},{"link":"/v5/api/providers/api-providers/#InfuraProvider","text":"It is highly recommended for production, you register with INFURA for your own API key."}]},{"title":"API Providers -- InfuraProvider -- Supported Networks","blocks":[{"link":"/v5/api/providers/api-providers/#InfuraProvider","text":"Homestead (Mainnet) Ropsten (proof-of-work testnet) Rinkeby (proof-of-authority testnet) G&ouml;rli (clique testnet) Kovan (proof-of-authority testnet)."}]},{"title":"API Providers -- AlchemyProvider","blocks":[{"link":"/v5/api/providers/api-providers/#AlchemyProvider","text":"The AlchemyProvider is backed by Alchemy."}]},{"title":"API Providers -- AlchemyProvider -- new vapors.providers.AlchemyProvider( [ network = \"homestead\" , [ apiKey ] ] )","blocks":[{"link":"/v5/api/providers/api-providers/#AlchemyProvider","text":"Create a new AlchemyProvider connected to network with the optional apiKey."},{"link":"/v5/api/providers/api-providers/#AlchemyProvider","text":"The network may be specified as a string for a common network name, a number for a common chain ID or a Network Object."}]},{"title":"API Providers -- AlchemyProvider -- Note: Default API keys","blocks":[{"link":"/v5/api/providers/api-providers/#AlchemyProvider","text":"If no apiKey is provided, a shared API key will be used, which may result in reduced performance and throttled requests."},{"link":"/v5/api/providers/api-providers/#AlchemyProvider","text":"It is highly recommended for production, you register with Alchemy for your own API key."}]},{"title":"API Providers -- AlchemyProvider -- Supported Networks","blocks":[{"link":"/v5/api/providers/api-providers/#AlchemyProvider","text":"Homestead (Mainnet) Ropsten (proof-of-work testnet) Rinkeby (proof-of-authority testnet) G&ouml;rli (clique testnet) Kovan (proof-of-authority testnet)."}]},{"title":"API Providers -- CloudflareProvider","blocks":[{"link":"/v5/api/providers/api-providers/#CloudflareProvider","text":"The CloudflareProvider is backed by the Cloudflare Vapory Gateway."}]},{"title":"API Providers -- CloudflareProvider -- new vapors.providers.CloudflareProvider( )","blocks":[{"link":"/v5/api/providers/api-providers/#CloudflareProvider","text":"Create a new CloudflareProvider connected to mainnet (i.e."},{"link":"/v5/api/providers/api-providers/#CloudflareProvider","text":"\"homestead\")."}]},{"title":"API Providers -- CloudflareProvider -- Supported Networks","blocks":[{"link":"/v5/api/providers/api-providers/#CloudflareProvider","text":"Homestead (Mainnet)."}]},{"title":"Providers","blocks":[{"link":"/v5/api/providers/#providers","text":"A Provider is an abstraction of a connection to the Vapory network, providing a concise, consistent interface to standard Vapory node functionality."},{"link":"/v5/api/providers/#providers","text":"The vapors.js library provides several options which should cover the vast majority of use-cases, but also includes the necessary functions and classes for sub-classing if a more custom configuration is necessary."},{"link":"/v5/api/providers/#providers","text":"Most users should use the Default Provider."}]},{"title":"Providers -- Default Provider","blocks":[{"link":"/v5/api/providers/#providers-getDefaultProvider","text":"The default provider is the safest, easiest way to begin developing on Vapory, and it is also robust enough for use in production."},{"link":"/v5/api/providers/#providers-getDefaultProvider","text":"It creates a FallbackProvider connected to as many backend services as possible."},{"link":"/v5/api/providers/#providers-getDefaultProvider","text":"When a request is made, it is sent to multiple backends simultaneously."},{"link":"/v5/api/providers/#providers-getDefaultProvider","text":"As responses from each backend are returned, they are checked that they agree."},{"link":"/v5/api/providers/#providers-getDefaultProvider","text":"Once a quorum has been reached (i.e."},{"link":"/v5/api/providers/#providers-getDefaultProvider","text":"enough of the backends agree), the response is provided to your application."},{"link":"/v5/api/providers/#providers-getDefaultProvider","text":"This ensures that if a backend has become out-of-sync, or if it has been compromised that its responses are dropped in favor of responses that match the majority."}]},{"title":"Providers -- Default Provider -- vapors.getDefaultProvider( [ network , [ options ] ] ) => Provider","blocks":[{"link":"/v5/api/providers/#providers-getDefaultProvider","text":"Returns a new Provider, backed by multiple services, connected to network."},{"link":"/v5/api/providers/#providers-getDefaultProvider","text":"If no network is provided, homestead (i.e."},{"link":"/v5/api/providers/#providers-getDefaultProvider","text":"mainnet) is used."},{"link":"/v5/api/providers/#providers-getDefaultProvider","text":"The network may also be a URL to connect to, such as http://localhost:8545 or wss://example.com."},{"link":"/v5/api/providers/#providers-getDefaultProvider","text":"The options is an object, with the following properties:."}]},{"title":"Providers -- Default Provider -- Note: API Keys","blocks":[{"link":"/v5/api/providers/#providers-getDefaultProvider","text":"It is highly recommended for production services to acquire and specify an API Key for each service."},{"link":"/v5/api/providers/#providers-getDefaultProvider","text":"The default API Keys used by vapors are shared across all users, so services may throttle all services that are using the default API Keys during periods of load without realizing it."},{"link":"/v5/api/providers/#providers-getDefaultProvider","text":"Many services also have monitoring and usage metrics, which are only available if an API Key is specified."},{"link":"/v5/api/providers/#providers-getDefaultProvider","text":"This allows tracking how many requests are being sent and which methods are being used the most."},{"link":"/v5/api/providers/#providers-getDefaultProvider","text":"Some services also provide additional paid features, which are only available when specifying an API Key."}]},{"title":"Providers -- Networks","blocks":[{"link":"/v5/api/providers/#providers","text":"There are several official common Vapory networks as well as custom networks and other compatible projects."},{"link":"/v5/api/providers/#providers","text":"Any API that accept a Networkish can be passed a common name (such as \"mainnet\" or \"ropsten\") to use that network definition or may specify custom parameters."}]},{"title":"Providers -- Networks -- Custom ENS Contract","blocks":[{"link":"/v5/api/providers/","text":"One common reason to specify custom properties for a Network is to override the address of the root ENS registry, either on a common network to intercept the ENS Methods or to specify the ENS registry on a dev network (on most dev networks you must deploy the ENS contracts manually)."}]},{"title":"JsonRpcProvider","blocks":[{"link":"/v5/api/providers/jsonrpc-provider/#JsonRpcProvider","text":"The JSON-RPC API is a popular method for interacting with Vapory and is available in all major Vapory node implementations (e.g."},{"link":"/v5/api/providers/jsonrpc-provider/#JsonRpcProvider","text":"Geth and Parity) as well as many third-party web services (e.g."},{"link":"/v5/api/providers/jsonrpc-provider/#JsonRpcProvider","text":"INFURA)."}]},{"title":"JsonRpcProvider -- Provider Documentation -- new vapors.providers.JsonRpcProvider( [ url [ , aNetworkish ] ] )","blocks":[{"link":"/v5/api/providers/jsonrpc-provider/#JsonRpcProvider","text":"Connect to a JSON-RPC API located at url using the aNetworkish network."},{"link":"/v5/api/providers/jsonrpc-provider/#JsonRpcProvider","text":"If url is not specified, the default (i.e."},{"link":"/v5/api/providers/jsonrpc-provider/#JsonRpcProvider","text":"http://localhost:8545) is used and if no network is specified, it will be determined automatically by querying the node."}]},{"title":"JsonRpcProvider -- Provider Documentation -- Note: Connecting to a Local Node","blocks":[{"link":"/v5/api/providers/jsonrpc-provider/#JsonRpcProvider","text":"Each node implementation is slightly different and may require specific command-line flags, configuration or settings in their UI to enable JSON-RPC, unlock accounts or expose specific APIs."},{"link":"/v5/api/providers/jsonrpc-provider/#JsonRpcProvider","text":"Please consult their documentation."}]},{"title":"JsonRpcProvider -- Provider Documentation -- jsonRpcProvider.getSigner( [ addressOrIndex ] ) => JsonRpcSigner","blocks":[{"link":"/v5/api/providers/jsonrpc-provider/#JsonRpcProvider-getSigner","text":"Returns a JsonRpcSigner which is managed by this Vapory node, at addressOrIndex."},{"link":"/v5/api/providers/jsonrpc-provider/#JsonRpcProvider-getSigner","text":"If no addressOrIndex is provided, the first account (account #0) is used."}]},{"title":"JsonRpcProvider -- Provider Documentation -- jsonRpcProvider.listAccounts( ) => Array< string >","blocks":[{"link":"/v5/api/providers/jsonrpc-provider/#JsonRpcProvider-listAccounts","text":"Returns a list of all account addresses managed by this provider."}]},{"title":"JsonRpcProvider -- Provider Documentation -- jsonRpcProvider.send( method , params ) => Promise< any >","blocks":[{"link":"/v5/api/providers/jsonrpc-provider/#JsonRpcProvider-send","text":"Allows sending raw messages to the provider."},{"link":"/v5/api/providers/jsonrpc-provider/#JsonRpcProvider-send","text":"This can be used for backend-specific calls, such as for debugging or specific account management."}]},{"title":"JsonRpcProvider -- JsonRpcSigner","blocks":[{"link":"/v5/api/providers/jsonrpc-provider/#JsonRpcSigner","text":"A JsonRpcSigner is a simple Signer which is backed by a connected JsonRpcProvider."}]},{"title":"JsonRpcProvider -- JsonRpcSigner -- signer.provider => JsonRpcProvider","blocks":[{"link":"/v5/api/providers/jsonrpc-provider/#JsonRpcSigner","text":"The provider this signer was established from."}]},{"title":"JsonRpcProvider -- JsonRpcSigner -- signer.connectUnchecked( ) => JsonRpcUncheckedSigner","blocks":[{"link":"/v5/api/providers/jsonrpc-provider/#JsonRpcSigner-connectUnchecked","text":"Returns a new Signer object which does not perform additional checks when sending a transaction."},{"link":"/v5/api/providers/jsonrpc-provider/#JsonRpcSigner-connectUnchecked","text":"See getUncheckedSigner for more details."}]},{"title":"JsonRpcProvider -- JsonRpcSigner -- signer.sendUncheckedTransaction( transaction ) => Promise< string< DataHexString< 32 > > >","blocks":[{"link":"/v5/api/providers/jsonrpc-provider/#JsonRpcSigner-sendUncheckedTransaction","text":"Sends the transaction and returns a Promise which resolves to the opaque transaction hash."}]},{"title":"JsonRpcProvider -- JsonRpcSigner -- signer.unlock( password ) => Promise< boolean >","blocks":[{"link":"/v5/api/providers/jsonrpc-provider/#JsonRpcSigner-unlock","text":"Request the node unlock the account (if locked) using password."}]},{"title":"JsonRpcProvider -- JsonRpcUncheckedSigner","blocks":[{"link":"/v5/api/providers/jsonrpc-provider/#UncheckedJsonRpcSigner","text":"The JSON-RPC API only provides a transaction hash as the response when a transaction is sent, but the vapors Provider requires populating all details of a transaction before returning it."},{"link":"/v5/api/providers/jsonrpc-provider/#UncheckedJsonRpcSigner","text":"For example, the gas price and gas limit may be adjusted by the node or the nonce automatically included, in which case the opaque transaction hash has discarded this."},{"link":"/v5/api/providers/jsonrpc-provider/#UncheckedJsonRpcSigner","text":"To remedy this, the JsonRpcSigner immediately queries the provider for the details using the returned transaction hash to populate the TransactionResponse object."},{"link":"/v5/api/providers/jsonrpc-provider/#UncheckedJsonRpcSigner","text":"Some backends do not respond immediately and instead defer releasing the details of a transaction it was responsible for signing until it is mined."},{"link":"/v5/api/providers/jsonrpc-provider/#UncheckedJsonRpcSigner","text":"The UncheckedSigner does not populate any additional information and will immediately return the result as a mock TransactionResponse-like object, with most of the properties set to null, but allows access to the transaction hash quickly, if that is all that is required."}]},{"title":"JsonRpcProvider -- Node-Specific Methods","blocks":[{"link":"/v5/api/providers/jsonrpc-provider/#JsonRpcProvider--other","text":"Many methods are less common or specific to certain Vapory Node implementations (e.g."},{"link":"/v5/api/providers/jsonrpc-provider/#JsonRpcProvider--other","text":"Parity vs Gvap."},{"link":"/v5/api/providers/jsonrpc-provider/#JsonRpcProvider--other","text":"These include account and admin management, debugging, deeper block and transaction exploration and other services (such as Swarm and Whisper)."},{"link":"/v5/api/providers/jsonrpc-provider/#JsonRpcProvider--other","text":"The jsonRpcProvider.send method can be used to access these."},{"link":"/v5/api/providers/jsonrpc-provider/#JsonRpcProvider--other","text":"All JSON-RPC methods (including the less common methods) which most Vapory Nodes support."},{"link":"/v5/api/providers/jsonrpc-provider/#JsonRpcProvider--other","text":"Parity's Trace Module can be used to trace and debug EVM execution of a transaction (requires custom configuration) Geth's Debug Module can be used to debug transactions and internal cache state, etc."},{"link":"/v5/api/providers/jsonrpc-provider/#JsonRpcProvider--other","text":"Additional Geth Methods Additional Parity Methods."}]},{"title":"Other Providers","blocks":[{"link":"/v5/api/providers/other/","text":"Others..."}]},{"title":"Other Providers -- FallbackProvider","blocks":[{"link":"/v5/api/providers/other/#FallbackProvider","text":"The FallbackProvider is the most advanced Provider available in vapors."},{"link":"/v5/api/providers/other/#FallbackProvider","text":"It uses a quorum and connects to multiple Providers as backends, each configured with a priority and a weight."},{"link":"/v5/api/providers/other/#FallbackProvider","text":"When a request is made, the request is dispatched to multiple backends, randomly chosen (higher priority backends are always selected first) and the results from each are compared against the others."},{"link":"/v5/api/providers/other/#FallbackProvider","text":"Only once the quorum has been reached will that result be accepted and returned to the caller."},{"link":"/v5/api/providers/other/#FallbackProvider","text":"By default the quorum requires 50% (rounded up) of the backends to agree."},{"link":"/v5/api/providers/other/#FallbackProvider","text":"The weight can be used to give a backend Provider more influence."}]},{"title":"Other Providers -- FallbackProvider -- new vapors.providers.FallbackProvider( providers [ , quorum ] )","blocks":[{"link":"/v5/api/providers/other/#FallbackProvider","text":"Creates a new instance of a FallbackProvider connected to providers."},{"link":"/v5/api/providers/other/#FallbackProvider","text":"If quorum is not specified, half of the total sum of the provider weights is used."},{"link":"/v5/api/providers/other/#FallbackProvider","text":"The providers can be either an array of Provider or FallbackProviderConfig."},{"link":"/v5/api/providers/other/#FallbackProvider","text":"If a Provider is provided, the defaults are a priority of 1 and a weight of 1."}]},{"title":"Other Providers -- FallbackProvider -- provider.providerConfigs => Array< FallbackProviderConfig >","blocks":[{"link":"/v5/api/providers/other/#FallbackProvider","text":"The list of Provider Configurations that describe the backends."}]},{"title":"Other Providers -- FallbackProvider -- provider.quorum => number","blocks":[{"link":"/v5/api/providers/other/#FallbackProvider","text":"The quorum the backend responses must agree upon before a result will be resolved."},{"link":"/v5/api/providers/other/#FallbackProvider","text":"By default this is half the sum of the weights."}]},{"title":"Other Providers -- FallbackProvider -- fallbackProviderConfig.provider => Provider","blocks":[{"link":"/v5/api/providers/other/#FallbackProviderConfig","text":"The provider for this configuration."}]},{"title":"Other Providers -- FallbackProvider -- fallbackProviderConfig.priority => number","blocks":[{"link":"/v5/api/providers/other/#FallbackProviderConfig","text":"The priority used for the provider."},{"link":"/v5/api/providers/other/#FallbackProviderConfig","text":"Higher priorities are favoured over lower priorities."},{"link":"/v5/api/providers/other/#FallbackProviderConfig","text":"If multiple providers share the same priority, they are chosen at random."}]},{"title":"Other Providers -- FallbackProvider -- fallbackProviderConfig.stallTimeout => number","blocks":[{"link":"/v5/api/providers/other/#FallbackProviderConfig","text":"The timeout (in ms) after which another Provider will be attempted."},{"link":"/v5/api/providers/other/#FallbackProviderConfig","text":"This does not affect the current Provider; if it returns a result it is counted as part of the quorum."},{"link":"/v5/api/providers/other/#FallbackProviderConfig","text":"Lower values will result in more network traffic, but may reduce the response time of requests."}]},{"title":"Other Providers -- FallbackProvider -- fallbackProviderConfig.weight => number","blocks":[{"link":"/v5/api/providers/other/#FallbackProviderConfig","text":"The weight a response from this provider provides."},{"link":"/v5/api/providers/other/#FallbackProviderConfig","text":"This can be used if a given Provider is more trusted, for example."}]},{"title":"Other Providers -- IpcProvider","blocks":[{"link":"/v5/api/providers/other/#IpcProvider","text":"The IpcProvider allows the JSON-RPC API to be used over a local filename on the file system, exposed by Geth, Parity and other nodes."},{"link":"/v5/api/providers/other/#IpcProvider","text":"This is only available in node.js (as it requires file system access, and may have additional complications due to file permissions."},{"link":"/v5/api/providers/other/#IpcProvider","text":"See any related notes on the documentation for the actual node implementation websites."}]},{"title":"Other Providers -- IpcProvider -- ipcProvider.path => string","blocks":[{"link":"/v5/api/providers/other/#IpcProvider","text":"The path this Provider is connected to."}]},{"title":"Other Providers -- UrlJsonRpcProvider","blocks":[{"link":"/v5/api/providers/other/#UrlJsonRpcProvider","text":"This class is intended to be sub-classed and not used directly."},{"link":"/v5/api/providers/other/#UrlJsonRpcProvider","text":"It simplifies creating a Provider where a normal JsonRpcProvider would suffice, with a little extra effort needed to generate the JSON-RPC URL."}]},{"title":"Other Providers -- UrlJsonRpcProvider -- new vapors.providers.UrlJsonRpcProvider( [ network [ , apiKey ] ] )","blocks":[{"link":"/v5/api/providers/other/#UrlJsonRpcProvider","text":"Sub-classes do not need to override this."},{"link":"/v5/api/providers/other/#UrlJsonRpcProvider","text":"Instead they should override the static method getUrl and optionally getApiKey."}]},{"title":"Other Providers -- UrlJsonRpcProvider -- urlJsonRpcProvider.apiKey => any","blocks":[{"link":"/v5/api/providers/other/#UrlJsonRpcProvider","text":"The value of the apiKey that was returned from InheritedClass.getApiKey."}]},{"title":"Other Providers -- UrlJsonRpcProvider -- InheritingClass.getApiKey( apiKey ) => any","blocks":[{"link":"/v5/api/providers/other/#UrlJsonRpcProvider","text":"This function should examine the apiKey to ensure it is valid and return a (possible modified) value to use in getUrl."}]},{"title":"Other Providers -- UrlJsonRpcProvider -- InheritingClass.getUrl( network , apiKey ) => string","blocks":[{"link":"/v5/api/providers/other/#UrlJsonRpcProvider","text":"The URL to use for the JsonRpcProvider instance."}]},{"title":"Other Providers -- Web3Provider","blocks":[{"link":"/v5/api/providers/other/#Web3Provider","text":"The Web3Provider is meant to ease moving from a web3.js based application to vapors by wrapping an existing Web3-compatible (such as a Web3HttpProvider, Web3IpcProvider or Web3WsProvider) and exposing it as an vapors.js Provider which can then be used with the rest of the library."},{"link":"/v5/api/providers/other/#Web3Provider","text":"This may also be used to wrap a standard [EIP-1193 Provider](link-eip-1193]."}]},{"title":"Other Providers -- Web3Provider -- new vapors.providers.Web3Provider( externalProvider [ , network ] )","blocks":[{"link":"/v5/api/providers/other/#Web3Provider","text":"Create a new Web3Provider, which wraps an EIP-1193 Provider or Web3Provider-compatible Provider."}]},{"title":"Other Providers -- Web3Provider -- web3Provider.provider => Web3CompatibleProvider","blocks":[{"link":"/v5/api/providers/other/#Web3Provider","text":"The provider used to create this instance."}]},{"title":"Other Providers -- Web3Provider -- ExternalProvider","blocks":[{"link":"/v5/api/providers/other/#Web3Provider--ExternalProvider","text":"An ExternalProvider can be either one for the above mentioned Web3 Providers (or otherwise compatible) or an EIP-1193 provider."},{"link":"/v5/api/providers/other/#Web3Provider--ExternalProvider","text":"An ExternalProvider must offer one of the following signatures, and the first matching is used:."}]},{"title":"Other Providers -- Web3Provider -- externalProvider.request( request ) => Promise< any >","blocks":[{"link":"/v5/api/providers/other/#Web3Provider--ExternalProvider","text":"This follows the EIP-1193 API signature."},{"link":"/v5/api/providers/other/#Web3Provider--ExternalProvider","text":"The request should be a standard JSON-RPC payload, which should at a minimum specify the method and params."},{"link":"/v5/api/providers/other/#Web3Provider--ExternalProvider","text":"The result should be the actual result, which differs from the Web3.js response, which is a wrapped JSON-RPC response."}]},{"title":"Other Providers -- Web3Provider -- externalProvider.sendAsync( request , callback ) => void","blocks":[{"link":"/v5/api/providers/other/#Web3Provider--ExternalProvider","text":"This follows the Web3.js Provider Signature."},{"link":"/v5/api/providers/other/#Web3Provider--ExternalProvider","text":"The request should be a standard JSON-RPC payload, which should at a minimum specify the method and params."},{"link":"/v5/api/providers/other/#Web3Provider--ExternalProvider","text":"The callback should use the error-first calling semantics, so (error, result) where the result is a JSON-RPC wrapped result."}]},{"title":"Other Providers -- Web3Provider -- externalProvider.send( request , callback ) => void","blocks":[{"link":"/v5/api/providers/other/#Web3Provider--ExternalProvider","text":"This is identical to sendAsync."},{"link":"/v5/api/providers/other/#Web3Provider--ExternalProvider","text":"Historically, this used a synchronous web request, but no current browsers support this, so its use this way was deprecated quite a long time ago."}]},{"title":"Other Providers -- WebSocketProvider","blocks":[{"link":"/v5/api/providers/other/#WebSocketProvider","text":"The WebSocketProvider connects to a JSON-RPC WebSocket-compatible backend which allows for a persistent connection, multiplexing requests and pub-sub events for a more immediate event dispatching."},{"link":"/v5/api/providers/other/#WebSocketProvider","text":"The WebSocket API is newer, and if running your own infrastructure, note that WebSockets are much more intensive on your server resources, as they must manage and maintain the state for each client."},{"link":"/v5/api/providers/other/#WebSocketProvider","text":"For this reason, many services may also charge additional fees for using their WebSocket endpoints."}]},{"title":"Other Providers -- WebSocketProvider -- new vapors.provider.WebSocketProvider( [ url [ , network ] ] )","blocks":[{"link":"/v5/api/providers/other/#WebSocketProvider","text":"Returns a new WebSocketProvider connected to url as the network."},{"link":"/v5/api/providers/other/#WebSocketProvider","text":"If url is unspecified, the default \"ws://localhost:8546\" will be used."},{"link":"/v5/api/providers/other/#WebSocketProvider","text":"If network is unspecified, it will be queried from the network."}]},{"title":"Provider","blocks":[{"link":"/v5/api/providers/provider/#Provider","text":"Explain what a provider is..."}]},{"title":"Provider -- Accounts Methods -- provider.getBalance( address [ , blockTag = latest ] ) => Promise< BigNumber >","blocks":[{"link":"/v5/api/providers/provider/#Provider-getBalance","text":"Returns the balance of address as of the blockTag block height."}]},{"title":"Provider -- Accounts Methods -- provider.getCode( address [ , blockTag = latest ] ) => Promise< string< DataHexString > >","blocks":[{"link":"/v5/api/providers/provider/#Provider-getCode","text":"Returns the contract code of address as of the blockTag block height."},{"link":"/v5/api/providers/provider/#Provider-getCode","text":"If there is no contract currently deployed, the result is 0x."}]},{"title":"Provider -- Accounts Methods -- provider.getStorageAt( addr , pos [ , blockTag = latest ] ) => Promise< string< DataHexString > >","blocks":[{"link":"/v5/api/providers/provider/#Provider-getStorageAt","text":"Returns the Bytes32 value of the position pos at address addr, as of the blockTag."}]},{"title":"Provider -- Accounts Methods -- provider.getTransactionCount( address [ , blockTag = latest ] ) => Promise< number >","blocks":[{"link":"/v5/api/providers/provider/#Provider-getTransactionCount","text":"Returns the number of transactions address has ever sent, as of blockTag."},{"link":"/v5/api/providers/provider/#Provider-getTransactionCount","text":"This value is required to be the nonce for the next transaction from address sent to the network."}]},{"title":"Provider -- Blocks Methods -- provider.getBlock( block ) => Promise< Block >","blocks":[{"link":"/v5/api/providers/provider/#Provider-getBlock","text":"Get the block from the network, where the result.transactions is a list of transaction hashes."}]},{"title":"Provider -- Blocks Methods -- provider.getBlockWithTransactions( block ) => Promise< BlockWithTransactions >","blocks":[{"link":"/v5/api/providers/provider/#Provider-getBlockWithTransactions","text":"Get the block from the network, where the result.transactions is an Array of TransactionResponse objects."}]},{"title":"Provider -- Vapory Naming Service (ENS) Methods","blocks":[{"link":"/v5/api/providers/provider/#Provider--ens-methods","text":"The Vapory Naming Service (ENS) allows a short and easy-to-remember ENS Name to be attached to any set of keys and values."},{"link":"/v5/api/providers/provider/#Provider--ens-methods","text":"One of the most common uses for this is to use a simple name to refer to an Vapory Address."},{"link":"/v5/api/providers/provider/#Provider--ens-methods","text":"In the vapors API, nearly anywhere that accepts an address, an ENS name may be used instead, which can simplify code and make reading and debugging much simpler."},{"link":"/v5/api/providers/provider/#Provider--ens-methods","text":"The provider offers some basic operations to help resolve and work with ENS names."}]},{"title":"Provider -- Vapory Naming Service (ENS) Methods -- provider.lookupAddress( address ) => Promise< string >","blocks":[{"link":"/v5/api/providers/provider/#Provider-lookupAddress","text":"Performs a reverse lookup of the address in ENS using the Reverse Registrar."},{"link":"/v5/api/providers/provider/#Provider-lookupAddress","text":"If the name does not exist, or the forward lookup does not match, null is returned."}]},{"title":"Provider -- Vapory Naming Service (ENS) Methods -- provider.resolveName( name ) => Promise< string< Address > >","blocks":[{"link":"/v5/api/providers/provider/#Provider-ResolveName","text":"Looks up the address of name."},{"link":"/v5/api/providers/provider/#Provider-ResolveName","text":"If the name is not owned, or does not have a Resolver configured, or the Resolver does not have an address configured, null is returned."}]},{"title":"Provider -- Logs Methods -- provider.getLogs( filter ) => Promise< Array< Log > >","blocks":[{"link":"/v5/api/providers/provider/#Provider-getLogs","text":"Returns the Array of Log matching the filter."},{"link":"/v5/api/providers/provider/#Provider-getLogs","text":"Keep in mind that many backends will discard old events, and that requests which are too broad may get dropped as they require too many resources to execute the query."}]},{"title":"Provider -- Network Status Methods -- provider.getNetwork( ) => Promise< Network >","blocks":[{"link":"/v5/api/providers/provider/#Provider-getNetwork","text":"Returns the Network this Provider is connected to."}]},{"title":"Provider -- Network Status Methods -- provider.getBlockNumber( ) => Promise< number >","blocks":[{"link":"/v5/api/providers/provider/#Provider-getBlockNumber","text":"Returns the block number (or height) of the most recently mined block."}]},{"title":"Provider -- Network Status Methods -- provider.getGasPrice( ) => Promise< BigNumber >","blocks":[{"link":"/v5/api/providers/provider/#Provider-getGasPrice","text":"Returns a best guess of the Gas Price to use in a transaction."}]},{"title":"Provider -- Transactions Methods -- provider.call( transaction [ , blockTag = latest ] ) => Promise< string< DataHexString > >","blocks":[{"link":"/v5/api/providers/provider/#Provider-call","text":"Returns the result of executing the transaction, using call."},{"link":"/v5/api/providers/provider/#Provider-call","text":"A call does not require any ether, but cannot change any state."},{"link":"/v5/api/providers/provider/#Provider-call","text":"This is useful for calling getters on Contracts."}]},{"title":"Provider -- Transactions Methods -- provider.estimateGas( transaction ) => Promise< BigNumber >","blocks":[{"link":"/v5/api/providers/provider/#Provider-estimateGas","text":"Returns an estimate of the amount of gas that would be required to submit transaction to the network."},{"link":"/v5/api/providers/provider/#Provider-estimateGas","text":"An estimate may not be accurate since there could be another transaction on the network that was not accounted for, but after being mined affected relevant state."}]},{"title":"Provider -- Transactions Methods -- provider.sendTransaction( transaction ) => Promise< TransactionResponse >","blocks":[{"link":"/v5/api/providers/provider/#Provider-sendTransaction","text":"Submits transaction to the network to be mined."},{"link":"/v5/api/providers/provider/#Provider-sendTransaction","text":"The transaction must be signed, and be valid (i.e."},{"link":"/v5/api/providers/provider/#Provider-sendTransaction","text":"the nonce is correct and the account has sufficient balance to pay for the transaction)."}]},{"title":"Provider -- Transactions Methods -- provider.waitForTransaction( hash [ , confirms = 1 [ , timeout ] ] ) => Promise< TxReceipt >","blocks":[{"link":"/v5/api/providers/provider/#Provider-waitForTransaction","text":"Returns a Promise which will not resolve until transactionHash is mined."}]},{"title":"Provider -- Event Emitter Methods","blocks":[{"link":"/v5/api/providers/provider/#Provider--event-methods","text":"Explain events here..."}]},{"title":"Provider -- Event Emitter Methods -- provider.on( eventName , listener ) => this","blocks":[{"link":"/v5/api/providers/provider/#Provider-on","text":"Add a listener to be triggered for each eventName."}]},{"title":"Provider -- Event Emitter Methods -- provider.once( eventName , listener ) => this","blocks":[{"link":"/v5/api/providers/provider/#Provider-once","text":"Add a listener to be triggered for only the next eventName, at which time it will be removed."}]},{"title":"Provider -- Event Emitter Methods -- provider.emit( eventName , ...args ) => boolean","blocks":[{"link":"/v5/api/providers/provider/#Provider-emit","text":"Notify all listeners of eventName, passing args to each listener."},{"link":"/v5/api/providers/provider/#Provider-emit","text":"This is generally only used internally."}]},{"title":"Provider -- Event Emitter Methods -- provider.off( eventName [ , listener ] ) => this","blocks":[{"link":"/v5/api/providers/provider/#Provider-off","text":"Remove a listener for eventName."},{"link":"/v5/api/providers/provider/#Provider-off","text":"If no listener is provided, all listeners for eventName are removed."}]},{"title":"Provider -- Event Emitter Methods -- provider.removeAllListeners( [ eventName ] ) => this","blocks":[{"link":"/v5/api/providers/provider/#Provider-removeAllListeners","text":"Remove all the listeners for eventName."},{"link":"/v5/api/providers/provider/#Provider-removeAllListeners","text":"If no eventName is provided, all events are removed."}]},{"title":"Provider -- Event Emitter Methods -- provider.listenerCount( [ eventName ] ) => number","blocks":[{"link":"/v5/api/providers/provider/#Provider-listenerCount","text":"Returns the number of listeners for eventName."},{"link":"/v5/api/providers/provider/#Provider-listenerCount","text":"If no eventName is provided, the total number of listeners is returned."}]},{"title":"Provider -- Event Emitter Methods -- provider.listeners( eventName ) => Array< Listener >","blocks":[{"link":"/v5/api/providers/provider/#Provider-listeners","text":"Returns the list of Listeners for eventName."}]},{"title":"Provider -- Event Emitter Methods -- Events","blocks":[{"link":"/v5/api/providers/provider/#Provider--events","text":"Any of the following may be used as the eventName in the above methods."}]},{"title":"Provider -- Event Emitter Methods -- Log Filter","blocks":[{"link":"/v5/api/providers/provider/#Provider--events","text":"A filter is an object, representing a contract log Filter, which has the optional properties address (the source contract) and topics (a topic-set to match)."},{"link":"/v5/api/providers/provider/#Provider--events","text":"If address is unspecified, the filter matches any contract address."},{"link":"/v5/api/providers/provider/#Provider--events","text":"See events for more information on how to specify topic-sets."}]},{"title":"Provider -- Event Emitter Methods -- Topic-Set Filter","blocks":[{"link":"/v5/api/providers/provider/#Provider--events","text":"The value of a Topic-Set Filter is a array of Topic-Sets."},{"link":"/v5/api/providers/provider/#Provider--events","text":"This event is identical to a Log Filter with the address omitted (i.e."},{"link":"/v5/api/providers/provider/#Provider--events","text":"from any contract)."}]},{"title":"Provider -- Event Emitter Methods -- Transaction Filter","blocks":[{"link":"/v5/api/providers/provider/#Provider--events","text":"The value of a Transaction Filter is any transaction hash."},{"link":"/v5/api/providers/provider/#Provider--events","text":"This event is emitted on every block that is part of a chain that includes the given mined transaction."},{"link":"/v5/api/providers/provider/#Provider--events","text":"It is much more common that the once method is used than the on method."},{"link":"/v5/api/providers/provider/#Provider--events","text":"In addition to transaction and filter events, there are several named events."}]},{"title":"Provider -- Inspection Methods -- Provider.isProvider( object ) => boolean","blocks":[{"link":"/v5/api/providers/provider/#Provider-isProvider","text":"Returns true if and only if object is a Provider."}]},{"title":"Types -- BlockTag","blocks":[{"link":"/v5/api/providers/types/#providers-BlockTag","text":"A BlockTag specifies a specific location in the Blockchain."},{"link":"/v5/api/providers/types/#providers-BlockTag","text":"\"latest\" -- The most recently mined block \"earliest\" -- Block #0 \"pending\" -- The block currently being prepared for mining; not all operations and backends support this BlockTag number -- The block at this height a negative number -- The block this many blocks ago."}]},{"title":"Types -- BlockTag -- EventType","blocks":[{"link":"/v5/api/providers/types/#providers-EventType","text":"And EventType can be any of the following."},{"link":"/v5/api/providers/types/#providers-EventType","text":"string -- TODO..."},{"link":"/v5/api/providers/types/#providers-EventType","text":"Array<string<DataHexString<32>> | Array<string<DataHexString<32>>>> -- TODO..."},{"link":"/v5/api/providers/types/#providers-EventType","text":"EventFilter -- TODO..."}]},{"title":"Types -- Networkish","blocks":[{"link":"/v5/api/providers/types/#providers-Networkish","text":"A Networkish may be any of the following:."},{"link":"/v5/api/providers/types/#providers-Networkish","text":"a Network object the name of a common network as a string (e.g."},{"link":"/v5/api/providers/types/#providers-Networkish","text":"\"homestead\") the chain ID a network as a number; if the chain ID is that of a common network, the name and ensAddress will be populated, otherwise, the default name \"unknown\" and no ensAddress is used."}]},{"title":"Types -- Network","blocks":[{"link":"/v5/api/providers/types/#providers-Network","text":"A Network represents an Vapory network."}]},{"title":"Types -- Network -- network.name => string","blocks":[{"link":"/v5/api/providers/types/#providers-Network","text":"The human-readable name of the network, such as homestead."},{"link":"/v5/api/providers/types/#providers-Network","text":"If the network name is unknown, this will be \"unknown\"."}]},{"title":"Types -- Network -- network.chainId => number","blocks":[{"link":"/v5/api/providers/types/#providers-Network","text":"The Chain ID of the network."}]},{"title":"Types -- Network -- network.ensAddress => string< Address >","blocks":[{"link":"/v5/api/providers/types/#providers-Network","text":"The address at which the ENS registry is deployed on this network."}]},{"title":"Types -- Block -- block.hash => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/providers/types/#providers-Block","text":"The hash of this block."}]},{"title":"Types -- Block -- block.parentHash => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/providers/types/#providers-Block","text":"The hash of the previous block."}]},{"title":"Types -- Block -- block.number => number","blocks":[{"link":"/v5/api/providers/types/#providers-Block","text":"The height (number) of this block."}]},{"title":"Types -- Block -- block.timestamp => number","blocks":[{"link":"/v5/api/providers/types/#providers-Block","text":"The timestamp of this block."}]},{"title":"Types -- Block -- block.nonce => string< DataHexString >","blocks":[{"link":"/v5/api/providers/types/#providers-Block","text":"The nonce used as part of the proof-of-work to mine this block."},{"link":"/v5/api/providers/types/#providers-Block","text":"This property is generally of little interest to developers."}]},{"title":"Types -- Block -- block.difficulty => number","blocks":[{"link":"/v5/api/providers/types/#providers-Block","text":"The difficulty target required to be met by the miner of the block."},{"link":"/v5/api/providers/types/#providers-Block","text":"This property is generally of little interest to developers."}]},{"title":"Types -- Block -- block.gasLimit => BigNumber","blocks":[{"link":"/v5/api/providers/types/#providers-Block","text":"The maximum amount of gas that this block was permitted to use."},{"link":"/v5/api/providers/types/#providers-Block","text":"This is a value that can be voted up or voted down by miners and is used to automatically adjust the bandwidth requirements of the network."},{"link":"/v5/api/providers/types/#providers-Block","text":"This property is generally of little interest to developers."}]},{"title":"Types -- Block -- block.gasUsed => BigNumber","blocks":[{"link":"/v5/api/providers/types/#providers-Block","text":"The total amount of gas used by all transactions in this block."}]},{"title":"Types -- Block -- block.miner => string","blocks":[{"link":"/v5/api/providers/types/#providers-Block","text":"The coinbase address of this block, which indicates the address the miner that mined this block would like the subsidy reward to go to."}]},{"title":"Types -- Block -- block.extraData => string","blocks":[{"link":"/v5/api/providers/types/#providers-Block","text":"This is extra data a miner may choose to include when mining a block."},{"link":"/v5/api/providers/types/#providers-Block","text":"This property is generally of little interest to developers."}]},{"title":"Types -- Block -- Block (with transaction hashes)","blocks":[{"link":"/v5/api/providers/types/#providers-Block","text":"Often only the hashes of the transactions included in a block are needed, so by default a block only contains this information, as it is substantially less data."}]},{"title":"Types -- Block -- block.transactions => Array< string< DataHexString< 32 > > >","blocks":[{"link":"/v5/api/providers/types/","text":"A list of the transactions hashes for each transaction this block includes."}]},{"title":"Types -- Block -- BlockWithTransactions","blocks":[{"link":"/v5/api/providers/types/#providers-BlockWithTransactions","text":"If all transactions for a block are needed, this object instead includes the full details on each transaction."}]},{"title":"Types -- Block -- block.transactions => Array< TransactionResponse >","blocks":[{"link":"/v5/api/providers/types/#providers-BlockWithTransactions","text":"A list of the transactions this block includes."}]},{"title":"Types -- Events and Logs -- filter.address => string< Address >","blocks":[{"link":"/v5/api/providers/types/#providers-EventFilter","text":"The address to filter by, or null to match any address."}]},{"title":"Types -- Events and Logs -- filter.topics => Array< string< DataHexString< 32 > > | Array< string< DataHexString< 32 > > > >","blocks":[{"link":"/v5/api/providers/types/#providers-EventFilter","text":"The topics to filter by, or null to match any topics."},{"link":"/v5/api/providers/types/#providers-EventFilter","text":"Each entry represents an AND condition that must match, or may be null to match anything."},{"link":"/v5/api/providers/types/#providers-EventFilter","text":"If a given entry is an Array, then that entry is treated as an OR for any value in the entry."}]},{"title":"Types -- Events and Logs -- filter.fromBlock => BlockTag","blocks":[{"link":"/v5/api/providers/types/#providers-Filter","text":"The starting block (inclusive) to search for logs matching the filter criteria."}]},{"title":"Types -- Events and Logs -- filter.toBlock => BlockTag","blocks":[{"link":"/v5/api/providers/types/#providers-Filter","text":"The end block (inclusive) to search for logs matching the filter criteria."}]},{"title":"Types -- Events and Logs -- filter.blockHash => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/providers/types/#providers-FilterByBlockHash","text":"The specific block (by its block hash) to search for logs matching the filter criteria."}]},{"title":"Types -- Events and Logs -- log.blockNumber => number","blocks":[{"link":"/v5/api/providers/types/#providers-Log","text":"The block height (number) of the block including the transaction of this log."}]},{"title":"Types -- Events and Logs -- log.blockHash => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/providers/types/#providers-Log","text":"The block hash of the block including the transaction of this log."}]},{"title":"Types -- Events and Logs -- log.removed => boolean","blocks":[{"link":"/v5/api/providers/types/#providers-Log","text":"During a re-org, if a transaction is orphaned, this will be set to true to indicate the Log entry has been removed; it will likely be emitted again in the near future when another block is mined with the transaction that triggered this log, but keep in mind the values may change."}]},{"title":"Types -- Events and Logs -- log.transactionLogIndex => number","blocks":[{"link":"/v5/api/providers/types/#providers-Log","text":"The index of this log in the transaction."}]},{"title":"Types -- Events and Logs -- log.address => string< Address >","blocks":[{"link":"/v5/api/providers/types/#providers-Log","text":"The address of the contract that generated this log."}]},{"title":"Types -- Events and Logs -- log.data => string< DataHexString >","blocks":[{"link":"/v5/api/providers/types/#providers-Log","text":"The data included in this log."}]},{"title":"Types -- Events and Logs -- log.topics => Array< string< DataHexString< 32 > > >","blocks":[{"link":"/v5/api/providers/types/#providers-Log","text":"The list of topics (indexed properties) for this log."}]},{"title":"Types -- Events and Logs -- log.transactionHash => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/providers/types/#providers-Log","text":"The transaction hash of the transaction of this log."}]},{"title":"Types -- Events and Logs -- log.transactionIndex => number","blocks":[{"link":"/v5/api/providers/types/#providers-Log","text":"The index of the transaction in the block of the transaction of this log."}]},{"title":"Types -- Events and Logs -- log.logIndex => number","blocks":[{"link":"/v5/api/providers/types/#providers-Log","text":"The index of this log across all logs in the entire block."}]},{"title":"Types -- Transactions -- TransactionRequest","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionRequest","text":"A transaction request describes a transaction that is to be sent to the network or otherwise processed."},{"link":"/v5/api/providers/types/#providers-TransactionRequest","text":"All fields are optional and may be a promise which resolves to the required type."}]},{"title":"Types -- Transactions -- transactionRequest.to => string | Promise< string >","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionRequest","text":"The address (or ENS name) this transaction it to."}]},{"title":"Types -- Transactions -- transactionRequest.from => string< Address > | Promise< string< Address > >","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionRequest","text":"The address this transaction is from."}]},{"title":"Types -- Transactions -- transactionRequest.nonce => number | Promise< number >","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionRequest","text":"The nonce for this transaction."},{"link":"/v5/api/providers/types/#providers-TransactionRequest","text":"This should be set to the number of transactions ever sent from this address."}]},{"title":"Types -- Transactions -- transactionRequest.gasLimit => BigNumber | Promise< BigNumber >","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionRequest","text":"The maximum amount of gas this transaction is permitted to use."}]},{"title":"Types -- Transactions -- transactionRequest.gasPrice => BigNumber | Promise< BigNumber >","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionRequest","text":"The price (in wei) per unit of gas this transaction will pay."}]},{"title":"Types -- Transactions -- transactionRequest.data => DataHexString | Promise< DataHexString >","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionRequest","text":"The transaction data."}]},{"title":"Types -- Transactions -- transactionRequest.value => BigNumber | Promise< BigNumber >","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionRequest","text":"The amount (in wei) this transaction is sending."}]},{"title":"Types -- Transactions -- transactionRequest.chainId => number | Promise< number >","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionRequest","text":"The chain ID this transaction is authorized on, as specified by EIP-155."},{"link":"/v5/api/providers/types/#providers-TransactionRequest","text":"If the chain ID is 0 will disable EIP-155 and the transaction will be valid on any network."},{"link":"/v5/api/providers/types/#providers-TransactionRequest","text":"This can be dangerous and care should be taken, since it allows transactions to be replayed on networks that were possibly not intended."}]},{"title":"Types -- Transactions -- TransactionResponse","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionResponse","text":"A TransactionResponse includes all properties of a Transaction as well as several properties that are useful once it has been mined."}]},{"title":"Types -- Transactions -- transaction.blockNumber => number","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionResponse","text":"The number (\"height\") of the block this transaction was mined in."},{"link":"/v5/api/providers/types/#providers-TransactionResponse","text":"If the block has not been mined, this is null."}]},{"title":"Types -- Transactions -- transaction.blockHash => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionResponse","text":"The hash of the block this transaction was mined in."},{"link":"/v5/api/providers/types/#providers-TransactionResponse","text":"If the block has not been mined, this is null."}]},{"title":"Types -- Transactions -- transaction.timestamp => number","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionResponse","text":"The timestamp of the block this transaction was mined in."},{"link":"/v5/api/providers/types/#providers-TransactionResponse","text":"If the block has not been mined, this is null."}]},{"title":"Types -- Transactions -- transaction.confirmations => number","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionResponse","text":"The number of blocks that have been mined (including the initial block) since this transaction was mined."}]},{"title":"Types -- Transactions -- transaction.raw => string< DataHexString >","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionResponse","text":"The serialized transaction."}]},{"title":"Types -- Transactions -- transaction.wait( [ confirmations = 1 ] ) => Promise< TransactionReceipt >","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionResponse","text":"Wait for confirmations."},{"link":"/v5/api/providers/types/#providers-TransactionResponse","text":"If 0, and the transaction has not been mined, null is returned."}]},{"title":"Types -- Transactions -- receipt.to => string< Address >","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionReceipt","text":"The address this transaction is to."},{"link":"/v5/api/providers/types/#providers-TransactionReceipt","text":"This is null if the transaction was an init transaction, used to deploy a contract."}]},{"title":"Types -- Transactions -- receipt.from => string< Address >","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionReceipt","text":"The address this transaction is from."}]},{"title":"Types -- Transactions -- receipt.contractAddress => string< Address >","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionReceipt","text":"If this transaction has a null to address, it is an init transaction used to deploy a contract, in which case this is the address created by that contract."},{"link":"/v5/api/providers/types/#providers-TransactionReceipt","text":"To compute a contract address, the getContractAddress utility function can also be used with a TransactionResponse object, which requires the transaction nonce and the address of the sender."}]},{"title":"Types -- Transactions -- receipt.transactionIndex => number","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionReceipt","text":"The index of this transaction in the list of transactions included in the block this transaction was mined in."}]},{"title":"Types -- Transactions -- receipt.root => string","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionReceipt","text":"The intermediate state root of a receipt."},{"link":"/v5/api/providers/types/#providers-TransactionReceipt","text":"Only transactions included in blocks before the Byzantium Hard Fork have this property, as it was replaced by the status property."},{"link":"/v5/api/providers/types/#providers-TransactionReceipt","text":"The property is generally of little use to developers."},{"link":"/v5/api/providers/types/#providers-TransactionReceipt","text":"At the time it could be used to verify a state transition with a fraud-proof only considering the single transaction; without it the full block must be considered."}]},{"title":"Types -- Transactions -- receipt.gasUsed => BigNumber","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionReceipt","text":"The amount of gas actually used by this transaction."}]},{"title":"Types -- Transactions -- receipt.logsBloom => string< DataHexString >","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionReceipt","text":"A bloom-filter, which includes all the addresses and topics included in any log in this transaction."}]},{"title":"Types -- Transactions -- receipt.blockHash => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionReceipt","text":"The block hash of the block that this transaction was included in."}]},{"title":"Types -- Transactions -- receipt.transactionHash => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionReceipt","text":"The transaction hash of this transaction."}]},{"title":"Types -- Transactions -- receipt.logs => Array< Log >","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionReceipt","text":"All the logs emitted by this transaction."}]},{"title":"Types -- Transactions -- receipt.blockNumber => number","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionReceipt","text":"The block height (number) of the block that this transaction was included in."}]},{"title":"Types -- Transactions -- receipt.confirmations => number","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionReceipt","text":"The number of blocks that have been mined since this transaction, including the actual block it was mined in."}]},{"title":"Types -- Transactions -- receipt.cumulativeGasUsed => BigNumber","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionReceipt","text":"For the block this transaction was included in, this is the sum of the gas used by each transaction in the ordered list of transactions up to (and including) this transaction."},{"link":"/v5/api/providers/types/#providers-TransactionReceipt","text":"This is generally of little interest to developers."}]},{"title":"Types -- Transactions -- receipt.byzantium => boolean","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionReceipt","text":"This is true if the block is in a post-Byzantium Hard Fork block."}]},{"title":"Types -- Transactions -- receipt.status => boolean","blocks":[{"link":"/v5/api/providers/types/#providers-TransactionReceipt","text":"The status of a transaction is 1 is successful or 0 if it was reverted."},{"link":"/v5/api/providers/types/#providers-TransactionReceipt","text":"Only transactions included in blocks post-Byzantium Hard Fork have this property."}]},{"title":"Signers","blocks":[{"link":"/v5/api/signer/#signers","text":"A Signer in vapors is an abstraction of an Vapory Account, which can be used to sign messages and transactions and send signed transactions to the Vapory Network to execute state changing operations."},{"link":"/v5/api/signer/#signers","text":"The available operations depend largely on the sub-class used."},{"link":"/v5/api/signer/#signers","text":"For example, a Signer from MetaMask can send transactions and sign messages but cannot sign a transaction (without broadcasting it)."},{"link":"/v5/api/signer/#signers","text":"The most common Signers you will encounter are:."},{"link":"/v5/api/signer/#signers","text":"Wallet, which is a class which knows its private key and can execute any operations with it JsonRpcSigner, which is connected to a JsonRpcProvider (or sub-class) and is acquired using getSigner."}]},{"title":"Signers -- Signer","blocks":[{"link":"/v5/api/signer/#Signer","text":"The Signer class is abstract and cannot be directly instantiated."},{"link":"/v5/api/signer/#Signer","text":"Instead use one of the concrete sub-classes, such as the Wallet, VoidSigner or JsonRpcSigner."}]},{"title":"Signers -- Signer -- signer.connect( provider ) => Signer","blocks":[{"link":"/v5/api/signer/#Signer-connect","text":"Sub-classes must implement this, however they may simply throw an error if changing providers is not supported."}]},{"title":"Signers -- Signer -- signer.getAddress( ) => Promise< string< Address > >","blocks":[{"link":"/v5/api/signer/#Signer-getaddress","text":"Returns a Promise that resolves to the account address."},{"link":"/v5/api/signer/#Signer-getaddress","text":"This is a Promise so that a Signer can be designed around an asynchronous source, such as hardware wallets."},{"link":"/v5/api/signer/#Signer-getaddress","text":"Sub-classes must implement this."}]},{"title":"Signers -- Signer -- Signer.isSigner( object ) => boolean","blocks":[{"link":"/v5/api/signer/#Signer-isSigner","text":"Returns true if an only if object is a Signer."}]},{"title":"Signers -- Signer -- signer.getBalance( [ blockTag = \"latest\" ] ) => Promise< BigNumber >","blocks":[{"link":"/v5/api/signer/#Signer-getBalance","text":"Returns the balance of this wallet at blockTag."}]},{"title":"Signers -- Signer -- signer.getChainId( ) => Promise< number >","blocks":[{"link":"/v5/api/signer/#Signer-getChainId","text":"Returns the chain ID this wallet is connected to."}]},{"title":"Signers -- Signer -- signer.getGasPrice( ) => Promise< BigNumber >","blocks":[{"link":"/v5/api/signer/#Signer-getGasPrice","text":"Returns the current gas price."}]},{"title":"Signers -- Signer -- signer.getTransactionCount( [ blockTag = \"latest\" ] ) => Promise< number >","blocks":[{"link":"/v5/api/signer/#Signer-getTransactionCount","text":"Returns the number of transactions this account has ever sent."},{"link":"/v5/api/signer/#Signer-getTransactionCount","text":"This is the value required to be included in transactions as the nonce."}]},{"title":"Signers -- Signer -- signer.call( transactionRequest ) => Promise< string< DataHexString > >","blocks":[{"link":"/v5/api/signer/#Signer-call","text":"Returns the result of calling using the transactionRequest, with this account address being used as the from field."}]},{"title":"Signers -- Signer -- signer.estimateGas( transactionRequest ) => Promise< BigNumber >","blocks":[{"link":"/v5/api/signer/#Signer-estimateGas","text":"Returns the result of estimating the cost to send the transactionRequest, with this account address being used as the from field."}]},{"title":"Signers -- Signer -- signer.resolveName( ensName ) => Promise< string< Address > >","blocks":[{"link":"/v5/api/signer/#Signer-resolveName","text":"Returns the address associated with the ensName."}]},{"title":"Signers -- Signer -- signer.signMessage( message ) => Promise< string< RawSignature > >","blocks":[{"link":"/v5/api/signer/#Signer-signMessage","text":"This returns a Promise which resolves to the Raw Signature of message."},{"link":"/v5/api/signer/#Signer-signMessage","text":"Sub-classes must implement this, however they may throw if signing a message is not supported, such as in a Contract-based Wallet or Meta-Transaction-based Wallet."}]},{"title":"Signers -- Signer -- Note","blocks":[{"link":"/v5/api/signer/#Signer--signing-methods","text":"If message is a string, it is treated as a string and converted to its representation in UTF8 bytes."},{"link":"/v5/api/signer/#Signer--signing-methods","text":"If and only if a message is a Bytes will it be treated as binary data."},{"link":"/v5/api/signer/#Signer--signing-methods","text":"For example, the string \"0x1234\" is 6 characters long (and in this case 6 bytes long)."},{"link":"/v5/api/signer/#Signer--signing-methods","text":"This is not equivalent to the array [ 0x12, 0x34 ], which is 2 bytes long."},{"link":"/v5/api/signer/#Signer--signing-methods","text":"A common case is to sign a hash."},{"link":"/v5/api/signer/#Signer--signing-methods","text":"In this case, if the hash is a string, it must be converted to an array first, using the arrayify utility function."}]},{"title":"Signers -- Signer -- signer.signTransaction( transactionRequest ) => Promise< string< DataHexString > >","blocks":[{"link":"/v5/api/signer/#Signer-signTransaction","text":"Returns a Promise which resolves to the signed transaction of the transactionRequest."},{"link":"/v5/api/signer/#Signer-signTransaction","text":"This method does not populate any missing fields."},{"link":"/v5/api/signer/#Signer-signTransaction","text":"Sub-classes must implement this, however they may throw if signing a transaction is not supported, which is common for security reasons in many clients."}]},{"title":"Signers -- Signer -- signer.sendTransaction( transactionRequest ) => Promise< TransactionResponse >","blocks":[{"link":"/v5/api/signer/#Signer-sendTransaction","text":"This method populates the transactionRequest with missing fields, using populateTransaction and returns a Promise which resolves to the transaction."},{"link":"/v5/api/signer/#Signer-sendTransaction","text":"Sub-classes must implement this, however they may throw if sending a transaction is not supported, such as the VoidSigner or if the Wallet is offline and not connected to a Provider."}]},{"title":"Signers -- Signer -- signer._signTypedData( domain , types , value ) => Promise< string< RawSignature > >","blocks":[{"link":"/v5/api/signer/#Signer-signTypedData","text":"Signs the typed data value with types data structure for domain using the EIP-712 specification."}]},{"title":"Signers -- Signer -- Experimental feature (this method name will change)","blocks":[{"link":"/v5/api/signer/#Signer--signing-methods","text":"This is still an experimental feature."},{"link":"/v5/api/signer/#Signer--signing-methods","text":"If using it, please specify the exact version of vapors you are using (e.g."},{"link":"/v5/api/signer/#Signer--signing-methods","text":"spcify \"5.0.18\", not \"^5.0.18\") as the method name will be renamed from _signTypedData to signTypedData once it has been used in the field a bit."}]},{"title":"Signers -- Signer -- Sub-Classes","blocks":[{"link":"/v5/api/signer/#Signer--subclassing","text":"It is very important that all important properties of a Signer are immutable."},{"link":"/v5/api/signer/#Signer--subclassing","text":"Since Vapory is very asynchronous and deals with critical data (such as ether and other potentially valuable crypto assets), keeping properties such as the provider and address static throughout the life-cycle of the Signer helps prevent serious issues and many other classes and libraries make this assumption."},{"link":"/v5/api/signer/#Signer--subclassing","text":"A sub-class must extend Signer and must call super()."}]},{"title":"Signers -- Signer -- signer.checkTransaction( transactionRequest ) => TransactionRequest","blocks":[{"link":"/v5/api/signer/#Signer-checkTransaction","text":"This is generally not required to be overridden, but may be needed to provide custom behaviour in sub-classes."},{"link":"/v5/api/signer/#Signer-checkTransaction","text":"This should return a copy of the transactionRequest, with any properties needed by call, estimateGas and populateTransaction (which is used by sendTransaction)."},{"link":"/v5/api/signer/#Signer-checkTransaction","text":"It should also throw an error if any unknown key is specified."},{"link":"/v5/api/signer/#Signer-checkTransaction","text":"The default implementation checks only if valid TransactionRequest properties exist and adds from to the transaction if it does not exist."},{"link":"/v5/api/signer/#Signer-checkTransaction","text":"If there is a from field it must be verified to be equal to the Signer's address."}]},{"title":"Signers -- Signer -- signer.populateTransaction( transactionRequest ) => Promise< TransactionRequest >","blocks":[{"link":"/v5/api/signer/#Signer-populateTransaction","text":"This is generally not required to be overridden, but may be needed to provide custom behaviour in sub-classes."},{"link":"/v5/api/signer/#Signer-populateTransaction","text":"This should return a copy of transactionRequest, follow the same procedure as checkTransaction and fill in any properties required for sending a transaction."},{"link":"/v5/api/signer/#Signer-populateTransaction","text":"The result should have all promises resolved; if needed the resolveProperties utility function can be used for this."},{"link":"/v5/api/signer/#Signer-populateTransaction","text":"The default implementation calls checkTransaction and resolves to if it is an ENS name, adds gasPrice, nonce, gasLimit and chainId based on the related operations on Signer."}]},{"title":"Signers -- Wallet","blocks":[{"link":"/v5/api/signer/#Wallet","text":"The Wallet class inherits Signer and can sign transactions and messages using a private key as a standard Externally Owned Account (EOA)."}]},{"title":"Signers -- Wallet -- new vapors.Wallet( privateKey [ , provider ] )","blocks":[{"link":"/v5/api/signer/#Wallet-constructor","text":"Create a new Wallet instance for privateKey and optionally connected to the provider."}]},{"title":"Signers -- Wallet -- vapors.Wallet.createRandom( [ options = {} ] ) => Wallet","blocks":[{"link":"/v5/api/signer/#Wallet-createRandom","text":"Returns a new Wallet with a random private key, generated from cryptographically secure entropy sources."},{"link":"/v5/api/signer/#Wallet-createRandom","text":"If the current environment does not have a secure entropy source, an error is thrown."},{"link":"/v5/api/signer/#Wallet-createRandom","text":"Wallets created using this method will have a mnemonic."}]},{"title":"Signers -- Wallet -- vapors.Wallet.fromEncryptedJson( json , password [ , progress ] ) => Promise< Wallet >","blocks":[{"link":"/v5/api/signer/#Wallet-fromEncryptedJson","text":"Create an instance from an encrypted JSON wallet."},{"link":"/v5/api/signer/#Wallet-fromEncryptedJson","text":"If progress is provided it will be called during decryption with a value between 0 and 1 indicating the progress towards completion."}]},{"title":"Signers -- Wallet -- vapors.Wallet.fromEncryptedJsonSync( json , password ) => Wallet","blocks":[{"link":"/v5/api/signer/#Wallet-fromEncryptedJsonSync","text":"Create an instance from an encrypted JSON wallet."},{"link":"/v5/api/signer/#Wallet-fromEncryptedJsonSync","text":"This operation will operate synchronously which will lock up the user interface, possibly for a non-trivial duration."},{"link":"/v5/api/signer/#Wallet-fromEncryptedJsonSync","text":"Most applications should use the asynchronous fromEncryptedJson instead."}]},{"title":"Signers -- Wallet -- vapors.Wallet.fromMnemonic( mnemonic [ , path , [ wordlist ] ] ) => Wallet","blocks":[{"link":"/v5/api/signer/#Wallet.fromMnemonic","text":"Create an instance from a mnemonic phrase."},{"link":"/v5/api/signer/#Wallet.fromMnemonic","text":"If path is not specified, the Vapory default path is used (i.e."},{"link":"/v5/api/signer/#Wallet.fromMnemonic","text":"m/44'/60'/0'/0/0)."},{"link":"/v5/api/signer/#Wallet.fromMnemonic","text":"If wordlist is not specified, the English Wordlist is used."}]},{"title":"Signers -- Wallet -- wallet.address => string< Address >","blocks":[{"link":"/v5/api/signer/#Wallet--properties","text":"The address for the account this Wallet represents."}]},{"title":"Signers -- Wallet -- wallet.provider => Provider","blocks":[{"link":"/v5/api/signer/#Wallet--properties","text":"The provider this wallet is connected to, which will be used for any Blockchain Methods methods."},{"link":"/v5/api/signer/#Wallet--properties","text":"This can be null."}]},{"title":"Signers -- Wallet -- Note","blocks":[{"link":"/v5/api/signer/#Wallet--properties","text":"A Wallet instance is immutable, so if you wish to change the Provider, you may use the connect method to create a new instance connected to the desired provider."}]},{"title":"Signers -- Wallet -- wallet.publicKey => string< DataHexString< 65 > >","blocks":[{"link":"/v5/api/signer/#Wallet--properties","text":"The uncompressed public key for this Wallet represents."}]},{"title":"Signers -- Wallet -- wallet.encrypt( password , [ options = {} , [ progress ] ] ) => Promise< string >","blocks":[{"link":"/v5/api/signer/#Wallet-encrypt","text":"Encrypt the wallet using password returning a Promise which resolves to a JSON wallet."},{"link":"/v5/api/signer/#Wallet-encrypt","text":"If progress is provided it will be called during decryption with a value between 0 and 1 indicating the progress towards completion."}]},{"title":"Signers -- VoidSigner","blocks":[{"link":"/v5/api/signer/#VoidSigner","text":"A VoidSigner is a simple Signer which cannot sign."},{"link":"/v5/api/signer/#VoidSigner","text":"It is useful as a read-only signer, when an API requires a Signer as a parameter, but it is known only read-only operations will be carried."},{"link":"/v5/api/signer/#VoidSigner","text":"For example, the call operation will automatically have the provided address passed along during the execution."}]},{"title":"Signers -- VoidSigner -- new vapors.VoidSigner( address [ , provider ] ) => VoidSigner","blocks":[{"link":"/v5/api/signer/#VoidSigner","text":"Create a new instance of a VoidSigner for address."}]},{"title":"Signers -- VoidSigner -- voidSigner.address => string< Address >","blocks":[{"link":"/v5/api/signer/#VoidSigner","text":"The address of this VoidSigner."}]},{"title":"Signers -- ExternallyOwnedAccount","blocks":[{"link":"/v5/api/signer/#ExternallyOwnedAccount","text":"This is an interface which contains a minimal set of properties required for Externally Owned Accounts which can have certain operations performed, such as encoding as a JSON wallet."}]},{"title":"Signers -- ExternallyOwnedAccount -- eoa.address => string< Address >","blocks":[{"link":"/v5/api/signer/#ExternallyOwnedAccount","text":"The Address of this EOA."}]},{"title":"Signers -- ExternallyOwnedAccount -- eoa.privateKey => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/signer/#ExternallyOwnedAccount","text":"The privateKey of this EOA."}]},{"title":"Signers -- ExternallyOwnedAccount -- eoa.mnemonic => Mnemonic","blocks":[{"link":"/v5/api/signer/#ExternallyOwnedAccount","text":"Optional."},{"link":"/v5/api/signer/#ExternallyOwnedAccount","text":"The account HD mnemonic, if it has one and can be determined."},{"link":"/v5/api/signer/#ExternallyOwnedAccount","text":"Some sources do not encode the mnemonic, such as HD extended keys."}]},{"title":"AbiCoder","blocks":[{"link":"/v5/api/utils/abi/coder/#AbiCoder","text":"The AbiCoder is a collection of Coders which can be used to encode and decode the binary data formats used to interoperate between the EVM and higher level libraries."},{"link":"/v5/api/utils/abi/coder/#AbiCoder","text":"Most developers will never need to use this class directly, since the Interface class greatly simplifies these operations."}]},{"title":"AbiCoder -- Creating Instance","blocks":[{"link":"/v5/api/utils/abi/coder/#AbiCoder--creating","text":"For the most part, there should never be a need to manually create an instance of an AbiCoder, since one is created with the default coercion function when the library is loaded which can be used universally."},{"link":"/v5/api/utils/abi/coder/#AbiCoder--creating","text":"This is likely only needed by those with specific needs to override how values are coerced after they are decoded from their binary format."}]},{"title":"AbiCoder -- Creating Instance -- new vapors.utils.AbiCoder( [ coerceFunc ] )","blocks":[{"link":"/v5/api/utils/abi/coder/#AbiCoder--creating","text":"Create a new AbiCoder instance, which will call the coerceFunc on every decode, where the result of the call will be used in the Result."},{"link":"/v5/api/utils/abi/coder/#AbiCoder--creating","text":"The function signature is `(type, value)`, where the type is the string describing the type and the value is the processed value from the underlying Coder."},{"link":"/v5/api/utils/abi/coder/#AbiCoder--creating","text":"If the callback throws, the Result will contain a property that when accessed will throw, allowing for higher level libraries to recover from data errors."}]},{"title":"AbiCoder -- Creating Instance -- vapors.utils.defaultAbiCoder => AbiCoder","blocks":[{"link":"/v5/api/utils/abi/coder/#AbiCoder--creating","text":"An AbiCoder created when the library is imported which is used by the Interface."}]},{"title":"AbiCoder -- Coding Methods -- abiCoder.encode( types , values ) => string< DataHexString >","blocks":[{"link":"/v5/api/utils/abi/coder/#AbiCoder-encode","text":"Encode the array values according to the array of types, each of which may be a string or a ParamType."}]},{"title":"AbiCoder -- Coding Methods -- abiCoder.decode( types , data ) => Result","blocks":[{"link":"/v5/api/utils/abi/coder/#AbiCoder-decode","text":"Decode the data according to the array of types, each of which may be a string or ParamType."}]},{"title":"ABI Formats","blocks":[{"link":"/v5/api/utils/abi/formats/#abi-formats","text":"@TODO: Expand this section."}]},{"title":"ABI Formats -- Human-Readable ABI","blocks":[{"link":"/v5/api/utils/abi/formats/#abi-formats--human-readable-abi","text":"See Human-Readable Abi."}]},{"title":"ABI Formats -- Solidity JSON ABI","blocks":[{"link":"/v5/api/utils/abi/formats/#abi-formats--solidity","text":"See Solidity compiler."}]},{"title":"Fragments","blocks":[{"link":"/v5/api/utils/abi/fragments/#fragments","text":"Explain an ABI."}]},{"title":"Fragments -- Formats -- JSON String ABI (Solidity Output JSON)","blocks":[{"link":"/v5/api/utils/abi/fragments/","text":"The JSON ABI Format is the format that is output from the Solidity compiler."},{"link":"/v5/api/utils/abi/fragments/","text":"A JSON serialized object is always a string, which represents an Array of Objects, where each Object has various properties describing the Fragment of the ABI."},{"link":"/v5/api/utils/abi/fragments/","text":"The deserialized JSON string (which is a normal JavaScript Object) may also be passed into any function which accepts a JSON String ABI."}]},{"title":"Fragments -- Formats -- Humanb-Readable ABI","blocks":[{"link":"/v5/api/utils/abi/fragments/","text":"The Human-Readable ABI was @TODO."},{"link":"/v5/api/utils/abi/fragments/","text":"article."}]},{"title":"Fragments -- Formats -- Output Formats","blocks":[{"link":"/v5/api/utils/abi/fragments/#fragments--output-formats","text":"Each Fragment and ParamType may be output using its format method."}]},{"title":"Fragments -- Formats -- vapors.utils.FragmentTypes.full => string","blocks":[{"link":"/v5/api/utils/abi/fragments/#fragments--output-formats","text":"This is a full human-readable string, including all parameter names, any optional modifiers (e.g."},{"link":"/v5/api/utils/abi/fragments/#fragments--output-formats","text":"indexed, public, etc) and white-space to aid in human readability."}]},{"title":"Fragments -- Formats -- vapors.utils.FragmentTypes.minimal => string","blocks":[{"link":"/v5/api/utils/abi/fragments/#fragments--output-formats","text":"This is similar to full, except with no unnecessary whitespace or parameter names."},{"link":"/v5/api/utils/abi/fragments/#fragments--output-formats","text":"This is useful for storing a minimal string which can still fully reconstruct the original Fragment using Fragment&thinsp;.&thinsp;from."}]},{"title":"Fragments -- Formats -- vapors.utils.FragmentTypes.json => string","blocks":[{"link":"/v5/api/utils/abi/fragments/#fragments--output-formats","text":"This returns a JavaScript Object which is safe to call JSON.stringify on to create a JSON string."}]},{"title":"Fragments -- Formats -- vapors.utils.FragmentTypes.sighash => string","blocks":[{"link":"/v5/api/utils/abi/fragments/#fragments--output-formats","text":"This is a minimal output format, which is used by Solidity when computing a signature hash or an event topic hash."}]},{"title":"Fragments -- Formats -- Note","blocks":[{"link":"/v5/api/utils/abi/fragments/#fragments--output-formats","text":"The sighash format is insufficient to re-create the original Fragment, since it discards modifiers such as indexed, anonymous, stateMutability, etc."}]},{"title":"Fragments -- Fragment","blocks":[{"link":"/v5/api/utils/abi/fragments/#Fragment","text":"An ABI is a collection of Fragments, where each fragment specifies:."},{"link":"/v5/api/utils/abi/fragments/#Fragment","text":"An Event A Function A Constructor."}]},{"title":"Fragments -- Fragment -- fragment.name => string","blocks":[{"link":"/v5/api/utils/abi/fragments/","text":"This is the name of the Event or Function."},{"link":"/v5/api/utils/abi/fragments/","text":"This will be null for a ConstructorFragment."}]},{"title":"Fragments -- Fragment -- fragment.type => string","blocks":[{"link":"/v5/api/utils/abi/fragments/","text":"This is a string which indicates the type of the Fragment."},{"link":"/v5/api/utils/abi/fragments/","text":"This will be one of:."},{"link":"/v5/api/utils/abi/fragments/","text":"constructor event function."}]},{"title":"Fragments -- Fragment -- fragment.inputs => Array< ParamType >","blocks":[{"link":"/v5/api/utils/abi/fragments/","text":"This is an array of each ParamType for the input parameters to the Constructor, Event of Function."}]},{"title":"Fragments -- Fragment -- vapors.utils.Fragment.from( objectOrString ) => Fragment","blocks":[{"link":"/v5/api/utils/abi/fragments/#Fragment-from","text":"Returns a."}]},{"title":"Fragments -- Fragment -- vapors.utils.Fragment.isFragment( object ) => boolean","blocks":[{"link":"/v5/api/utils/abi/fragments/#Fragment-isFragment","text":"Tra lal al."}]},{"title":"Fragments -- ConstructorFragment -- fragment.gas => BigNumber","blocks":[{"link":"/v5/api/utils/abi/fragments/","text":"This is the gas limit that should be used during deployment."},{"link":"/v5/api/utils/abi/fragments/","text":"It may be null."}]},{"title":"Fragments -- ConstructorFragment -- fragment.payable => boolean","blocks":[{"link":"/v5/api/utils/abi/fragments/","text":"This is whether the constructor may receive ether during deployment as an endowment (i.e."},{"link":"/v5/api/utils/abi/fragments/","text":"msg.value != 0)."}]},{"title":"Fragments -- ConstructorFragment -- fragment.stateMutability => string","blocks":[{"link":"/v5/api/utils/abi/fragments/","text":"This is the state mutability of the constructor."},{"link":"/v5/api/utils/abi/fragments/","text":"It can be any of:."},{"link":"/v5/api/utils/abi/fragments/","text":"nonpayable payable."}]},{"title":"Fragments -- ConstructorFragment -- vapors.utils.ConstructorFragment.from( objectOrString ) => ConstructorFragment","blocks":[{"link":"/v5/api/utils/abi/fragments/#ConstructorFragment-from","text":"Tra la la..."}]},{"title":"Fragments -- ConstructorFragment -- vapors.utils.ConstructorFragment.isConstructorFragment( object ) => boolean","blocks":[{"link":"/v5/api/utils/abi/fragments/#ConstructorFragment-isConstructorFragment","text":"Tra lal al."}]},{"title":"Fragments -- EventFragment -- fragment.anonymous => boolean","blocks":[{"link":"/v5/api/utils/abi/fragments/","text":"This is whether the event is anonymous."},{"link":"/v5/api/utils/abi/fragments/","text":"An anonymous Event does not inject its topic hash as topic0 when creating a log."}]},{"title":"Fragments -- EventFragment -- vapors.utils.EventFragment.from( objectOrString ) => EventFragment","blocks":[{"link":"/v5/api/utils/abi/fragments/#EventFragment-from","text":"Tra la la..."}]},{"title":"Fragments -- EventFragment -- vapors.utils.EventFragment.isEventFragment( object ) => boolean","blocks":[{"link":"/v5/api/utils/abi/fragments/#EventFragment-isEventFragment","text":"Tra lal al."}]},{"title":"Fragments -- FunctionFragment -- fragment.constant => boolean","blocks":[{"link":"/v5/api/utils/abi/fragments/","text":"This is whether the function is constant (i.e."},{"link":"/v5/api/utils/abi/fragments/","text":"does not change state)."},{"link":"/v5/api/utils/abi/fragments/","text":"This is true if the state mutability is pure or view."}]},{"title":"Fragments -- FunctionFragment -- fragment.stateMutability => string","blocks":[{"link":"/v5/api/utils/abi/fragments/","text":"This is the state mutability of the constructor."},{"link":"/v5/api/utils/abi/fragments/","text":"It can be any of:."},{"link":"/v5/api/utils/abi/fragments/","text":"nonpayable payable pure view."}]},{"title":"Fragments -- FunctionFragment -- fragment.outputs => Array< ParamType >","blocks":[{"link":"/v5/api/utils/abi/fragments/","text":"A list of the Function output parameters."}]},{"title":"Fragments -- FunctionFragment -- vapors.utils.FunctionFragment.from( objectOrString ) => FunctionFragment","blocks":[{"link":"/v5/api/utils/abi/fragments/#FunctionFragment-from","text":"Tra la la..."}]},{"title":"Fragments -- FunctionFragment -- vapors.utils.FunctionFragment.isFunctionFragment( object ) => boolean","blocks":[{"link":"/v5/api/utils/abi/fragments/#FunctionFragment-isFunctionFragment","text":"Tra lal al."}]},{"title":"Fragments -- ParamType","blocks":[{"link":"/v5/api/utils/abi/fragments/#ParamType","text":"The following examples will represent the Solidity parameter:."},{"link":"/v5/api/utils/abi/fragments/#ParamType","text":"string foobar."}]},{"title":"Fragments -- ParamType -- paramType.name => string","blocks":[{"link":"/v5/api/utils/abi/fragments/#ParamType-name","text":"The local parameter name."},{"link":"/v5/api/utils/abi/fragments/#ParamType-name","text":"This may be null for unnamed parameters."},{"link":"/v5/api/utils/abi/fragments/#ParamType-name","text":"For example, the parameter definition string foobar would be foobar."}]},{"title":"Fragments -- ParamType -- paramType.type => string","blocks":[{"link":"/v5/api/utils/abi/fragments/#ParamType-type","text":"The full type of the parameter, including tuple and array symbols."},{"link":"/v5/api/utils/abi/fragments/#ParamType-type","text":"This may be null for unnamed parameters."},{"link":"/v5/api/utils/abi/fragments/#ParamType-type","text":"For the above example, this would be foobar."}]},{"title":"Fragments -- ParamType -- paramType.baseType => string","blocks":[{"link":"/v5/api/utils/abi/fragments/#ParamType-baseType","text":"The base type of the parameter."},{"link":"/v5/api/utils/abi/fragments/#ParamType-baseType","text":"For primitive types (e.g."},{"link":"/v5/api/utils/abi/fragments/#ParamType-baseType","text":"address, uint256, etc) this is equal to type."},{"link":"/v5/api/utils/abi/fragments/#ParamType-baseType","text":"For arrays, it will be the string array and for a tuple, it will be the string tuple."}]},{"title":"Fragments -- ParamType -- paramType.indexed => boolean","blocks":[{"link":"/v5/api/utils/abi/fragments/#ParamType-indexed","text":"Whether the parameter has been marked as indexed."},{"link":"/v5/api/utils/abi/fragments/#ParamType-indexed","text":"This only applies to parameters which are part of an EventFragment."}]},{"title":"Fragments -- ParamType -- paramType.arrayChildren => ParamType","blocks":[{"link":"/v5/api/utils/abi/fragments/#ParamType-arrayChildren","text":"The type of children of the array."},{"link":"/v5/api/utils/abi/fragments/#ParamType-arrayChildren","text":"This is null for any parameter which is not an array."}]},{"title":"Fragments -- ParamType -- paramType.arrayLength => number","blocks":[{"link":"/v5/api/utils/abi/fragments/#ParamType-arrayLength","text":"The length of the array, or -1 for dynamic-length arrays."},{"link":"/v5/api/utils/abi/fragments/#ParamType-arrayLength","text":"This is null for parameters which are not arrays."}]},{"title":"Fragments -- ParamType -- paramType.components => Array< ParamType >","blocks":[{"link":"/v5/api/utils/abi/fragments/#ParamType-components","text":"The components of a tuple."},{"link":"/v5/api/utils/abi/fragments/#ParamType-components","text":"This is null for non-tuple parameters."}]},{"title":"Fragments -- ParamType -- Methods","blocks":[{"link":"/v5/api/utils/abi/fragments/#ParamType","text":"Tra la la..."}]},{"title":"Fragments -- ParamType -- paramType.format( [ outputType = sighash ] )","blocks":[{"link":"/v5/api/utils/abi/fragments/","text":"Tra la la..."}]},{"title":"Fragments -- ParamType -- vapors.utils.ParamType.from( objectOrString ) => ParamType","blocks":[{"link":"/v5/api/utils/abi/fragments/#ParamType-from","text":"Tra la la..."}]},{"title":"Fragments -- ParamType -- vapors.utils.ParamType.isParamType( object ) => boolean","blocks":[{"link":"/v5/api/utils/abi/fragments/#ParamType-isParamType","text":"Tra la la..."}]},{"title":"Application Binary Interface","blocks":[{"link":"/v5/api/utils/abi/","text":"An Application Binary Interface (ABI) is a collection of Fragments which specify how to interact with various components of a Contract."},{"link":"/v5/api/utils/abi/","text":"An Interface helps organize Fragments by type as well as provides the functionality required to encode, decode and work with each component."},{"link":"/v5/api/utils/abi/","text":"Most developers will not require this low-level access to encoding and decoding the binary data on the network and will most likely use a Contract which provides a more convenient interface."},{"link":"/v5/api/utils/abi/","text":"Some framework, tool developers or developers using advanced techniques may find these classes and utilities useful."}]},{"title":"Interface","blocks":[{"link":"/v5/api/utils/abi/interface/#Interface","text":"The Interface Class abstracts the encoding and decoding required to interact with contracts on the Vapory network."},{"link":"/v5/api/utils/abi/interface/#Interface","text":"Many of the standards organically evolved along side the Solidity language, which other languages have adopted to remain compatible with existing deployed contracts."},{"link":"/v5/api/utils/abi/interface/#Interface","text":"The EVM itself does not understand what the ABI is."},{"link":"/v5/api/utils/abi/interface/#Interface","text":"It is simply an agreed upon set of formats to encode various types of data which each contract can expect so they can interoperate with each other."}]},{"title":"Interface -- Creating Instances -- new vapors.utils.Interface( abi )","blocks":[{"link":"/v5/api/utils/abi/interface/#Interface--creating","text":"Create a new Interface from a JSON string or object representing abi."},{"link":"/v5/api/utils/abi/interface/#Interface--creating","text":"The abi may be a JSON string or the parsed Object (using JSON.parse) which is emitted by the Solidity compiler (or compatible languages)."},{"link":"/v5/api/utils/abi/interface/#Interface--creating","text":"The abi may also be a Human-Readable Abi, which is a format the Vapors created to simplify manually typing the ABI into the source and so that a Contract ABI can also be referenced easily within the same source file."}]},{"title":"Interface -- Properties -- interface.fragments => Array< Fragment >","blocks":[{"link":"/v5/api/utils/abi/interface/#Interface--properties","text":"All the Fragments in the interface."}]},{"title":"Interface -- Properties -- interface.events => Array< EventFragment >","blocks":[{"link":"/v5/api/utils/abi/interface/#Interface--properties","text":"All the Event Fragments in the interface."}]},{"title":"Interface -- Properties -- interface.functions => Array< FunctionFragment >","blocks":[{"link":"/v5/api/utils/abi/interface/#Interface--properties","text":"All the Function Fragments in the interface."}]},{"title":"Interface -- Properties -- interface.deploy => ConstructorFragment","blocks":[{"link":"/v5/api/utils/abi/interface/#Interface--properties","text":"The Constructor Fragments for the interface."}]},{"title":"Interface -- Formatting -- interface.format( [ format ] ) => string | Array< string >","blocks":[{"link":"/v5/api/utils/abi/interface/#Interface--formatting","text":"Return the formatted Interface."},{"link":"/v5/api/utils/abi/interface/#Interface--formatting","text":"If the format type is json a single string is returned, otherwise an Array of the human-readable strings is returned."}]},{"title":"Interface -- Fragment Access -- interface.getFunction( fragment ) => FunctionFragment","blocks":[{"link":"/v5/api/utils/abi/interface/#Interface--fragments","text":"Returns the FunctionFragment for fragment (see Specifying Fragments)."}]},{"title":"Interface -- Fragment Access -- interface.getEvent( fragment ) => EventFragment","blocks":[{"link":"/v5/api/utils/abi/interface/#Interface--fragments","text":"Returns the EventFragment for fragment (see Specifying Fragments)."}]},{"title":"Interface -- Signature and Topic Hashes -- interface.getSighash( fragment ) => string< DataHexString< 4 > >","blocks":[{"link":"/v5/api/utils/abi/interface/#Interface--selectors","text":"Return the sighash (or Function Selector) for fragment (see Specifying Fragments)."}]},{"title":"Interface -- Signature and Topic Hashes -- interface.getEventTopic( fragment ) => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/utils/abi/interface/#Interface--selectors","text":"Return the topic hash for fragment (see Specifying Fragments)."}]},{"title":"Interface -- Encoding Data -- interface.encodeDeploy( [ values ] ) => string< DataHexString >","blocks":[{"link":"/v5/api/utils/abi/interface/#Interface--encoding","text":"Return the encoded deployment data, which can be concatenated to the deployment bytecode of a contract to pass values into the contract constructor."}]},{"title":"Interface -- Encoding Data -- interface.encodeFilterTopics( fragment [ , values ] ) => Array< topic | Array< topic > >","blocks":[{"link":"/v5/api/utils/abi/interface/#Interface--encoding","text":"Returns the encoded topic filter, which can be passed to getLogs for fragment (see Specifying Fragments) for the given values."},{"link":"/v5/api/utils/abi/interface/#Interface--encoding","text":"Each topic is a 32 byte (64 nibble) DataHexString."}]},{"title":"Interface -- Encoding Data -- interface.encodeFunctionData( fragment [ , values ] ) => string< DataHexString >","blocks":[{"link":"/v5/api/utils/abi/interface/#Interface--encoding","text":"Returns the encoded data, which can be used as the data for a transaction for fragment (see Specifying Fragments) for the given values."}]},{"title":"Interface -- Encoding Data -- interface.encodeFunctionResult( fragment [ , values ] ) => string< DataHexString >","blocks":[{"link":"/v5/api/utils/abi/interface/#Interface--encoding","text":"Returns the encoded result, which would normally be the response from a call for fragment (see Specifying Fragments) for the given values."},{"link":"/v5/api/utils/abi/interface/#Interface--encoding","text":"Most developers will not need this method, but may be useful for authors of a mock blockchain."}]},{"title":"Interface -- Decoding Data -- interface.decodeEventLog( fragment , data [ , topics ] ) => Result","blocks":[{"link":"/v5/api/utils/abi/interface/#Interface--decoding","text":"Returns the decoded event values from an event log for fragment (see Specifying Fragments) for the given data with the optional topics."},{"link":"/v5/api/utils/abi/interface/#Interface--decoding","text":"If topics is not specified, placeholders will be inserted into the result."}]},{"title":"Interface -- Decoding Data -- interface.decodeFunctionData( fragment , data ) => Result","blocks":[{"link":"/v5/api/utils/abi/interface/#Interface--decoding","text":"Returns the decoded values from transaction data for fragment (see Specifying Fragments) for the given data."},{"link":"/v5/api/utils/abi/interface/#Interface--decoding","text":"Most developers will not need this method, but may be useful for debugging or inspecting transactions."}]},{"title":"Interface -- Decoding Data -- interface.decodeFunctionResult( fragment , data ) => Result","blocks":[{"link":"/v5/api/utils/abi/interface/#Interface--decoding","text":"Returns the decoded values from the result of a call for fragment (see Specifying Fragments) for the given data."}]},{"title":"Interface -- Parsing","blocks":[{"link":"/v5/api/utils/abi/interface/#Interface--parsing","text":"The functions are generally the most useful for most developers."},{"link":"/v5/api/utils/abi/interface/#Interface--parsing","text":"They will automatically search the ABI for a matching Event or Function and decode the components as a fully specified description."}]},{"title":"Interface -- Parsing -- interface.parseLog( log ) => LogDescription","blocks":[{"link":"/v5/api/utils/abi/interface/#Interface--parsing","text":"Search the event that matches the log topic hash and parse the values the log represents."}]},{"title":"Interface -- Parsing -- interface.parseTransaction( transaction ) => TransactionDescription","blocks":[{"link":"/v5/api/utils/abi/interface/#Interface--parsing","text":"Search for the function that matches the transaction data sighash and parse the transaction properties."}]},{"title":"Interface -- Types -- Result","blocks":[{"link":"/v5/api/utils/abi/interface/#Result","text":"A Result is an array, so each value can be accessed as a positional argument."},{"link":"/v5/api/utils/abi/interface/#Result","text":"Additionally, if values are named, the identical object as its positional value can be accessed by its name."},{"link":"/v5/api/utils/abi/interface/#Result","text":"The name length is however reserved as it is part of the Array, so any named value for this key is renamed to _length."},{"link":"/v5/api/utils/abi/interface/#Result","text":"If there is a name collision, only the first is available by its key."}]},{"title":"Interface -- Types -- logDescription.args => Result","blocks":[{"link":"/v5/api/utils/abi/interface/#LogDescription","text":"The values of the input parameters of the event."}]},{"title":"Interface -- Types -- logDescription.eventFragment => EventFragment","blocks":[{"link":"/v5/api/utils/abi/interface/#LogDescription","text":"The EventFragment which matches the topic in the Log."}]},{"title":"Interface -- Types -- logDescription.name => string","blocks":[{"link":"/v5/api/utils/abi/interface/#LogDescription","text":"The event name."},{"link":"/v5/api/utils/abi/interface/#LogDescription","text":"(e.g."},{"link":"/v5/api/utils/abi/interface/#LogDescription","text":"Transfer)."}]},{"title":"Interface -- Types -- logDescription.signature => string","blocks":[{"link":"/v5/api/utils/abi/interface/#LogDescription","text":"The event signature."},{"link":"/v5/api/utils/abi/interface/#LogDescription","text":"(e.g."},{"link":"/v5/api/utils/abi/interface/#LogDescription","text":"Transfer(address,address,uint256))."}]},{"title":"Interface -- Types -- logDescription.topic => string","blocks":[{"link":"/v5/api/utils/abi/interface/#LogDescription","text":"The topic hash."}]},{"title":"Interface -- Types -- transactionDescription.args => Result","blocks":[{"link":"/v5/api/utils/abi/interface/#TransactionDescription","text":"The decoded values from the transaction data which were passed as the input parameters."}]},{"title":"Interface -- Types -- transactionDescription.functionFragment => FunctionFragment","blocks":[{"link":"/v5/api/utils/abi/interface/#TransactionDescription","text":"The FunctionFragment which matches the sighash in the transaction data."}]},{"title":"Interface -- Types -- transactionDescription.name => string","blocks":[{"link":"/v5/api/utils/abi/interface/#TransactionDescription","text":"The name of the function."},{"link":"/v5/api/utils/abi/interface/#TransactionDescription","text":"(e.g."},{"link":"/v5/api/utils/abi/interface/#TransactionDescription","text":"transfer)."}]},{"title":"Interface -- Types -- transactionDescription.sighash => string","blocks":[{"link":"/v5/api/utils/abi/interface/#TransactionDescription","text":"The sighash (or function selector) that matched the transaction data."}]},{"title":"Interface -- Types -- transactionDescription.signature => string","blocks":[{"link":"/v5/api/utils/abi/interface/#TransactionDescription","text":"The signature of the function."},{"link":"/v5/api/utils/abi/interface/#TransactionDescription","text":"(e.g."},{"link":"/v5/api/utils/abi/interface/#TransactionDescription","text":"transfer(address,uint256))."}]},{"title":"Interface -- Types -- transactionDescription.value => BigNumber","blocks":[{"link":"/v5/api/utils/abi/interface/#TransactionDescription","text":"The value from the transaction."}]},{"title":"Interface -- Specifying Fragments","blocks":[{"link":"/v5/api/utils/abi/interface/#Interface--specifying-fragments","text":"When specifying a fragment to any of the functions in an Interface, any of the following may be used:."},{"link":"/v5/api/utils/abi/interface/#Interface--specifying-fragments","text":"The name of the event or function, if it is unique and non-ambiguous within the ABI (e.g."},{"link":"/v5/api/utils/abi/interface/#Interface--specifying-fragments","text":"transfer) The signature of the event or function."},{"link":"/v5/api/utils/abi/interface/#Interface--specifying-fragments","text":"The signature is normalized, so, for example, uint and uint256 are equivalent (e.g."},{"link":"/v5/api/utils/abi/interface/#Interface--specifying-fragments","text":"transfer(address, uint)) The sighash or topichash of the function."},{"link":"/v5/api/utils/abi/interface/#Interface--specifying-fragments","text":"The sighash is often referred to the function selector in Solidity (e.g."},{"link":"/v5/api/utils/abi/interface/#Interface--specifying-fragments","text":"0xa9059cbb) A Fragment."}]},{"title":"Addresses","blocks":[{"link":"/v5/api/utils/address/#addresses","text":"Explain addresses,formats and checksumming here."},{"link":"/v5/api/utils/address/#addresses","text":"Also see: constants.AddressZero."}]},{"title":"Addresses -- Address Formats -- Address","blocks":[{"link":"/v5/api/utils/address/#address","text":"An Address is a DataHexString of 20 bytes (40 nibbles), with optional mixed case."},{"link":"/v5/api/utils/address/#address","text":"If the case is mixed, it is a Checksum Address, which uses a specific pattern of uppercase and lowercase letters within a given address to reduce the risk of errors introduced from typing an address or cut and paste issues."},{"link":"/v5/api/utils/address/#address","text":"All functions that return an Address will return a Checksum Address."}]},{"title":"Addresses -- Address Formats -- ICAP Address","blocks":[{"link":"/v5/api/utils/address/#address-icap","text":"The ICAP Address Format was an early attempt to introduce a checksum into Vapory addresses using the popular banking industry's IBAN format with the country code specified as XE."},{"link":"/v5/api/utils/address/#address-icap","text":"Due to the way IBAN encodes address, only addresses that fit into 30 base-36 characters are actually compatible, so the format was adapted to support 31 base-36 characters which is large enough for a full Vapory address, however the preferred method was to select a private key whose address has a 0 as the first byte, which allows the address to be formatted as a fully compatibly standard IBAN address with 30 base-36 characters."},{"link":"/v5/api/utils/address/#address-icap","text":"In general this format is no longer widely supported anymore, however any function that accepts an address can receive an ICAP address, and it will be converted internally."},{"link":"/v5/api/utils/address/#address-icap","text":"To convert an address into the ICAP format, see getIcapAddress."}]},{"title":"Addresses -- Converting and Verifying -- vapors.utils.getAddress( address ) => string< Address >","blocks":[{"link":"/v5/api/utils/address/#utils-getAddress","text":"Returns address as a Checksum Address."},{"link":"/v5/api/utils/address/#utils-getAddress","text":"If address is an invalid 40-nibble HexString or if it contains mixed case and the checksum is invalid, an InvalidArgument Error is thrown."},{"link":"/v5/api/utils/address/#utils-getAddress","text":"The value of address may be any supported address format."}]},{"title":"Addresses -- Converting and Verifying -- vapors.utils.getIcapAddress( address ) => string< IcapAddress >","blocks":[{"link":"/v5/api/utils/address/#utils-getIcapAddress","text":"Returns address as an ICAP address."},{"link":"/v5/api/utils/address/#utils-getIcapAddress","text":"Supports the same restrictions as utils.getAddress."}]},{"title":"Addresses -- Converting and Verifying -- vapors.utils.isAddress( address ) => boolean","blocks":[{"link":"/v5/api/utils/address/#utils-isAddress","text":"Returns true if address is valid (in any supported format)."}]},{"title":"Addresses -- Derivation -- vapors.utils.computeAddress( publicOrPrivateKey ) => string< Address >","blocks":[{"link":"/v5/api/utils/address/#utils-computeAddress","text":"Returns the address for publicOrPrivateKey."},{"link":"/v5/api/utils/address/#utils-computeAddress","text":"A public key may be compressed or uncompressed, and a private key will be converted automatically to a public key for the derivation."}]},{"title":"Addresses -- Derivation -- vapors.utils.recoverAddress( digest , signature ) => string< Address >","blocks":[{"link":"/v5/api/utils/address/#utils-recoverAddress","text":"Use ECDSA Public Key Recovery to determine the address that signed digest to which generated signature."}]},{"title":"Addresses -- Contracts Addresses -- vapors.utils.getContractAddress( transaction ) => string< Address >","blocks":[{"link":"/v5/api/utils/address/#utils-getContractAddress","text":"Returns the contract address that would result if transaction was used to deploy a contract."}]},{"title":"Addresses -- Contracts Addresses -- vapors.utils.getCreate2Address( from , salt , initCodeHash ) => string< Address >","blocks":[{"link":"/v5/api/utils/address/#utils-getCreate2Address","text":"Returns the contract address that would result from the given CREATE2 call."}]},{"title":"BigNumber","blocks":[{"link":"/v5/api/utils/bignumber/#BigNumber","text":"Many operations in Vapory operation on numbers which are outside the range of safe values to use in JavaScript."},{"link":"/v5/api/utils/bignumber/#BigNumber","text":"A BigNumber is an object which safely allows mathematical operations on numbers of any magnitude."},{"link":"/v5/api/utils/bignumber/#BigNumber","text":"Most operations which need to return a value will return a BigNumber and parameters which accept values will generally accept them."}]},{"title":"BigNumber -- Types -- BigNumberish","blocks":[{"link":"/v5/api/utils/bignumber/#BigNumberish","text":"Many functions and methods in this library take in values which can be non-ambiguously and safely converted to a BigNumber."},{"link":"/v5/api/utils/bignumber/#BigNumberish","text":"These values can be specified as:."}]},{"title":"BigNumber -- Types -- string","blocks":[{"link":"/v5/api/utils/bignumber/#BigNumberish","text":"A HexString or a decimal string, either of which may be negative."}]},{"title":"BigNumber -- Types -- BytesLike","blocks":[{"link":"/v5/api/utils/bignumber/#BigNumberish","text":"A BytesLike Object, such as an Array or Uint8Array."}]},{"title":"BigNumber -- Types -- BigNumber","blocks":[{"link":"/v5/api/utils/bignumber/#BigNumberish","text":"An existing BigNumber instance."}]},{"title":"BigNumber -- Types -- number","blocks":[{"link":"/v5/api/utils/bignumber/#BigNumberish","text":"A number that is within the safe range for JavaScript numbers."}]},{"title":"BigNumber -- Types -- BigInt","blocks":[{"link":"/v5/api/utils/bignumber/#BigNumberish","text":"A JavaScript BigInt object, on environments that support BigInt."}]},{"title":"BigNumber -- Creating Instances","blocks":[{"link":"/v5/api/utils/bignumber/#BigNumber--creating","text":"The constructor of BigNumber cannot be called directly."},{"link":"/v5/api/utils/bignumber/#BigNumber--creating","text":"Instead, Use the static BigNumber.from."}]},{"title":"BigNumber -- Creating Instances -- vapors.BigNumber.from( aBigNumberish ) => BigNumber","blocks":[{"link":"/v5/api/utils/bignumber/#BigNumber--creating","text":"Returns an instance of a BigNumber for aBigNumberish."}]},{"title":"BigNumber -- Methods","blocks":[{"link":"/v5/api/utils/bignumber/#BigNumber--methods","text":"The BigNumber class is immutable, so no operations can change the value it represents."}]},{"title":"BigNumber -- Methods -- BigNumber.add( otherValue ) => BigNumber","blocks":[{"link":"/v5/api/utils/bignumber/","text":"Returns a BigNumber with the value of BigNumber + otherValue."}]},{"title":"BigNumber -- Methods -- BigNumber.sub( otherValue ) => BigNumber","blocks":[{"link":"/v5/api/utils/bignumber/","text":"Returns a BigNumber with the value of BigNumber - otherValue."}]},{"title":"BigNumber -- Methods -- BigNumber.mul( otherValue ) => BigNumber","blocks":[{"link":"/v5/api/utils/bignumber/","text":"Returns a BigNumber with the value of BigNumber &times; otherValue."}]},{"title":"BigNumber -- Methods -- BigNumber.div( divisor ) => BigNumber","blocks":[{"link":"/v5/api/utils/bignumber/","text":"Returns a BigNumber with the value of BigNumber &div; divisor."}]},{"title":"BigNumber -- Methods -- BigNumber.mod( divisor ) => BigNumber","blocks":[{"link":"/v5/api/utils/bignumber/","text":"Returns a BigNumber with the value of the remainder of BigNumber &div; divisor."}]},{"title":"BigNumber -- Methods -- BigNumber.pow( exponent ) => BigNumber","blocks":[{"link":"/v5/api/utils/bignumber/","text":"Returns a BigNumber with the value of BigNumber to the power of exponent."}]},{"title":"BigNumber -- Methods -- BigNumber.abs( ) => BigNumber","blocks":[{"link":"/v5/api/utils/bignumber/","text":"Returns a BigNumber with the absolute value of BigNumber."}]},{"title":"BigNumber -- Methods -- BigNumber.mask( bitcount ) => BigNumber","blocks":[{"link":"/v5/api/utils/bignumber/","text":"Returns a BigNumber with the value of BigNumber with bits beyond the bitcount least significant bits set to zero."}]},{"title":"BigNumber -- Methods -- Two's Complement","blocks":[{"link":"/v5/api/utils/bignumber/#BigNumber--methods","text":"Two's Complement is an elegant method used to encode and decode fixed-width signed values while efficiently preserving mathematical operations."},{"link":"/v5/api/utils/bignumber/#BigNumber--methods","text":"Most users will not need to interact with these."}]},{"title":"BigNumber -- Methods -- BigNumber.fromTwos( bitwidth ) => BigNumber","blocks":[{"link":"/v5/api/utils/bignumber/","text":"Returns a BigNumber with the value of BigNumber converted from twos-complement with bitwidth."}]},{"title":"BigNumber -- Methods -- BigNumber.toTwos( bitwidth ) => BigNumber","blocks":[{"link":"/v5/api/utils/bignumber/","text":"Returns a BigNumber with the value of BigNumber converted to twos-complement with bitwidth."}]},{"title":"BigNumber -- Methods -- BigNumber.eq( otherValue ) => boolean","blocks":[{"link":"/v5/api/utils/bignumber/","text":"Returns true if and only if the value of BigNumber is equal to otherValue."}]},{"title":"BigNumber -- Methods -- BigNumber.lt( otherValue ) => boolean","blocks":[{"link":"/v5/api/utils/bignumber/","text":"Returns true if and only if the value of BigNumber < otherValue."}]},{"title":"BigNumber -- Methods -- BigNumber.lte( otherValue ) => boolean","blocks":[{"link":"/v5/api/utils/bignumber/","text":"Returns true if and only if the value of BigNumber &le; otherValue."}]},{"title":"BigNumber -- Methods -- BigNumber.gt( otherValue ) => boolean","blocks":[{"link":"/v5/api/utils/bignumber/","text":"Returns true if and only if the value of BigNumber > otherValue."}]},{"title":"BigNumber -- Methods -- BigNumber.gte( otherValue ) => boolean","blocks":[{"link":"/v5/api/utils/bignumber/","text":"Returns true if and only if the value of BigNumber &ge; otherValue."}]},{"title":"BigNumber -- Methods -- BigNumber.isZero( ) => boolean","blocks":[{"link":"/v5/api/utils/bignumber/","text":"Returns true if and only if the value of BigNumber is zero."}]},{"title":"BigNumber -- Methods -- BigNumber.toNumber( ) => number","blocks":[{"link":"/v5/api/utils/bignumber/","text":"Returns the value of BigNumber as a JavaScript value."},{"link":"/v5/api/utils/bignumber/","text":"This will throw an error if the value is greater than or equal to Number.MAX_SAFE_INTEGER or less than or equal to Number.MIN_SAFE_INTEGER."}]},{"title":"BigNumber -- Methods -- BigNumber.toString( ) => string","blocks":[{"link":"/v5/api/utils/bignumber/","text":"Returns the value of BigNumber as a base-10 string."}]},{"title":"BigNumber -- Methods -- BigNumber.toHexString( ) => string< DataHexString >","blocks":[{"link":"/v5/api/utils/bignumber/","text":"Returns the value of BigNumber as a base-16, 0x-prefixed DataHexString."}]},{"title":"BigNumber -- Methods -- vapors.BigNumber.isBigNumber( object ) => boolean","blocks":[{"link":"/v5/api/utils/bignumber/","text":"Returns true if and only if the object is a BigNumber object."}]},{"title":"BigNumber -- Notes","blocks":[{"link":"/v5/api/utils/bignumber/#BigNumber--notes","text":"This section is a for a couple of questions that come up frequently."}]},{"title":"BigNumber -- Notes -- Why can't I just use numbers?","blocks":[{"link":"/v5/api/utils/bignumber/#BigNumber--notes-safenumbers","text":"The first problem many encounter when dealing with Vapory is the concept of numbers."},{"link":"/v5/api/utils/bignumber/#BigNumber--notes-safenumbers","text":"Most common currencies are broken down with very little granularity."},{"link":"/v5/api/utils/bignumber/#BigNumber--notes-safenumbers","text":"For example, there are only 100 cents in a single dollar."},{"link":"/v5/api/utils/bignumber/#BigNumber--notes-safenumbers","text":"However, there are 1018 wei in a single ether."},{"link":"/v5/api/utils/bignumber/#BigNumber--notes-safenumbers","text":"JavaScript uses IEEE 754 double-precision binary floating point numbers to represent numeric values."},{"link":"/v5/api/utils/bignumber/#BigNumber--notes-safenumbers","text":"As a result, there are holes in the integer set after 9,007,199,254,740,991; which is problematic for Vapory because that is only around 0.009 ether (in wei), which means any value over that will begin to experience rounding errors."},{"link":"/v5/api/utils/bignumber/#BigNumber--notes-safenumbers","text":"To demonstrate how this may be an issue in your code, consider:."},{"link":"/v5/api/utils/bignumber/#BigNumber--notes-safenumbers","text":"To remedy this, all numbers (which can be large) are stored and manipulated as Big Numbers."},{"link":"/v5/api/utils/bignumber/#BigNumber--notes-safenumbers","text":"The functions parseEther( vaporString ) and formatEther( wei ) can be used to convert between string representations, which are displayed to or entered by the user and Big Number representations which can have mathematical operations handled safely."}]},{"title":"BigNumber -- Notes -- Why not BigNumber.js, BN.js, BigDecimal, etc?","blocks":[{"link":"/v5/api/utils/bignumber/#BigNumber--notes","text":"Everyone has their own favourite Big Number library, and once someone has chosen one, it becomes part of their identity, like their editor, vi vs emacs."},{"link":"/v5/api/utils/bignumber/#BigNumber--notes","text":"There are over 100 Big Number libraries on npm."},{"link":"/v5/api/utils/bignumber/#BigNumber--notes","text":"One of the biggest differences between the Vapors BigNumber object and other libraries is that it is immutable, which is very important when dealing with the asynchronous nature of the blockchain."},{"link":"/v5/api/utils/bignumber/#BigNumber--notes","text":"Capturing the value is not safe in async functions, so immutability protects us from easy to make mistakes, which is not possible on the low-level library's objects which supports myriad in-place operations."},{"link":"/v5/api/utils/bignumber/#BigNumber--notes","text":"Second, the Vapors BigNumber provides all the functionality required internally and should generally be sufficient for most developers while not exposing some of the more advanced and rare functionality."},{"link":"/v5/api/utils/bignumber/#BigNumber--notes","text":"So it will be easier to swap out the underlying library without impacting consumers."},{"link":"/v5/api/utils/bignumber/#BigNumber--notes","text":"For example, if BN.js was exposed, someone may use the greatest-common-denominator functions, which would then be functionality the replacing library should also provide to ensure anyone depending on that functionality is not broken."}]},{"title":"BigNumber -- Notes -- Why BN.js??","blocks":[{"link":"/v5/api/utils/bignumber/#BigNumber--notes","text":"The reason why BN.js is used internally as the big number is because that is the library used by elliptic."},{"link":"/v5/api/utils/bignumber/#BigNumber--notes","text":"Therefore it must be included regardless, so we leverage that library rather than adding another Big Number library, which would mean two different libraries offering the same functionality."},{"link":"/v5/api/utils/bignumber/#BigNumber--notes","text":"This has saved about 85kb (80% of this library size) of library size over other libraries which include separate Big Number libraries for various purposes."}]},{"title":"BigNumber -- Notes -- Allow us to set a global Big Number library?","blocks":[{"link":"/v5/api/utils/bignumber/#BigNumber--notes","text":"Another comment that comes up frequently is the desire to specify a global user-defined Big Number library, which all functions would return."},{"link":"/v5/api/utils/bignumber/#BigNumber--notes","text":"This becomes problematic since your code may live along side other libraries or code that use Vapors."},{"link":"/v5/api/utils/bignumber/#BigNumber--notes","text":"In fact, even Vapors uses a lot of the public functions internally."},{"link":"/v5/api/utils/bignumber/#BigNumber--notes","text":"If you, for example, used a library that used a.plus(b) instead of a.add(b), this would break Vapors when it tries to compute fees internally, and other libraries likely have similar logic."},{"link":"/v5/api/utils/bignumber/#BigNumber--notes","text":"But, the BigNumber prototype is exposed, so you can always add a toMyCustomBigNumber() method to all BigNumber's globally which is safe."}]},{"title":"Byte Manipulation","blocks":[{"link":"/v5/api/utils/bytes/","text":"Tra la la..."}]},{"title":"Byte Manipulation -- Types -- Bytes","blocks":[{"link":"/v5/api/utils/bytes/#Bytes","text":"A Bytes is any object which is an Array or TypedArray with each value in the valid byte range (i.e."},{"link":"/v5/api/utils/bytes/#Bytes","text":"between 0 and 255 inclusive), or is an Object with a length property where each indexed property is in the valid byte range."}]},{"title":"Byte Manipulation -- Types -- BytesLike","blocks":[{"link":"/v5/api/utils/bytes/#BytesLike","text":"A BytesLike can be either a Bytes or a DataHexString."}]},{"title":"Byte Manipulation -- Types -- DataHexString","blocks":[{"link":"/v5/api/utils/bytes/#DataHexString","text":"A DataHexstring is identical to a HexString except that it has an even number of nibbles, and therefore is a valid representation of binary data as a string."}]},{"title":"Byte Manipulation -- Types -- HexString","blocks":[{"link":"/v5/api/utils/bytes/#HexString","text":"A Hexstring is a string which has a 0x prefix followed by any number of nibbles (i.e."},{"link":"/v5/api/utils/bytes/#HexString","text":"case-insensitive hexadecimal characters, 0-9 and a-f)."}]},{"title":"Byte Manipulation -- Types -- Signature","blocks":[{"link":"/v5/api/utils/bytes/#Signature","text":"r and s --- The x co-ordinate of r and the s value of the signature v --- The parity of the y co-ordinate of r _vs --- The compact representation of the s and v recoveryParam --- The normalized (i.e."},{"link":"/v5/api/utils/bytes/#Signature","text":"0 or 1) value of v."}]},{"title":"Byte Manipulation -- Types -- Raw Signature","blocks":[{"link":"/v5/api/utils/bytes/#signature-raw","text":"A Raw Signature is a common Signature format where the r, s and v are concatenated into a 65 byte (130 nibble) DataHexString."}]},{"title":"Byte Manipulation -- Types -- SignatureLike","blocks":[{"link":"/v5/api/utils/bytes/#SignatureLike","text":"A SignatureLike is similar to a Signature, except redundant properties may be omitted or it may be a Raw Signature."},{"link":"/v5/api/utils/bytes/#SignatureLike","text":"For example, if _vs is specified, s and v may be omitted."},{"link":"/v5/api/utils/bytes/#SignatureLike","text":"Likewise, if recoveryParam is provided, v may be omitted (as in these cases the missing values can be computed)."}]},{"title":"Byte Manipulation -- Inspection -- vapors.utils.isBytes( object ) => boolean","blocks":[{"link":"/v5/api/utils/bytes/#utils-isBytes","text":"Returns true if and only if object is a valid Bytes."}]},{"title":"Byte Manipulation -- Inspection -- vapors.utils.isBytesLike( object ) => boolean","blocks":[{"link":"/v5/api/utils/bytes/#utils-isBytesLike","text":"Returns true if and only if object is a Bytes or DataHexString."}]},{"title":"Byte Manipulation -- Inspection -- vapors.utils.isHexString( object , [ length ] ) => boolean","blocks":[{"link":"/v5/api/utils/bytes/#utils-isHexString","text":"Returns true if and only if object is a valid hex string."},{"link":"/v5/api/utils/bytes/#utils-isHexString","text":"If length is specified and object is not a valid DataHexString of length bytes, an InvalidArgument error is thrown."}]},{"title":"Byte Manipulation -- Converting between Arrays and Hexstrings -- vapors.utils.arrayify( DataHexStringOrArrayish [ , options ] ) => Uint8Array","blocks":[{"link":"/v5/api/utils/bytes/#utils-arrayify","text":"Converts DataHexStringOrArrayish to a Uint8Array."}]},{"title":"Byte Manipulation -- Converting between Arrays and Hexstrings -- vapors.utils.hexlify( hexstringOrArrayish ) => string< DataHexString >","blocks":[{"link":"/v5/api/utils/bytes/#utils-hexlify","text":"Converts hexstringOrArrayish to a DataHexString."}]},{"title":"Byte Manipulation -- Converting between Arrays and Hexstrings -- vapors.utils.hexValue( aBigNumberish ) => string< HexString >","blocks":[{"link":"/v5/api/utils/bytes/#utils-hexValue","text":"Converts aBigNumberish to a HexString, with no unnecessary leading zeros."}]},{"title":"Byte Manipulation -- Array Manipulation -- vapors.utils.concat( arrayOfBytesLike ) => Uint8Array","blocks":[{"link":"/v5/api/utils/bytes/#utils-concat","text":"Concatenates all the BytesLike in arrayOfBytesLike into a single Uint8Array."}]},{"title":"Byte Manipulation -- Array Manipulation -- vapors.utils.stripZeros( aBytesLike ) => Uint8Array","blocks":[{"link":"/v5/api/utils/bytes/#utils-stripZeros","text":"Returns a Uint8Array with all leading 0 bytes of aBtyesLike removed."}]},{"title":"Byte Manipulation -- Array Manipulation -- vapors.utils.zeroPad( aBytesLike , length ) => Uint8Array","blocks":[{"link":"/v5/api/utils/bytes/#utils-zeroPad","text":"Returns a Uint8Array of the data in aBytesLike with 0 bytes prepended to length bytes long."},{"link":"/v5/api/utils/bytes/#utils-zeroPad","text":"If aBytesLike is already longer than length bytes long, an InvalidArgument error will be thrown."}]},{"title":"Byte Manipulation -- Hexstring Manipulation -- vapors.utils.hexConcat( arrayOfBytesLike ) => string< DataHexString >","blocks":[{"link":"/v5/api/utils/bytes/#utils-hexConcat","text":"Concatenates all the BytesLike in arrayOfBytesLike into a single DataHexString."}]},{"title":"Byte Manipulation -- Hexstring Manipulation -- vapors.utils.hexDataLength( aBytesLike ) => string< DataHexString >","blocks":[{"link":"/v5/api/utils/bytes/#utils-hexDataLength","text":"Returns the length (in bytes) of aBytesLike."}]},{"title":"Byte Manipulation -- Hexstring Manipulation -- vapors.utils.hexDataSlice( aBytesLike , offset [ , endOffset ] ) => string< DataHexString >","blocks":[{"link":"/v5/api/utils/bytes/#utils-hexDataSlice","text":"Returns a DataHexString representation of a slice of aBytesLike, from offset (in bytes) to endOffset (in bytes)."},{"link":"/v5/api/utils/bytes/#utils-hexDataSlice","text":"If endOffset is omitted, the length of aBytesLike is used."}]},{"title":"Byte Manipulation -- Hexstring Manipulation -- vapors.utils.hexStripZeros( aBytesLike ) => string< HexString >","blocks":[{"link":"/v5/api/utils/bytes/#utils-hexStripZeros","text":"Returns a HexString representation of aBytesLike with all leading zeros removed."}]},{"title":"Byte Manipulation -- Hexstring Manipulation -- vapors.utils.hexZeroPad( aBytesLike , length ) => string< DataHexString >","blocks":[{"link":"/v5/api/utils/bytes/#utils-hexZeroPad","text":"Returns a DataHexString representation of aBytesLike padded to length bytes."},{"link":"/v5/api/utils/bytes/#utils-hexZeroPad","text":"If aBytesLike is already longer than length bytes long, an InvalidArgument error will be thrown."}]},{"title":"Byte Manipulation -- Signature Conversion -- vapors.utils.joinSignature( aSignatureLike ) => string< RawSignature >","blocks":[{"link":"/v5/api/utils/bytes/#utils-joinSignature","text":"Return the raw-format of aSignaturelike, which is 65 bytes (130 nibbles) long, concatenating the r, s and (normalized) v of a Signature."}]},{"title":"Byte Manipulation -- Signature Conversion -- vapors.utils.splitSignature( aSignatureLikeOrBytesLike ) => Signature","blocks":[{"link":"/v5/api/utils/bytes/#utils-splitSignature","text":"Return the full expanded-format of aSignaturelike or a raw-format DataHexString."},{"link":"/v5/api/utils/bytes/#utils-splitSignature","text":"Any missing properties will be computed."}]},{"title":"Byte Manipulation -- Random Bytes -- vapors.utils.randomBytes( length ) => Uint8Array","blocks":[{"link":"/v5/api/utils/bytes/#utils-randomBytes","text":"Return a new Uint8Array of length random bytes."}]},{"title":"Byte Manipulation -- Random Bytes -- vapors.utils.shuffled( array ) => Array< any >","blocks":[{"link":"/v5/api/utils/bytes/#utils-shuffled","text":"Return a copy of array shuffled using Fisher-Yates Shuffle."}]},{"title":"Constants","blocks":[{"link":"/v5/api/utils/constants/#constants","text":"The vapors.contants Object contains commonly used values."}]},{"title":"Constants -- Bytes -- vapors.constants.AddressZero => string< Address >","blocks":[{"link":"/v5/api/utils/constants/#constants-AddressZero","text":"The Address Zero, which is 20 bytes (40 nibbles) of zero."}]},{"title":"Constants -- Bytes -- vapors.constants.HashZero => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/utils/constants/#constants-HashZero","text":"The Hash Zero, which is 32 bytes (64 nibbles) of zero."}]},{"title":"Constants -- Strings -- vapors.constants.VaporSymbol => string","blocks":[{"link":"/v5/api/utils/constants/#constants-VaporSymbol","text":"The Ether symbol, &Xi;."}]},{"title":"Constants -- BigNumber -- vapors.constants.NegativeOne => BigNumber","blocks":[{"link":"/v5/api/utils/constants/#constants-NegativeOne","text":"The BigNumber value representing \"-1\"."}]},{"title":"Constants -- BigNumber -- vapors.constants.Zero => BigNumber","blocks":[{"link":"/v5/api/utils/constants/#constants-Zero","text":"The BigNumber value representing \"0\"."}]},{"title":"Constants -- BigNumber -- vapors.constants.One => BigNumber","blocks":[{"link":"/v5/api/utils/constants/#constants-One","text":"The BigNumber value representing \"1\"."}]},{"title":"Constants -- BigNumber -- vapors.constants.Two => BigNumber","blocks":[{"link":"/v5/api/utils/constants/#constants-Two","text":"The BigNumber value representing \"2\"."}]},{"title":"Constants -- BigNumber -- vapors.constants.WeiPerEther => BigNumber","blocks":[{"link":"/v5/api/utils/constants/#constants-WeiPerEther","text":"The BigNumber value representing \"1000000000000000000\", which is the number of Wei per Ether."}]},{"title":"Constants -- BigNumber -- vapors.constants.MaxUint256 => BigNumber","blocks":[{"link":"/v5/api/utils/constants/#constants-MaxUint256","text":"The BigNumber value representing the maximum uint256 value."}]},{"title":"Display Logic and Input","blocks":[{"link":"/v5/api/utils/display-logic/#display-logic","text":"When creating an Application, it is useful to convert between user-friendly strings (usually displaying ether) and the machine-readable values that contracts and maths depend on (usually in wei)."},{"link":"/v5/api/utils/display-logic/#display-logic","text":"For example, a Wallet may specify the balance in ether, and gas prices in gwei for the User Interface, but when sending a transaction, both must be specified in wei."},{"link":"/v5/api/utils/display-logic/#display-logic","text":"The parseUnits will parse a string representing ether, such as 1.1 into a BigNumber in wei, and is useful when a user types in a value, such as sending 1.1 ether."},{"link":"/v5/api/utils/display-logic/#display-logic","text":"The formatUnits will format a BigNumberish into a string, which is useful when displaying a balance."}]},{"title":"Display Logic and Input -- Units -- Decimal Count","blocks":[{"link":"/v5/api/utils/display-logic/#display-logic--units","text":"A Unit can be specified as a number, which indicates the number of decimal places that should be used."},{"link":"/v5/api/utils/display-logic/#display-logic--units","text":"Examples:."},{"link":"/v5/api/utils/display-logic/#display-logic--units","text":"1 ether in wei, has 18 decimal places (i.e."},{"link":"/v5/api/utils/display-logic/#display-logic--units","text":"1 ether represents 1018 wei) 1 bitcoin in Satoshi, has 8 decimal places (i.e."},{"link":"/v5/api/utils/display-logic/#display-logic--units","text":"1 bitcoin represents 108 satoshi)."}]},{"title":"Display Logic and Input -- Units -- Named Units","blocks":[{"link":"/v5/api/utils/display-logic/#display-logic--named-units","text":"There are also several common Named Units, in which case their name (as a string) may be used."}]},{"title":"Display Logic and Input -- Functions -- vapors.utils.commify( value ) => string","blocks":[{"link":"/v5/api/utils/display-logic/#utils-commify","text":"Returns a string with value grouped by 3 digits, separated by ,."}]},{"title":"Display Logic and Input -- Functions -- vapors.utils.formatUnits( value [ , unit = \"ether\" ] ) => string","blocks":[{"link":"/v5/api/utils/display-logic/#utils-formatUnits","text":"Returns a string representation of value formatted with unit digits (if it is a number) or to the unit specified (if a string)."}]},{"title":"Display Logic and Input -- Functions -- vapors.utils.formatEther( value ) => string","blocks":[{"link":"/v5/api/utils/display-logic/#utils-formatEther","text":"The equivalent to calling formatUnits(value, \"ether\")."}]},{"title":"Display Logic and Input -- Functions -- vapors.utils.parseUnits( value [ , unit = \"ether\" ] ) => BigNumber","blocks":[{"link":"/v5/api/utils/display-logic/#utils-parseUnits","text":"Returns a BigNumber representation of value, parsed with unit digits (if it is a number) or from the unit specified (if a string)."}]},{"title":"Display Logic and Input -- Functions -- vapors.utils.parseEther( value ) => BigNumber","blocks":[{"link":"/v5/api/utils/display-logic/#utils-parseEther","text":"The equivalent to calling parseUnits(value, \"ether\")."}]},{"title":"Encoding Utilities -- Base58 -- vapors.utils.base58.decode( textData ) => Uin8Array","blocks":[{"link":"/v5/api/utils/encoding/#Bse58","text":"Return a typed Uint8Array representation of textData decoded using base-58 encoding."}]},{"title":"Encoding Utilities -- Base58 -- vapors.utils.base58.encode( aBytesLike ) => string","blocks":[{"link":"/v5/api/utils/encoding/#Bse58","text":"Return aBytesLike encoded as a string using the base-58 encoding."}]},{"title":"Encoding Utilities -- Base64 -- vapors.utils.base64.decode( textData ) => Uin8Array","blocks":[{"link":"/v5/api/utils/encoding/#Base64","text":"Return a typed Uint8Array representation of textData decoded using base-64 encoding."}]},{"title":"Encoding Utilities -- Base64 -- vapors.utils.base64.encode( aBytesLike ) => string","blocks":[{"link":"/v5/api/utils/encoding/#Base64","text":"Return aBytesLike encoded as a string using the base-64 encoding."}]},{"title":"Encoding Utilities -- Recursive-Length Prefix","blocks":[{"link":"/v5/api/utils/encoding/#rlp--methods","text":"The Recursive Length Prefix encoding is used throughout Vapory to serialize nested structures of Arrays and data."}]},{"title":"Encoding Utilities -- Recursive-Length Prefix -- vapors.utils.RLP.encode( dataObject ) => string< DataHexString >","blocks":[{"link":"/v5/api/utils/encoding/#utils-rlpEncode","text":"Encode a structured Data Object into its RLP-encoded representation."},{"link":"/v5/api/utils/encoding/#utils-rlpEncode","text":"Each Data component may be a valid BytesLike."}]},{"title":"Encoding Utilities -- Recursive-Length Prefix -- vapors.utils.RLP.decode( aBytesLike ) => DataObject","blocks":[{"link":"/v5/api/utils/encoding/#utils.rlpDecode","text":"Decode an RLP-encoded aBytesLike into its structured Data Object."},{"link":"/v5/api/utils/encoding/#utils.rlpDecode","text":"All Data components will be returned as a DataHexString."}]},{"title":"Encoding Utilities -- Recursive-Length Prefix -- Data Object","blocks":[{"link":"/v5/api/utils/encoding/#rlp--dataobject","text":"A Data Object is a recursive structure which is used to serialize many internal structures in Vapory."},{"link":"/v5/api/utils/encoding/#rlp--dataobject","text":"Each Data Object can either be:."},{"link":"/v5/api/utils/encoding/#rlp--dataobject","text":"Binary Data An Array of Data Objects (i.e."},{"link":"/v5/api/utils/encoding/#rlp--dataobject","text":"this recursively includes Nesting)."}]},{"title":"Encoding Utilities -- Recursive-Length Prefix -- Examples","blocks":[{"link":"/v5/api/utils/encoding/#rlp--dataobject","text":"\"0x1234\" [ \"0x1234\", [ \"0xdead\", \"0xbeef\" ], [ ] ]."}]},{"title":"FixedNumber","blocks":[{"link":"/v5/api/utils/fixednumber/#FixedNumber","text":"A FixedNumber is a fixed-width (in bits) number with an internal base-10 divisor, which allows it to represent a decimal fractional component."}]},{"title":"FixedNumber -- Creating Instances","blocks":[{"link":"/v5/api/utils/fixednumber/#FixedNumber","text":"The FixedNumber constructor cannot be called directly."},{"link":"/v5/api/utils/fixednumber/#FixedNumber","text":"There are several static methods for creating a FixedNumber."}]},{"title":"FixedNumber -- Creating Instances -- FixedNumber.from( value [ , format = \"fixed\" ] ) => FixedNumber","blocks":[{"link":"/v5/api/utils/fixednumber/","text":"Returns an instance of a FixedNumber for value as a format."}]},{"title":"FixedNumber -- Creating Instances -- FixedNumber.fromBytes( aBytesLike [ , format = \"fixed\" ] ) => FixedNumber","blocks":[{"link":"/v5/api/utils/fixednumber/","text":"Returns an instance of a FixedNumber for value as a format."}]},{"title":"FixedNumber -- Creating Instances -- FixedNumber.fromString( value [ , format = \"fixed\" ] ) => FixedNumber","blocks":[{"link":"/v5/api/utils/fixednumber/","text":"Returns an instance of a FixedNumber for value as a format."},{"link":"/v5/api/utils/fixednumber/","text":"The value must not contain more decimals than the format permits."}]},{"title":"FixedNumber -- Creating Instances -- FixedNumber.fromValue( value [ , decimals = 0 [ , format = \"fixed\" ] ] ) => FixedNumber","blocks":[{"link":"/v5/api/utils/fixednumber/","text":"Returns an instance of a FixedNumber for value with decimals as a format."}]},{"title":"FixedNumber -- Properties -- fixednumber.format","blocks":[{"link":"/v5/api/utils/fixednumber/","text":"The FixedFormat of fixednumber."}]},{"title":"FixedNumber -- Methods -- fixednumber.addUnsafe( otherValue ) => FixedNumber","blocks":[{"link":"/v5/api/utils/fixednumber/","text":"Returns a new FixedNumber with the value of fixedvalue + otherValue."}]},{"title":"FixedNumber -- Methods -- fixednumber.subUnsafe( otherValue ) => FixedNumber","blocks":[{"link":"/v5/api/utils/fixednumber/","text":"Returns a new FixedNumber with the value of fixedvalue - otherValue."}]},{"title":"FixedNumber -- Methods -- fixednumber.mulUnsafe( otherValue ) => FixedNumber","blocks":[{"link":"/v5/api/utils/fixednumber/","text":"Returns a new FixedNumber with the value of fixedvalue &times; otherValue."}]},{"title":"FixedNumber -- Methods -- fixednumber.divUnsafe( otherValue ) => FixedNumber","blocks":[{"link":"/v5/api/utils/fixednumber/","text":"Returns a new FixedNumber with the value of fixedvalue &div; otherValue."}]},{"title":"FixedNumber -- Methods -- fixednumber.round( [ decimals = 0 ] ) => FixedNumber","blocks":[{"link":"/v5/api/utils/fixednumber/","text":"Returns a new FixedNumber with the value of fixedvalue rounded to decimals."}]},{"title":"FixedNumber -- Methods -- FixedNumber.isZero( ) => boolean","blocks":[{"link":"/v5/api/utils/fixednumber/","text":"Returns true if and only if the value of FixedNumber is zero."}]},{"title":"FixedNumber -- Methods -- fixednumber.toFormat( format ) => FixedNumber","blocks":[{"link":"/v5/api/utils/fixednumber/","text":"Returns a new FixedNumber with the value of fixedvalue with format."}]},{"title":"FixedNumber -- Methods -- fixednumber.toHexString( ) => string","blocks":[{"link":"/v5/api/utils/fixednumber/","text":"Returns a HexString representation of fixednumber."}]},{"title":"FixedNumber -- Methods -- fixednumber.toString( ) => string","blocks":[{"link":"/v5/api/utils/fixednumber/","text":"Returns a string representation of fixednumber."}]},{"title":"FixedNumber -- Methods -- fixednumber.toUnsafeFloat( ) => float","blocks":[{"link":"/v5/api/utils/fixednumber/","text":"Returns a floating-point JavaScript number value of fixednumber."},{"link":"/v5/api/utils/fixednumber/","text":"Due to rounding in JavaScript numbers, the value is only approximate."}]},{"title":"FixedNumber -- Methods -- FixedNumber.isFixedNumber( value ) => boolean","blocks":[{"link":"/v5/api/utils/fixednumber/","text":"Returns true if and only if value is a FixedNumber."}]},{"title":"FixedNumber -- FixedFormat","blocks":[{"link":"/v5/api/utils/fixednumber/#FixedFormat","text":"A FixedFormat is a simple object which represents a decimal (base-10) Fixed-Point data representation."},{"link":"/v5/api/utils/fixednumber/#FixedFormat","text":"Usually using this class directly is unnecessary, as passing in a Format Strings directly into the FixedNumber will automatically create this."}]},{"title":"FixedNumber -- FixedFormat -- Format Strings","blocks":[{"link":"/v5/api/utils/fixednumber/#FixedFormat--strings","text":"A format string is composed of three components, including signed-ness, bit-width and number of decimals."},{"link":"/v5/api/utils/fixednumber/#FixedFormat--strings","text":"A signed format string begins with fixed, which an unsigned format string begins with ufixed, followed by the width (in bits) and the number of decimals."},{"link":"/v5/api/utils/fixednumber/#FixedFormat--strings","text":"The width must be congruent to 0 mod 8 (i.e."},{"link":"/v5/api/utils/fixednumber/#FixedFormat--strings","text":"(width % 8) == 0) and no larger than 256 bits and the number of decimals must be no larger than 80."},{"link":"/v5/api/utils/fixednumber/#FixedFormat--strings","text":"For example:."},{"link":"/v5/api/utils/fixednumber/#FixedFormat--strings","text":"fixed128x18 is signed, 128 bits wide and has 18 decimals; this is useful for most purposes fixed32x0 is signed, 32 bits wide and has 0 decimals; this would be the same as a int32_t in C ufixed32x0 is unsigned, 32 bits wide and has 0 decimals; this would be the same as a uint32_t in C fixed is shorthand for fixed128x18 ufixed is shorthand for ufixed128x18."}]},{"title":"FixedNumber -- FixedFormat -- FixedFormat.from( value = \"fixed128x18\" ) => FixedFormat","blocks":[{"link":"/v5/api/utils/fixednumber/#FixedNumber-from","text":"Returns a new instance of a FixedFormat defined by value."},{"link":"/v5/api/utils/fixednumber/#FixedNumber-from","text":"Any valid Format Strings may be passed in as well as any object which has any of signed, width and decimals defined, including a FixedFormat object."}]},{"title":"FixedNumber -- FixedFormat -- fixedFormat.signed => boolean","blocks":[{"link":"/v5/api/utils/fixednumber/","text":"The signed-ness of fixedFormat, true if negative values are supported."}]},{"title":"FixedNumber -- FixedFormat -- fixedFormat.width => number","blocks":[{"link":"/v5/api/utils/fixednumber/","text":"The width (in bits) of fixedFormat."}]},{"title":"FixedNumber -- FixedFormat -- fixedFormat.decimals => number","blocks":[{"link":"/v5/api/utils/fixednumber/","text":"The number of decimal points of fixedFormat."}]},{"title":"FixedNumber -- FixedFormat -- fixedFormat.name => string","blocks":[{"link":"/v5/api/utils/fixednumber/","text":"The name of the fixedFormat, which can be used to recreate the format and is the string that the Solidity language uses to represent this format."}]},{"title":"FixedNumber -- FixedFormat -- \"fixed\"","blocks":[{"link":"/v5/api/utils/fixednumber/","text":"A shorthand for fixed128x80."}]},{"title":"Hashing Algorithms","blocks":[{"link":"/v5/api/utils/hashing/#hashing-algorithms","text":"There are many hashing algorithms used throughout the blockchain space as well as some more complex usages which require utilities to facilitate these common operations."}]},{"title":"Hashing Algorithms -- Cryptographic Hash Functions","blocks":[{"link":"/v5/api/utils/hashing/#cryptographic-hash-functions","text":"The Cryptographic Hash Functions are a specific family of hash functions."}]},{"title":"Hashing Algorithms -- Cryptographic Hash Functions -- vapors.utils.id( text ) => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/utils/hashing/#utils-id","text":"The Vapory Identity function computes the KECCAK256 hash of the text bytes."}]},{"title":"Hashing Algorithms -- Cryptographic Hash Functions -- vapors.utils.keccak256( aBytesLike ) => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/utils/hashing/#utils-keccak256","text":"Returns the KECCAK256 digest aBytesLike."}]},{"title":"Hashing Algorithms -- Cryptographic Hash Functions -- vapors.utils.ripemd160( aBytesLike ) => string< DataHexString< 20 > >","blocks":[{"link":"/v5/api/utils/hashing/#utils-ripemd160","text":"Returns the RIPEMD-160 digest of aBytesLike."}]},{"title":"Hashing Algorithms -- Cryptographic Hash Functions -- vapors.utils.sha256( aBytesLike ) => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/utils/hashing/#utils-sha256","text":"Returns the SHA2-256 digest of aBytesLike."}]},{"title":"Hashing Algorithms -- Cryptographic Hash Functions -- vapors.utils.sha512( aBytesLike ) => string< DataHexString< 64 > >","blocks":[{"link":"/v5/api/utils/hashing/#utils-sha512","text":"Returns the SHA2-512 digest of aBytesLike."}]},{"title":"Hashing Algorithms -- HMAC -- vapors.utils.computeHmac( algorithm , key , data ) => string< DataHexString >","blocks":[{"link":"/v5/api/utils/hashing/#utils-computeHmac","text":"Returns the HMAC of data with key using the Algorithm algorithm."}]},{"title":"Hashing Algorithms -- HMAC -- vapors.utils.SupportedAlgorithm.sha256 => string","blocks":[{"link":"/v5/api/utils/hashing/#utils--hmac-supported-algorithm","text":"Use the SHA2-256 hash algorithm."}]},{"title":"Hashing Algorithms -- HMAC -- vapors.utils.SupportedAlgorithm.sha512 => string","blocks":[{"link":"/v5/api/utils/hashing/#utils--hmac-supported-algorithm","text":"Use the SHA2-512 hash algorithm."}]},{"title":"Hashing Algorithms -- Hashing Helpers -- vapors.utils.hashMessage( message ) => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/utils/hashing/#utils-hashMessage","text":"Computes the EIP-191 personal message digest of message."},{"link":"/v5/api/utils/hashing/#utils-hashMessage","text":"Personal messages are converted to UTF-8 bytes and prefixed with \\x19Vapory Signed Message: and the length of message."}]},{"title":"Hashing Algorithms -- Hashing Helpers -- vapors.utils.namehash( name ) => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/utils/hashing/#utils-namehash","text":"Returns the ENS Namehash of name."}]},{"title":"Hashing Algorithms -- Hashing Helpers -- Typed Data Encoder","blocks":[{"link":"/v5/api/utils/hashing/#TypedDataEncoder","text":"The TypedDataEncoder is used to compute the various encoded data required for EIP-712 signed data."},{"link":"/v5/api/utils/hashing/#TypedDataEncoder","text":"Signed data requires a domain, list of structures and their members and the data itself."},{"link":"/v5/api/utils/hashing/#TypedDataEncoder","text":"The domain is an object with values for any of the standard domain properties."},{"link":"/v5/api/utils/hashing/#TypedDataEncoder","text":"The types is an object with each property being the name of a structure, mapping to an array of field descriptions."},{"link":"/v5/api/utils/hashing/#TypedDataEncoder","text":"It should not include the EIP712Domain property unless it is required as a child structure of another."}]},{"title":"Hashing Algorithms -- Hashing Helpers -- Experimental Feature (this exported class name will change)","blocks":[{"link":"/v5/api/utils/hashing/#TypedDataEncoder","text":"This is still an experimental feature."},{"link":"/v5/api/utils/hashing/#TypedDataEncoder","text":"If using it, please specify the exact version of vapors you are using (e.g."},{"link":"/v5/api/utils/hashing/#TypedDataEncoder","text":"spcify \"5.0.18\", not \"^5.0.18\") as the exported class name will be renamed from _TypedDataEncoder to TypedDataEncoder once it has been used in the field a bit."}]},{"title":"Hashing Algorithms -- Hashing Helpers -- vapors.utils._TypedDataEncoder.from( types ) => [TypedDataEncoder]","blocks":[{"link":"/v5/api/utils/hashing/#TypedDataEncoder-from","text":"Creates a new TypedDataEncoder for types."},{"link":"/v5/api/utils/hashing/#TypedDataEncoder-from","text":"This object is a fairly low-level object that most developers should not require using instances directly."},{"link":"/v5/api/utils/hashing/#TypedDataEncoder-from","text":"Most developers will find the static class methods below the most useful."}]},{"title":"Hashing Algorithms -- Hashing Helpers -- TypedDataEncoder.encode( domain , types , values ) => string","blocks":[{"link":"/v5/api/utils/hashing/#TypedDataEncoder-encode","text":"Encodes the Returns the hashed EIP-712 domain."}]},{"title":"Hashing Algorithms -- Hashing Helpers -- TypedDataEncoder.getPayload( domain , types , value ) => any","blocks":[{"link":"/v5/api/utils/hashing/#TypedDataEncoder-getPayload","text":"Returns the standard payload used by various JSON-RPC eth_signTypedData* calls."},{"link":"/v5/api/utils/hashing/#TypedDataEncoder-getPayload","text":"All domain values and entries in value are normalized and the types are verified."}]},{"title":"Hashing Algorithms -- Hashing Helpers -- TypedDataEncoder.getPrimaryType( types ) => string","blocks":[{"link":"/v5/api/utils/hashing/#TypedDataEncoder-getPrimaryType","text":"Constructs a directed acyclic graph of the types and returns the root type, which can be used as the primaryType for EIP-712 payloads."}]},{"title":"Hashing Algorithms -- Hashing Helpers -- TypedDataEncoder.hash( domain , types , values ) => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/utils/hashing/#TypedDataEncoder-hash","text":"Returns the computed EIP-712 hash."}]},{"title":"Hashing Algorithms -- Hashing Helpers -- TypedDataEncoder.hashDomain( domain ) => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/utils/hashing/#TypedDataEncoder-hashDomain","text":"Returns the hashed EIP-712 domain."}]},{"title":"Hashing Algorithms -- Hashing Helpers -- TypedDataEncoder.resolveNames( domain , types , value , resolveName ) => Promise< any >","blocks":[{"link":"/v5/api/utils/hashing/#TypedDataEncoder-resolveNames","text":"Returns a copy of value, where any leaf value with a type of address will have been recursively replacedwith the value of calling resolveName with that value."}]},{"title":"Hashing Algorithms -- Solidity Hashing Algorithms","blocks":[{"link":"/v5/api/utils/hashing/#utils--solidity-hashing","text":"When using the Solidity abi.packEncoded(...) function, a non-standard tightly packed version of encoding is used."},{"link":"/v5/api/utils/hashing/#utils--solidity-hashing","text":"These functions implement the tightly packing algorithm."}]},{"title":"Hashing Algorithms -- Solidity Hashing Algorithms -- vapors.utils.solidityPack( types , values ) => string< DataHexString >","blocks":[{"link":"/v5/api/utils/hashing/#utils-solidityPack","text":"Returns the non-standard encoded values packed according to their respective type in types."}]},{"title":"Hashing Algorithms -- Solidity Hashing Algorithms -- vapors.utils.solidityKeccak256( types , values ) => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/utils/hashing/#utils-solidityKeccak256","text":"Returns the KECCAK256 of the non-standard encoded values packed according to their respective type in types."}]},{"title":"Hashing Algorithms -- Solidity Hashing Algorithms -- vapors.utils.soliditySha256( types , values ) => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/utils/hashing/#utils-soliditySha256","text":"Returns the SHA2-256 of the non-standard encoded values packed according to their respective type in types."}]},{"title":"HD Wallet","blocks":[{"link":"/v5/api/utils/hdnode/#hdnodes","text":"TODO: Explain BIP32 BIP-39 and whatnot here..."}]},{"title":"HD Wallet -- Types -- vapors.utils.defaultPath => \"m/44'/60'/0'/0/0\"","blocks":[{"link":"/v5/api/utils/hdnode/#hdnodes--defaultpath","text":"The default path for Vapory in an HD Wallet."}]},{"title":"HD Wallet -- Types -- mnemonic.phrase => string","blocks":[{"link":"/v5/api/utils/hdnode/#Mnemonic","text":"The mnemonic phrase for this mnemonic."},{"link":"/v5/api/utils/hdnode/#Mnemonic","text":"It is 12, 15, 18, 21 or 24 words long and separated by the whitespace specified by the locale."}]},{"title":"HD Wallet -- Types -- mnemonic.path => string","blocks":[{"link":"/v5/api/utils/hdnode/#Mnemonic","text":"The HD path for this mnemonic."}]},{"title":"HD Wallet -- Types -- mnemonic.locale => string","blocks":[{"link":"/v5/api/utils/hdnode/#Mnemonic","text":"The language of the wordlist this mnemonic is using."}]},{"title":"HD Wallet -- HDNode -- vapors.HDNode.fromMnemonic( phrase [ , password [ , wordlist ] ] ) => HDNode","blocks":[{"link":"/v5/api/utils/hdnode/#HDNode-fromMnemonic","text":"Return the HDNode for phrase with the optional password and wordlist."}]},{"title":"HD Wallet -- HDNode -- vapors.HDNode.fromSeed( aBytesLike ) => HDNode","blocks":[{"link":"/v5/api/utils/hdnode/#HDNode-fromSeed","text":"Return the HDNode for the seed aBytesLike."}]},{"title":"HD Wallet -- HDNode -- vapors.HDNode.fromExtendedKey( extendedKey ) => HDNode","blocks":[{"link":"/v5/api/utils/hdnode/#HDNode-fromExtendedKey","text":"Return the HDNode for the extendedKey."},{"link":"/v5/api/utils/hdnode/#HDNode-fromExtendedKey","text":"If extendedKey was neutered, the HDNode will only be able to compute addresses and not private keys."}]},{"title":"HD Wallet -- HDNode -- hdNode.privateKey => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/utils/hdnode/#HDNode--properties","text":"The private key for this HDNode."}]},{"title":"HD Wallet -- HDNode -- hdNode.publicKey => string< DataHexString< 33 > >","blocks":[{"link":"/v5/api/utils/hdnode/#HDNode--properties","text":"The (compresses) public key for this HDNode."}]},{"title":"HD Wallet -- HDNode -- hdNode.fingerprint => string< DataHexString< 4 > >","blocks":[{"link":"/v5/api/utils/hdnode/#HDNode--properties","text":"The fingerprint is meant as an index to quickly match parent and children nodes together, however collisions may occur and software should verify matching nodes."},{"link":"/v5/api/utils/hdnode/#HDNode--properties","text":"Most developers will not need to use this."}]},{"title":"HD Wallet -- HDNode -- hdNode.parentFingerprint => string< DataHexString< 4 > >","blocks":[{"link":"/v5/api/utils/hdnode/#HDNode--properties","text":"The fingerprint of the parent node."},{"link":"/v5/api/utils/hdnode/#HDNode--properties","text":"See fingerprint for more details."},{"link":"/v5/api/utils/hdnode/#HDNode--properties","text":"Most developers will not need to use this."}]},{"title":"HD Wallet -- HDNode -- hdNode.address => string< Address >","blocks":[{"link":"/v5/api/utils/hdnode/#HDNode--properties","text":"The address of this HDNode."}]},{"title":"HD Wallet -- HDNode -- hdNode.mnemonic => Mnemonic","blocks":[{"link":"/v5/api/utils/hdnode/#HDNode--properties","text":"The mnemonic of this HDNode, if known."}]},{"title":"HD Wallet -- HDNode -- hdNode.path => string","blocks":[{"link":"/v5/api/utils/hdnode/#HDNode--properties","text":"The path of this HDNode, if known."},{"link":"/v5/api/utils/hdnode/#HDNode--properties","text":"If the mnemonic is also known, this will match mnemonic.path."}]},{"title":"HD Wallet -- HDNode -- hdNode.chainCode => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/utils/hdnode/#HDNode--properties","text":"The chain code is used as a non-secret private key which is then used with EC-multiply to provide the ability to derive addresses without the private key of child non-hardened nodes."},{"link":"/v5/api/utils/hdnode/#HDNode--properties","text":"Most developers will not need to use this."}]},{"title":"HD Wallet -- HDNode -- hdNode.index => number","blocks":[{"link":"/v5/api/utils/hdnode/#HDNode--properties","text":"The index of this HDNode."},{"link":"/v5/api/utils/hdnode/#HDNode--properties","text":"This will match the last component of the path."},{"link":"/v5/api/utils/hdnode/#HDNode--properties","text":"Most developers will not need to use this."}]},{"title":"HD Wallet -- HDNode -- hdNode.depth => number","blocks":[{"link":"/v5/api/utils/hdnode/#HDNode--properties","text":"The depth of this HDNode."},{"link":"/v5/api/utils/hdnode/#HDNode--properties","text":"This will match the number of components (less one, the m/) of the path."},{"link":"/v5/api/utils/hdnode/#HDNode--properties","text":"Most developers will not need to use this."}]},{"title":"HD Wallet -- HDNode -- hdNode.extendedKey => string","blocks":[{"link":"/v5/api/utils/hdnode/#HDNode--properties","text":"A serialized string representation of this HDNode."},{"link":"/v5/api/utils/hdnode/#HDNode--properties","text":"Not all properties are included in the serialization, such as the mnemonic and path, so serializing and deserializing (using the fromExtendedKey class method) will result in reduced information."}]},{"title":"HD Wallet -- HDNode -- hdNode.neuter( ) => HDNode","blocks":[{"link":"/v5/api/utils/hdnode/#HDNode-neuter","text":"Return a new instance of hdNode with its private key removed but all other properties preserved."},{"link":"/v5/api/utils/hdnode/#HDNode-neuter","text":"This ensures that the key can not leak the private key of itself or any derived children, but may still be used to compute the addresses of itself and any non-hardened children."}]},{"title":"HD Wallet -- HDNode -- hdNode.derivePath( path ) => HDNode","blocks":[{"link":"/v5/api/utils/hdnode/#HDNode-derivePath","text":"Return a new HDNode which is the child of hdNode found by deriving path."}]},{"title":"HD Wallet -- Other Functions -- vapors.utils.mnemonicToSeed( phrase [ , password ] ) => string< DataHexString< 64 > >","blocks":[{"link":"/v5/api/utils/hdnode/#utils-mnemonicToSeed","text":"Convert a mnemonic phrase to a seed, according to BIP-39."}]},{"title":"HD Wallet -- Other Functions -- vapors.utils.mnemonicToEntropy( phrase [ , wordlist ] ) => string< DataHexString >","blocks":[{"link":"/v5/api/utils/hdnode/#utils-mnemonicToEntropy","text":"Convert a mnemonic phrase to its entropy, according to BIP-39."}]},{"title":"HD Wallet -- Other Functions -- vapors.utils.isValidMnemonic( phrase [ , wordlist ] ) => boolean","blocks":[{"link":"/v5/api/utils/hdnode/#utils-isValidMnemonic","text":"Returns true if phrase is a valid mnemonic phrase, by testing the checksum."}]},{"title":"Utilities","blocks":[{"link":"/v5/api/utils/","text":"These utilities are used extensively within the library, but are also quite useful for application developers."}]},{"title":"Logging","blocks":[{"link":"/v5/api/utils/logger/#logging","text":"These are just a few simple logging utilities provided to simplify and standardize the error facilities across the Vapors library."},{"link":"/v5/api/utils/logger/#logging","text":"The Logger library has zero dependencies and is intentionally very light so it can be easily included in each library."},{"link":"/v5/api/utils/logger/#logging","text":"The Censorship functionality relies on one instance of the Vapors library being included."},{"link":"/v5/api/utils/logger/#logging","text":"In large bundled packages or when npm link is used, this may not be the case."},{"link":"/v5/api/utils/logger/#logging","text":"If you require this functionality, ensure that your bundling is configured properly."}]},{"title":"Logging -- Logger -- new vapors.utils.Logger( version )","blocks":[{"link":"/v5/api/utils/logger/#Logger","text":"Create a new logger which will include version in all errors thrown."}]},{"title":"Logging -- Logger -- Logger.globalLogger( ) => Logger","blocks":[{"link":"/v5/api/utils/logger/#Logger","text":"Returns the singleton global logger."}]},{"title":"Logging -- Logger -- logger.debug( ...args ) => void","blocks":[{"link":"/v5/api/utils/logger/","text":"Log debugging information."}]},{"title":"Logging -- Logger -- logger.info( ...args ) => void","blocks":[{"link":"/v5/api/utils/logger/","text":"Log generic information."}]},{"title":"Logging -- Logger -- logger.warn( ...args ) => void","blocks":[{"link":"/v5/api/utils/logger/","text":"Log warnings."}]},{"title":"Logging -- Logger -- Errors","blocks":[{"link":"/v5/api/utils/logger/#Logger","text":"These functions honor the current Censorship and help create a standard error model for detecting and processing errors within Vapors."}]},{"title":"Logging -- Logger -- logger.makeError( message [ , code = UNKNOWN_ERROR [ , params ] ] ) => Error","blocks":[{"link":"/v5/api/utils/logger/","text":"Create an Error object with message and an optional code and additional params set."},{"link":"/v5/api/utils/logger/","text":"This is useful when an error is needed to be rejected instead of thrown."}]},{"title":"Logging -- Logger -- logger.throwError( message [ , code = UNKNOWN_ERROR [ , params ] ] ) => never","blocks":[{"link":"/v5/api/utils/logger/","text":"Throw an Error with message and an optional code and additional params set."}]},{"title":"Logging -- Logger -- logger.throwArgumentError( message , name , value ) => never","blocks":[{"link":"/v5/api/utils/logger/","text":"Throw an INVALID_ARGUMENT Error with name and value."}]},{"title":"Logging -- Logger -- Usage Validation","blocks":[{"link":"/v5/api/utils/logger/#Logger","text":"There can be used to ensure various properties and actions are safe."}]},{"title":"Logging -- Logger -- logger.checkAbstract( target , kind ) => void","blocks":[{"link":"/v5/api/utils/logger/","text":"Checks that target is not kind and performs the same operations as checkNew."},{"link":"/v5/api/utils/logger/","text":"This is useful for ensuring abstract classes are not being instantiated."}]},{"title":"Logging -- Logger -- logger.checkArgumentCount( count , expectedCount [ , message ) => void","blocks":[{"link":"/v5/api/utils/logger/","text":"If count is not equal to expectedCount, throws a MISSING_ARGUMENT or UNEXPECTED_ARGUMENT error."}]},{"title":"Logging -- Logger -- logger.checkNew( target , kind ) => void","blocks":[{"link":"/v5/api/utils/logger/","text":"If target is not a valid this or target value, throw a MISSING_NEW error."},{"link":"/v5/api/utils/logger/","text":"This is useful to ensure callers of a Class are using new."}]},{"title":"Logging -- Logger -- logger.checkNormalize( message ) => void","blocks":[{"link":"/v5/api/utils/logger/","text":"Check that the environment has a correctly functioning String.normalize."},{"link":"/v5/api/utils/logger/","text":"If not, a UNSUPPORTED_OPERATION error is thrown."}]},{"title":"Logging -- Logger -- logger.checkSafeUint53( value [ , message ] ) => void","blocks":[{"link":"/v5/api/utils/logger/","text":"If value is not safe as a JavaScript number, throws a NUMERIC_FAULT error."}]},{"title":"Logging -- Logger -- Logger.setCensorship( censor [ , permanent = false ] ) => void","blocks":[{"link":"/v5/api/utils/logger/#Logger--censorship","text":"Set error censorship, optionally preventing errors from being uncensored."},{"link":"/v5/api/utils/logger/#Logger--censorship","text":"In production applications, this prevents any error from leaking information by masking the message and values of errors."},{"link":"/v5/api/utils/logger/#Logger--censorship","text":"This can impact debugging, making it substantially more difficult."}]},{"title":"Logging -- Logger -- Logger.setLogLevel( logLevel ) => void","blocks":[{"link":"/v5/api/utils/logger/#Logger--censorship","text":"Set the log level, to suppress logging output below a particular log level."}]},{"title":"Logging -- Errors","blocks":[{"link":"/v5/api/utils/logger/#errors","text":"Every error in Vapors has a code value, which is a string that will match one of the following error codes."}]},{"title":"Logging -- Errors -- Logger.errors.NOT_IMPLEMENTED","blocks":[{"link":"/v5/api/utils/logger/","text":"The operation is not implemented."}]},{"title":"Logging -- Errors -- Logger.errors.SERVER_ERROR","blocks":[{"link":"/v5/api/utils/logger/","text":"There was an error communicating with a server."}]},{"title":"Logging -- Errors -- Logger.errors.TIMEOUT","blocks":[{"link":"/v5/api/utils/logger/#errors-Timeout","text":"A timeout occurred."}]},{"title":"Logging -- Errors -- Logger.errors.UNKNOWN_ERROR","blocks":[{"link":"/v5/api/utils/logger/#errors-UnknownError","text":"A generic unknown error."}]},{"title":"Logging -- Errors -- Logger.errors.UNSUPPORTED_OPERATION","blocks":[{"link":"/v5/api/utils/logger/#errors-UnsupportedOperation","text":"The operation is not supported."}]},{"title":"Logging -- Errors -- Logger.errors.BUFFER_OVERRUN","blocks":[{"link":"/v5/api/utils/logger/","text":"The amount of data needed is more than the amount of data required, which would cause the data buffer to read past its end."}]},{"title":"Logging -- Errors -- Logger.errors.NUMERIC_FAULT","blocks":[{"link":"/v5/api/utils/logger/#errors-NumericFault","text":"There was an invalid operation done on numeric values."},{"link":"/v5/api/utils/logger/#errors-NumericFault","text":"Common cases of this occur when there is overflow, arithmetic underflow in fixed numeric types or division by zero."}]},{"title":"Logging -- Errors -- Logger.errors.INVALID_ARGUMENT","blocks":[{"link":"/v5/api/utils/logger/#errors-InvalidArgument","text":"The type or value of an argument is invalid."},{"link":"/v5/api/utils/logger/#errors-InvalidArgument","text":"This will generally also include the name and value of the argument."},{"link":"/v5/api/utils/logger/#errors-InvalidArgument","text":"Any function which accepts sensitive data (such as a private key) will include the string [[REDACTED]] instead of the value passed in."}]},{"title":"Logging -- Errors -- Logger.errors.MISSING_ARGUMENT","blocks":[{"link":"/v5/api/utils/logger/#errors-MissingArgument","text":"An expected parameter was not specified."}]},{"title":"Logging -- Errors -- Logger.errors.MISSING_NEW","blocks":[{"link":"/v5/api/utils/logger/#errors-MissingNew","text":"An object is a Class, but is now being called with new."}]},{"title":"Logging -- Errors -- Logger.errors.UNEXPECTED_ARGUMENT","blocks":[{"link":"/v5/api/utils/logger/#errors-UnexpectedArgument","text":"Too many parameters we passed into a function."}]},{"title":"Logging -- Errors -- Logger.errors.CALL_EXCEPTION","blocks":[{"link":"/v5/api/utils/logger/","text":"An attempt to call a blockchain contract (getter) resulted in a revert or other error."}]},{"title":"Logging -- Errors -- Logger.errors.INSUFFICIENT_FUNDS","blocks":[{"link":"/v5/api/utils/logger/","text":"The account is attempting to make a transaction which costs more than is available."},{"link":"/v5/api/utils/logger/","text":"A sending account must have enough ether to pay for the value, the gas limit (at the gas price) as well as the intrinsic cost of data."},{"link":"/v5/api/utils/logger/","text":"The intrinsic cost of data is 4 gas for each zero byte and 68 gas for each non-zero byte."}]},{"title":"Logging -- Errors -- Logger.errors.NETWORK_ERROR","blocks":[{"link":"/v5/api/utils/logger/","text":"An Vapory network validation error, such as an invalid chain ID."}]},{"title":"Logging -- Errors -- Logger.errors.NONCE_EXPIRED","blocks":[{"link":"/v5/api/utils/logger/","text":"The nonce being specified has already been used in a mined transaction."}]},{"title":"Logging -- Errors -- Logger.errors.REPLACEMENT_UNDERPRICED","blocks":[{"link":"/v5/api/utils/logger/","text":"When replacing a transaction, by using a nonce which has already been sent to the network, but which has not been mined yet the new transaction must specify a higher gas price."},{"link":"/v5/api/utils/logger/","text":"This error occurs when the gas price is insufficient to bribe the transaction pool to prefer the new transaction over the old one."},{"link":"/v5/api/utils/logger/","text":"Generally, the new gas price should be about 50% + 1 wei more, so if a gas price of 10 gwei was used, the replacement should be 15.000000001 gwei."}]},{"title":"Logging -- Errors -- Logger.errors.UNPREDICTABLE_GAS_LIMIT","blocks":[{"link":"/v5/api/utils/logger/","text":"When estimating the required amount of gas for a transaction, a node is queried for its best guess."},{"link":"/v5/api/utils/logger/","text":"If a node is unable (or unwilling) to predict the cost, this error occurs."},{"link":"/v5/api/utils/logger/","text":"The best remedy for this situation is to specify a gas limit in the transaction manually."},{"link":"/v5/api/utils/logger/","text":"This error can also indicate that the transaction is expected to fail regardless, if for example an account with no tokens is attempting to send a token."}]},{"title":"Logging -- Log Levels -- Logger.levels.DEBUG","blocks":[{"link":"/v5/api/utils/logger/#Logger-levels","text":"Log all output, including debugging information."}]},{"title":"Logging -- Log Levels -- Logger.levels.INFO","blocks":[{"link":"/v5/api/utils/logger/#Logger-levels","text":"Only log output for informational, warnings and errors."}]},{"title":"Logging -- Log Levels -- Logger.levels.WARNING","blocks":[{"link":"/v5/api/utils/logger/#Logger-levels","text":"Only log output for warnings and errors."}]},{"title":"Logging -- Log Levels -- Logger.levels.ERROR","blocks":[{"link":"/v5/api/utils/logger/#Logger-levels","text":"Only log output for errors."}]},{"title":"Logging -- Log Levels -- Logger.levels.OFF","blocks":[{"link":"/v5/api/utils/logger/#Logger-levels","text":"Do not output any logs."}]},{"title":"Signing Key -- Log Levels -- new vapors.utils.SigningKey( privateKey )","blocks":[{"link":"/v5/api/utils/signing-key/#SigningKey-constructor","text":"Create a new SigningKey for privateKey."}]},{"title":"Signing Key -- Log Levels -- signingKey.privateKey => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/utils/signing-key/#SigningKey","text":"The private key for this Signing Key."}]},{"title":"Signing Key -- Log Levels -- signingKey.publicKey => string< DataHexString< 65 > >","blocks":[{"link":"/v5/api/utils/signing-key/#SigningKey","text":"The uncompressed public key for this Signing Key."},{"link":"/v5/api/utils/signing-key/#SigningKey","text":"It will always be 65 bytes (130 nibbles) and begins with 0x04."}]},{"title":"Signing Key -- Log Levels -- signingKey.compressedPublicKey => string< DataHexString< 33 > >","blocks":[{"link":"/v5/api/utils/signing-key/#SigningKey","text":"The compressed public key for this Signing Key."},{"link":"/v5/api/utils/signing-key/#SigningKey","text":"It will always be 33 bytes (66 nibbles) and begins with either 0x02 or 0x03."}]},{"title":"Signing Key -- Log Levels -- signingKey.signDigest( digest ) => Signature","blocks":[{"link":"/v5/api/utils/signing-key/#SigningKey","text":"Sign the digest and return the signature."}]},{"title":"Signing Key -- Log Levels -- signingKey.computeSharedSecret( otherKey ) => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/utils/signing-key/#SigningKey","text":"Compute the ECDH shared secret with otherKey."},{"link":"/v5/api/utils/signing-key/#SigningKey","text":"The otherKey may be either a public key or a private key, but generally will be a public key from another party."},{"link":"/v5/api/utils/signing-key/#SigningKey","text":"It is best practice that each party computes the hash of this before using it as a symmetric key."}]},{"title":"Signing Key -- Log Levels -- SigningKey.isSigningKey( anObject ) => boolean","blocks":[{"link":"/v5/api/utils/signing-key/#SigningKey","text":"Returns true if anObject is a SigningKey."}]},{"title":"Signing Key -- Other Functions -- vapors.utils.verifyMessage( message , signature ) => string< Address >","blocks":[{"link":"/v5/api/utils/signing-key/#utils-verifyMessage","text":"Returns the address that signed message producing signature."},{"link":"/v5/api/utils/signing-key/#utils-verifyMessage","text":"The signature may have a non-canonical v (i.e."},{"link":"/v5/api/utils/signing-key/#utils-verifyMessage","text":"does not need to be 27 or 28), in which case it will be normalized to compute the `recoveryParam` which will then be used to compute the address; this allows systems which use the v to encode additional data (such as EIP-155) to be used since the v parameter is still completely non-ambiguous."}]},{"title":"Signing Key -- Other Functions -- vapors.utils.verifyTypedData( domain , types , value , signature ) => string< Address >","blocks":[{"link":"/v5/api/utils/signing-key/#utils-verifyTypedData","text":"Returns the address that signed the EIP-712 value for the domain and types to produce the signature."}]},{"title":"Signing Key -- Other Functions -- vapors.utils.recoverPublicKey( digest , signature ) => string< DataHexString< 65 > >","blocks":[{"link":"/v5/api/utils/signing-key/#utils-recoverPublicKey","text":"Returns the uncompressed public key (i.e."},{"link":"/v5/api/utils/signing-key/#utils-recoverPublicKey","text":"the first byte will be 0x04) of the private key that was used to sign digest which gave the signature."}]},{"title":"Signing Key -- Other Functions -- vapors.utils.computePublicKey( key [ , compressed = false ] ) => string< DataHexString >","blocks":[{"link":"/v5/api/utils/signing-key/#utils-computePublicKey","text":"Computes the public key of key, optionally compressing it."},{"link":"/v5/api/utils/signing-key/#utils-computePublicKey","text":"The key can be any form of public key (compressed or uncompressed) or a private key."}]},{"title":"Strings","blocks":[{"link":"/v5/api/utils/strings/#strings","text":"Tra la la."}]},{"title":"Strings -- Bytes32String","blocks":[{"link":"/v5/api/utils/strings/#Bytes32String","text":"A string in Solidity is length prefixed with its 256-bit (32 byte) length, which means that even short strings require 2 words (64 bytes) of storage."},{"link":"/v5/api/utils/strings/#Bytes32String","text":"In many cases, we deal with short strings, so instead of prefixing the string with its length, we can null-terminate it and fit it in a single word (32 bytes)."},{"link":"/v5/api/utils/strings/#Bytes32String","text":"Since we need only a single byte for the null termination, we can store strings up to 31 bytes long in a word."}]},{"title":"Strings -- Bytes32String -- Note","blocks":[{"link":"/v5/api/utils/strings/#Bytes32String","text":"Strings that are 31 bytes long may contain fewer than 31 characters, since UTF-8 requires multiple bytes to encode international characters."}]},{"title":"Strings -- Bytes32String -- vapors.utils.parseBytes32String( aBytesLike ) => string","blocks":[{"link":"/v5/api/utils/strings/#utils-parseBytes32","text":"Returns the decoded string represented by the Bytes32 encoded data."}]},{"title":"Strings -- Bytes32String -- vapors.utils.formatBytes32String( text ) => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/utils/strings/#utils-formatBytes32","text":"Returns a bytes32 string representation of text."},{"link":"/v5/api/utils/strings/#utils-formatBytes32","text":"If the length of text exceeds 31 bytes, it will throw an error."}]},{"title":"Strings -- UTF-8 Strings -- vapors.utils.toUtf8Bytes( text [ , form = current ] ) => Uint8Array","blocks":[{"link":"/v5/api/utils/strings/#utils-toUtf8Bytes","text":"Returns the UTF-8 bytes of text, optionally normalizing it using the UnicodeNormalizationForm form."}]},{"title":"Strings -- UTF-8 Strings -- vapors.utils.toUtf8CodePoints( text [ , form = current ] ) => Array< number >","blocks":[{"link":"/v5/api/utils/strings/#utils-toUtf8CodePoints","text":"Returns the Array of codepoints of text, optionally normalized using the UnicodeNormalizationForm form."}]},{"title":"Strings -- UTF-8 Strings -- Note","blocks":[{"link":"/v5/api/utils/strings/#strings-utf8","text":"This function correctly splits each user-perceived character into its codepoint, accounting for surrogate pairs."},{"link":"/v5/api/utils/strings/#strings-utf8","text":"This should not be confused with string.split(\"\"), which destroys surrogate pairs, splitting between each UTF-16 codeunit instead."}]},{"title":"Strings -- UTF-8 Strings -- vapors.utils.toUtf8String( aBytesLike [ , onError = error ] ) => string","blocks":[{"link":"/v5/api/utils/strings/#utils-toUtf8String","text":"Returns the string represented by the UTF-8 bytes of aBytesLike."},{"link":"/v5/api/utils/strings/#utils-toUtf8String","text":"The onError is a Custom UTF-8 Error function and if not specified it defaults to the error function, which throws an error on any UTF-8 error."}]},{"title":"Strings -- UnicodeNormalizationForm","blocks":[{"link":"/v5/api/utils/strings/#strings--unicode-normalization-form","text":"There are several commonly used forms when normalizing UTF-8 data, which allow strings to be compared or hashed in a stable way."}]},{"title":"Strings -- UnicodeNormalizationForm -- vapors.utils.UnicodeNormalizationForm.current","blocks":[{"link":"/v5/api/utils/strings/#strings--unicode-normalization-form","text":"Maintain the current normalization form."}]},{"title":"Strings -- UnicodeNormalizationForm -- vapors.utils.UnicodeNormalizationForm.NFC","blocks":[{"link":"/v5/api/utils/strings/#strings--unicode-normalization-form","text":"The Composed Normalization Form."},{"link":"/v5/api/utils/strings/#strings--unicode-normalization-form","text":"This form uses single codepoints which represent the fully composed character."},{"link":"/v5/api/utils/strings/#strings--unicode-normalization-form","text":"For example, the &eacute; is a single codepoint, 0x00e9."}]},{"title":"Strings -- UnicodeNormalizationForm -- vapors.utils.UnicodeNormalizationForm.NFD","blocks":[{"link":"/v5/api/utils/strings/#strings--unicode-normalization-form","text":"The Decomposed Normalization Form."},{"link":"/v5/api/utils/strings/#strings--unicode-normalization-form","text":"This form uses multiple codepoints (when necessary) to compose a character."},{"link":"/v5/api/utils/strings/#strings--unicode-normalization-form","text":"For example, the &eacute; is made up of two codepoints, \"0x0065\" (which is the letter \"e\") and \"0x0301\" which is a special diacritic UTF-8 codepoint which indicates the previous character should have an acute accent."}]},{"title":"Strings -- UnicodeNormalizationForm -- vapors.utils.UnicodeNormalizationForm.NFKC","blocks":[{"link":"/v5/api/utils/strings/#strings--unicode-normalization-form","text":"The Composed Normalization Form with Canonical Equivalence."},{"link":"/v5/api/utils/strings/#strings--unicode-normalization-form","text":"The Canonical representation folds characters which have the same syntactic representation but different semantic meaning."},{"link":"/v5/api/utils/strings/#strings--unicode-normalization-form","text":"For example, the Roman Numeral I, which has a UTF-8 codepoint \"0x2160\", is folded into the capital letter I, \"0x0049\"."}]},{"title":"Strings -- UnicodeNormalizationForm -- vapors.utils.UnicodeNormalizationForm.NFKD","blocks":[{"link":"/v5/api/utils/strings/#strings--unicode-normalization-form","text":"The Decomposed Normalization Form with Canonical Equivalence."},{"link":"/v5/api/utils/strings/#strings--unicode-normalization-form","text":"See NFKC for more an example."}]},{"title":"Strings -- UnicodeNormalizationForm -- Note","blocks":[{"link":"/v5/api/utils/strings/#strings--unicode-normalization-form","text":"Only certain specified characters are folded in Canonical Equivalence, and thus it should not be considered a method to achieve any level of security from homoglyph attacks."}]},{"title":"Strings -- Custom UTF-8 Error Handling","blocks":[{"link":"/v5/api/utils/strings/#strings--error-handling","text":"When converting a string to its codepoints, there is the possibility of invalid byte sequences."},{"link":"/v5/api/utils/strings/#strings--error-handling","text":"Since certain situations may need specific ways to handle UTF-8 errors, a custom error handling function can be used, which has the signature:."}]},{"title":"Strings -- Custom UTF-8 Error Handling -- errorFunction( reason , offset , bytes , output [ , badCodepoint ] ) => number","blocks":[{"link":"/v5/api/utils/strings/#strings--error-handling","text":"The reason is one of the UTF-8 Error Reasons, offset is the index into bytes where the error was first encountered, output is the list of codepoints already processed (and may be modified) and in certain Error Reasons, the badCodepoint indicates the currently computed codepoint, but which would be rejected because its value is invalid."},{"link":"/v5/api/utils/strings/#strings--error-handling","text":"This function should return the number of bytes to skip past keeping in mind the value at offset will already be consumed."}]},{"title":"Strings -- Custom UTF-8 Error Handling -- vapors.utils.Utf8ErrorReason.BAD_PREFIX","blocks":[{"link":"/v5/api/utils/strings/#strings--error-reasons","text":"A byte was encountered which is invalid to begin a UTF-8 byte sequence with."}]},{"title":"Strings -- Custom UTF-8 Error Handling -- vapors.utils.Utf8ErrorReason.MISSING_CONTINUE","blocks":[{"link":"/v5/api/utils/strings/#strings--error-reasons","text":"A UTF-8 sequence was begun, but did not have enough continuation bytes for the sequence."},{"link":"/v5/api/utils/strings/#strings--error-reasons","text":"For this error the ofset is the index at which a continuation byte was expected."}]},{"title":"Strings -- Custom UTF-8 Error Handling -- vapors.utils.Utf8ErrorReason.OUT_OF_RANGE","blocks":[{"link":"/v5/api/utils/strings/#strings--error-reasons","text":"The computed codepoint is outside the range for valid UTF-8 codepoints (i.e."},{"link":"/v5/api/utils/strings/#strings--error-reasons","text":"the codepoint is greater than 0x10ffff)."},{"link":"/v5/api/utils/strings/#strings--error-reasons","text":"This reason will pass the computed badCountpoint into the custom error function."}]},{"title":"Strings -- Custom UTF-8 Error Handling -- vapors.utils.Utf8ErrorReason.OVERLONG","blocks":[{"link":"/v5/api/utils/strings/#strings--error-reasons","text":"Due to the way UTF-8 allows variable length byte sequences to be used, it is possible to have multiple representations of the same character, which means overlong sequences allow for a non-distinguished string to be formed, which can impact security as multiple strings that are otherwise equal can have different hashes."},{"link":"/v5/api/utils/strings/#strings--error-reasons","text":"Generally, overlong sequences are an attempt to circumvent some part of security, but in rare cases may be produced by lazy libraries or used to encode the null terminating character in a way that is safe to include in a char*."},{"link":"/v5/api/utils/strings/#strings--error-reasons","text":"This reason will pass the computed badCountpoint into the custom error function, which is actually a valid codepoint, just one that was arrived at through unsafe methods."}]},{"title":"Strings -- Custom UTF-8 Error Handling -- vapors.utils.Utf8ErrorReason.OVERRUN","blocks":[{"link":"/v5/api/utils/strings/#strings--error-reasons","text":"The string does not have enough characters remaining for the length of this sequence."}]},{"title":"Strings -- Custom UTF-8 Error Handling -- vapors.utils.Utf8ErrorReason.UNEXPECTED_CONTINUE","blocks":[{"link":"/v5/api/utils/strings/#strings--error-reasons","text":"This error is similar to BAD_PREFIX, since a continuation byte cannot begin a valid sequence, but many may wish to process this differently."},{"link":"/v5/api/utils/strings/#strings--error-reasons","text":"However, most developers would want to trap this and perform the same operation as a BAD_PREFIX."}]},{"title":"Strings -- Custom UTF-8 Error Handling -- vapors.utils.Utf8ErrorReason.UTF16_SURROGATE","blocks":[{"link":"/v5/api/utils/strings/#strings--error-reasons","text":"The computed codepoint represents a value reserved for UTF-16 surrogate pairs."},{"link":"/v5/api/utils/strings/#strings--error-reasons","text":"This reason will pass the computed surrogate half badCountpoint into the custom error function."}]},{"title":"Strings -- Custom UTF-8 Error Handling -- Provided UTF-8 Error Handling Functions","blocks":[{"link":"/v5/api/utils/strings/#strings--error-handling","text":"There are already several functions available for the most common situations."}]},{"title":"Strings -- Custom UTF-8 Error Handling -- vapors.utils.Utf8ErrorFuncs.error","blocks":[{"link":"/v5/api/utils/strings/#strings--Utf8Error","text":"The will throw an error on any error with a UTF-8 sequence, including invalid prefix bytes, overlong sequences, UTF-16 surrogate pairs."}]},{"title":"Strings -- Custom UTF-8 Error Handling -- vapors.utils.Utf8ErrorFuncs.ignore","blocks":[{"link":"/v5/api/utils/strings/#strings--Utf8Ignore","text":"This will drop all invalid sequences (by consuming invalid prefix bytes and any following continuation bytes) from the final string as well as permit overlong sequences to be converted to their equivalent string."}]},{"title":"Strings -- Custom UTF-8 Error Handling -- vapors.utils.Utf8ErrorFuncs.replace","blocks":[{"link":"/v5/api/utils/strings/#strings--Utf8Replace","text":"This will replace all invalid sequences (by consuming invalid prefix bytes and any following continuation bytes) with the UTF-8 Replacement Character, (i.e."},{"link":"/v5/api/utils/strings/#strings--Utf8Replace","text":"U+FFFD)."}]},{"title":"Transactions -- Types -- UnsignedTransaction","blocks":[{"link":"/v5/api/utils/transactions/#UnsignedTransaction","text":"An unsigned transaction represents a transaction that has not been signed and its values are flexible as long as they are not ambiguous."}]},{"title":"Transactions -- Types -- unsignedTransaction.to => string< Address >","blocks":[{"link":"/v5/api/utils/transactions/#UnsignedTransaction","text":"The address this transaction is to."}]},{"title":"Transactions -- Types -- unsignedTransaction.nonce => number","blocks":[{"link":"/v5/api/utils/transactions/#UnsignedTransaction","text":"The nonce of this transaction."}]},{"title":"Transactions -- Types -- unsignedTransaction.gasLimit => BigNumberish","blocks":[{"link":"/v5/api/utils/transactions/#UnsignedTransaction","text":"The gas limit for this transaction."}]},{"title":"Transactions -- Types -- unsignedTransaction.gasPrice => BigNumberish","blocks":[{"link":"/v5/api/utils/transactions/#UnsignedTransaction","text":"The gas price for this transaction."}]},{"title":"Transactions -- Types -- unsignedTransaction.data => BytesLike","blocks":[{"link":"/v5/api/utils/transactions/#UnsignedTransaction","text":"The data for this transaction."}]},{"title":"Transactions -- Types -- unsignedTransaction.value => BigNumberish","blocks":[{"link":"/v5/api/utils/transactions/#UnsignedTransaction","text":"The value (in wei) for this transaction."}]},{"title":"Transactions -- Types -- unsignedTransaction.chainId => number","blocks":[{"link":"/v5/api/utils/transactions/#UnsignedTransaction","text":"The chain ID for this transaction."},{"link":"/v5/api/utils/transactions/#UnsignedTransaction","text":"If the chain ID is 0 or null, then EIP-155 is disabled and legacy signing is used, unless overridden in a signature."}]},{"title":"Transactions -- Types -- Transaction","blocks":[{"link":"/v5/api/utils/transactions/#Transaction","text":"A generic object to represent a transaction."}]},{"title":"Transactions -- Types -- transaction.hash => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/utils/transactions/#Transaction","text":"The transaction hash, which can be used as an identifier for transaction."},{"link":"/v5/api/utils/transactions/#Transaction","text":"This is the keccak256 of the serialized RLP encoded representation of transaction."}]},{"title":"Transactions -- Types -- unsignedTransaction.to => string< Address >","blocks":[{"link":"/v5/api/utils/transactions/#Transaction","text":"The address transaction is to."}]},{"title":"Transactions -- Types -- transaction.from => string< Address >","blocks":[{"link":"/v5/api/utils/transactions/#Transaction","text":"The address transaction is from."}]},{"title":"Transactions -- Types -- transaction.nonce => number","blocks":[{"link":"/v5/api/utils/transactions/#Transaction","text":"The nonce for transaction."},{"link":"/v5/api/utils/transactions/#Transaction","text":"Each transaction sent to the network from an account includes this, which ensures the order and non-replayability of a transaction."},{"link":"/v5/api/utils/transactions/#Transaction","text":"This must be equal to the current number of transactions ever sent to the network by the from address."}]},{"title":"Transactions -- Types -- transaction.gasLimit => BigNumber","blocks":[{"link":"/v5/api/utils/transactions/#Transaction","text":"The gas limit for transaction."},{"link":"/v5/api/utils/transactions/#Transaction","text":"An account must have enough ether to cover the gas (at the specified gasPrice)."},{"link":"/v5/api/utils/transactions/#Transaction","text":"Any unused gas is refunded at the end of the transaction, and if there is insufficient gas to complete execution, the effects of the transaction are reverted, but the gas is fully consumed and an out-of-gas error occurs."}]},{"title":"Transactions -- Types -- transaction.gasPrice => BigNumber","blocks":[{"link":"/v5/api/utils/transactions/#Transaction","text":"The price (in wei) per unit of gas for transaction."}]},{"title":"Transactions -- Types -- transaction.data => BytesLike","blocks":[{"link":"/v5/api/utils/transactions/#Transaction","text":"The data for transaction."},{"link":"/v5/api/utils/transactions/#Transaction","text":"In a contract this is the call data."}]},{"title":"Transactions -- Types -- transaction.value => BigNumber","blocks":[{"link":"/v5/api/utils/transactions/#Transaction","text":"The value (in wei) for transaction."}]},{"title":"Transactions -- Types -- transaction.chainId => number","blocks":[{"link":"/v5/api/utils/transactions/#Transaction","text":"The chain ID for transaction."},{"link":"/v5/api/utils/transactions/#Transaction","text":"This is used as part of EIP-155 to prevent replay attacks on different networks."},{"link":"/v5/api/utils/transactions/#Transaction","text":"For example, if a transaction was made on ropsten with an account also used on homestead, it would be possible for a transaction signed on ropsten to be executed on homestead, which is likely unintended."},{"link":"/v5/api/utils/transactions/#Transaction","text":"There are situations where replay may be desired, however these are very rare and it is almost always recommended to specify the chain ID."}]},{"title":"Transactions -- Types -- transaction.r => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/utils/transactions/#Transaction","text":"The r portion of the elliptic curve signatures for transaction."},{"link":"/v5/api/utils/transactions/#Transaction","text":"This is more accurately, the x coordinate of the point r (from which the y can be computed, along with v)."}]},{"title":"Transactions -- Types -- transaction.s => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/utils/transactions/#Transaction","text":"The s portion of the elliptic curve signatures for transaction."}]},{"title":"Transactions -- Types -- transaction.v => number","blocks":[{"link":"/v5/api/utils/transactions/#Transaction","text":"The v portion of the elliptic curve signatures for transaction."},{"link":"/v5/api/utils/transactions/#Transaction","text":"This is used to refine which of the two possible points a given x-coordinate can have, and in EIP-155 is additionally used to encode the chain ID into the serialized transaction."}]},{"title":"Transactions -- Functions -- vapors.utils.parseTransaction( aBytesLike ) => Transaction","blocks":[{"link":"/v5/api/utils/transactions/#utils-parseTransaction","text":"Parses the transaction properties from a serialized transaction."}]},{"title":"Transactions -- Functions -- vapors.utils.serializeTransaction( tx [ , signature ] ) => string< DataHexString >","blocks":[{"link":"/v5/api/utils/transactions/#utils-serializeTransaction","text":"Computes the serialized transaction, optionally serialized with the a signature."},{"link":"/v5/api/utils/transactions/#utils-serializeTransaction","text":"If signature is not present, the unsigned serialized transaction is returned, which can be used to compute the hash necessary to sign."},{"link":"/v5/api/utils/transactions/#utils-serializeTransaction","text":"This function uses EIP-155 if a chainId is provided, otherwise legacy serialization is used."},{"link":"/v5/api/utils/transactions/#utils-serializeTransaction","text":"It is highly recommended to always specify a chainId."},{"link":"/v5/api/utils/transactions/#utils-serializeTransaction","text":"If signature includes a chain ID (explicitly or implicitly by using an EIP-155 v or _vs) it will be used to compute the chain ID."},{"link":"/v5/api/utils/transactions/#utils-serializeTransaction","text":"If there is a mismatch between the chain ID of transaction and signature an error is thrown."}]},{"title":"Web Utilities -- Functions -- vapors.utils.fetchJson( urlOrConnectionInfo [ , json [ , processFunc ] ] ) => Promise< any >","blocks":[{"link":"/v5/api/utils/web/#utils-fetchJson","text":"Fetch and parse the JSON content from urlOrConnectionInfo, with the optional body json and optionally processing the result with processFun before returning it."}]},{"title":"Web Utilities -- Functions -- vapors.utils.poll( pollFunc [ , options ] ) => Promise< any >","blocks":[{"link":"/v5/api/utils/web/#utils-poll","text":"Repeatedly call pollFunc using the PollOptions until it returns a value other than undefined."}]},{"title":"Web Utilities -- Functions -- connection.url => string","blocks":[{"link":"/v5/api/utils/web/#ConnectionInfo","text":"The URL to connect to."}]},{"title":"Web Utilities -- Functions -- connection.user => string","blocks":[{"link":"/v5/api/utils/web/#ConnectionInfo","text":"The username to use for Basic Authentication."},{"link":"/v5/api/utils/web/#ConnectionInfo","text":"The default is null (i.e."},{"link":"/v5/api/utils/web/#ConnectionInfo","text":"do not use basic authentication)."}]},{"title":"Web Utilities -- Functions -- connection.password => string","blocks":[{"link":"/v5/api/utils/web/#ConnectionInfo","text":"The password to use for Basic Authentication."},{"link":"/v5/api/utils/web/#ConnectionInfo","text":"The default is null (i.e."},{"link":"/v5/api/utils/web/#ConnectionInfo","text":"do not use basic authentication)."}]},{"title":"Web Utilities -- Functions -- connection.allowInsecureAuthentication => boolean","blocks":[{"link":"/v5/api/utils/web/#ConnectionInfo","text":"Allow Basic Authentication over non-secure HTTP."},{"link":"/v5/api/utils/web/#ConnectionInfo","text":"The default is false."}]},{"title":"Web Utilities -- Functions -- connection.timeout => number","blocks":[{"link":"/v5/api/utils/web/#ConnectionInfo","text":"How long to wait before rejecting with a timeout error."}]},{"title":"Web Utilities -- Functions -- connection.headers => {[key:string]:string}","blocks":[{"link":"/v5/api/utils/web/#ConnectionInfo","text":"Additional headers to include in the connection."}]},{"title":"Web Utilities -- Functions -- options.timeout => number","blocks":[{"link":"/v5/api/utils/web/#PollOptions","text":"The amount of time allowed to elapse before triggering a timeout error."}]},{"title":"Web Utilities -- Functions -- options.floor => number","blocks":[{"link":"/v5/api/utils/web/#PollOptions","text":"The minimum time limit to allow for Exponential Backoff."},{"link":"/v5/api/utils/web/#PollOptions","text":"The default is 0s."}]},{"title":"Web Utilities -- Functions -- options.ceiling => number","blocks":[{"link":"/v5/api/utils/web/#PollOptions","text":"The maximum time limit to allow for Exponential Backoff."},{"link":"/v5/api/utils/web/#PollOptions","text":"The default is 10s."}]},{"title":"Web Utilities -- Functions -- options.interval => number","blocks":[{"link":"/v5/api/utils/web/#PollOptions","text":"The interval used during Exponential Backoff calculation."},{"link":"/v5/api/utils/web/#PollOptions","text":"The default is 250ms."}]},{"title":"Web Utilities -- Functions -- options.retryLimit => number","blocks":[{"link":"/v5/api/utils/web/#PollOptions","text":"The number of times to retry in the event of an error or undefined is returned."}]},{"title":"Web Utilities -- Functions -- options.onceBlock => Provider","blocks":[{"link":"/v5/api/utils/web/#PollOptions","text":"If this is specified, the polling will wait on new blocks from provider before attempting the pollFunc again."}]},{"title":"Web Utilities -- Functions -- options.oncePoll => Provider","blocks":[{"link":"/v5/api/utils/web/#PollOptions","text":"If this is specified, the polling will occur on each poll cycle of provider before attempting the pollFunc again."}]},{"title":"Wordlists -- Wordlist -- wordlist.locale => string","blocks":[{"link":"/v5/api/utils/wordlists/#Wordlist","text":"The locale for this wordlist."}]},{"title":"Wordlists -- Wordlist -- wordlist.getWord( index ) => string","blocks":[{"link":"/v5/api/utils/wordlists/#Wordlist","text":"Returns the word at index."}]},{"title":"Wordlists -- Wordlist -- wordlist.getWordIndex( word ) => number","blocks":[{"link":"/v5/api/utils/wordlists/#Wordlist","text":"Returns the index of word within the wordlist."}]},{"title":"Wordlists -- Wordlist -- wordlist.split( mnemonic ) => Array< string >","blocks":[{"link":"/v5/api/utils/wordlists/#Wordlist","text":"Returns the mnemonic split into each individual word, according to a locale's valid whitespace character set."}]},{"title":"Wordlists -- Wordlist -- wordlist.join( words ) => string","blocks":[{"link":"/v5/api/utils/wordlists/#Wordlist","text":"Returns the mnemonic by joining words together using the whitespace that is standard for the locale."}]},{"title":"Wordlists -- Wordlist -- Wordlist.check( wordlists ) => string< DataHexString< 32 > >","blocks":[{"link":"/v5/api/utils/wordlists/#Wordlist","text":"Checks that all words map both directions correctly and return the hash of the lists."},{"link":"/v5/api/utils/wordlists/#Wordlist","text":"Sub-classes should use this to validate the wordlist is correct against the official wordlist hash."}]},{"title":"Wordlists -- Wordlist -- Wordlist.register( wordlist [ , name ] ) => void","blocks":[{"link":"/v5/api/utils/wordlists/#Wordlist","text":"Register a wordlist with the list of wordlists, optionally overriding the registered name."}]},{"title":"Wordlists -- Languages","blocks":[{"link":"/v5/api/utils/wordlists/#wordlists--languages","text":"The official wordlists available at `vapors.wordlists`."},{"link":"/v5/api/utils/wordlists/#wordlists--languages","text":"In the browser, only the english language is available by default; to include the others (which increases the size of the library), see the dist files in the `vapors` package."}]},{"title":"Wordlists -- Languages -- vapors.wordlists.cz => Wordlist","blocks":[{"link":"/v5/api/utils/wordlists/#wordlists--languages","text":"The Czech Wordlist."}]},{"title":"Wordlists -- Languages -- vapors.wordlists.en => Wordlist","blocks":[{"link":"/v5/api/utils/wordlists/#wordlists--languages","text":"The English Wordlist."}]},{"title":"Wordlists -- Languages -- vapors.wordlists.es => Wordlist","blocks":[{"link":"/v5/api/utils/wordlists/#wordlists--languages","text":"The Spanish Wordlist."}]},{"title":"Wordlists -- Languages -- vapors.wordlists.fr => Wordlist","blocks":[{"link":"/v5/api/utils/wordlists/#wordlists--languages","text":"The French Wordlist."}]},{"title":"Wordlists -- Languages -- vapors.wordlists.it => Wordlist","blocks":[{"link":"/v5/api/utils/wordlists/#wordlists--languages","text":"The Italian Wordlist."}]},{"title":"Wordlists -- Languages -- vapors.wordlists.ja => Wordlist","blocks":[{"link":"/v5/api/utils/wordlists/#wordlists--languages","text":"The Japanese Wordlist."}]},{"title":"Wordlists -- Languages -- vapors.wordlists.ko => Wordlist","blocks":[{"link":"/v5/api/utils/wordlists/#wordlists--languages","text":"The Korean Wordlist."}]},{"title":"Wordlists -- Languages -- vapors.wordlists.zh_cn => Wordlist","blocks":[{"link":"/v5/api/utils/wordlists/#wordlists--languages","text":"The Simplified Chinese Wordlist."}]},{"title":"Wordlists -- Languages -- vapors.wordlists.zh_tw => Wordlist","blocks":[{"link":"/v5/api/utils/wordlists/#wordlists--languages","text":"The Traditional Chinese Wordlist."}]},{"title":"Provider API Keys","blocks":[{"link":"/v5/api-keys/#api-keys","text":"( TL; DR &ndash; sign up for your own API keys with the links below to improve your application performance )."},{"link":"/v5/api-keys/#api-keys","text":"When using a Provider backed by an API service (such as Alchemy, Vaporscan or INFURA), the service requires an API key, which allows each service to track individual projects and their usage and permissions."},{"link":"/v5/api-keys/#api-keys","text":"The vapors library offers default API keys for each service, so that each Provider works out-of-the-box."},{"link":"/v5/api-keys/#api-keys","text":"These API keys are provided as a community resource by the backend services for low-traffic projects and for early prototyping."},{"link":"/v5/api-keys/#api-keys","text":"Since these API keys are shared by all users (that have not acquired their own API key), they are aggressively throttled which means retries occur more frequently and the responses are slower."},{"link":"/v5/api-keys/#api-keys","text":"It is highly recommended that you sign up for a free API key from each service for their free tier, which (depending on the service) includes many advantages:."},{"link":"/v5/api-keys/#api-keys","text":"a much higher request rate and concurrent request limit faster responses with fewer retries and timeouts useful metric tracking for performance tuning and to analyze your customer behaviour more advanced APIs, such as archive data or advanced log queries."}]},{"title":"Provider API Keys -- Vaporscan","blocks":[{"link":"/v5/api-keys/#api-keys--vaporscan","text":"Vaporscan is an Vapory block explorer, which is possibly the most useful developer tool for building and debugging Vapory applications."},{"link":"/v5/api-keys/#api-keys--vaporscan","text":"They offer an extensive collection of API endpoints which provide all the operations required to interact with the Vapory Blockchain."},{"link":"/v5/api-keys/#api-keys--vaporscan","text":"Sign up for a free API key on Vaporscan."},{"link":"/v5/api-keys/#api-keys--vaporscan","text":"Benefits:."},{"link":"/v5/api-keys/#api-keys--vaporscan","text":"higher rate limit (since you are not using the shared rate limit) customer usage metrics."}]},{"title":"Provider API Keys -- INFURA","blocks":[{"link":"/v5/api-keys/#api-keys--infura","text":"The INFURA service has been around for quite some time and is very robust and reliable and highly recommended."},{"link":"/v5/api-keys/#api-keys--infura","text":"They offer a standard JSON-RPC interface and a WebSocket interface, which makes interaction with standard tools versatile, simple and straight forward."},{"link":"/v5/api-keys/#api-keys--infura","text":"Sign up for a free Project ID on INFURA."},{"link":"/v5/api-keys/#api-keys--infura","text":"Benefits:."},{"link":"/v5/api-keys/#api-keys--infura","text":"higher rate limit customer usage metrics access to archive data (requires paid upgrade)."}]},{"title":"Provider API Keys -- Alchemy","blocks":[{"link":"/v5/api-keys/#api-keys--alchemy","text":"The Alchemy service has been around a few years and is also very robust and reliable."},{"link":"/v5/api-keys/#api-keys--alchemy","text":"They offer a standard JSON-RPC interface and a WebSocket interface, as well as a collection of advanced APIs for interacting with tokens and to assist with debugging."},{"link":"/v5/api-keys/#api-keys--alchemy","text":"Sign up for a free API key on Alchemy."},{"link":"/v5/api-keys/#api-keys--alchemy","text":"Benefits:."},{"link":"/v5/api-keys/#api-keys--alchemy","text":"higher rate limit customer usage metrics access to advanced token balance and metadata APIs access to advanced debugging trace and revert reason APIs."}]},{"title":"Provider API Keys -- Pocket Gateway","blocks":[{"link":"/v5/api-keys/#api-keys--pocket-gateway","text":"Sign up for a free API key on Pocket."},{"link":"/v5/api-keys/#api-keys--pocket-gateway","text":"Benefits:."},{"link":"/v5/api-keys/#api-keys--pocket-gateway","text":"customer usage metrics decentralized Access to Blockchain Infrastructure Stake as opposed to paying a monthly fee Highly redundant global set of nodes incentivized by cryptoeconomic incentives."}]},{"title":"Provider API Keys -- Creating a Default Provider","blocks":[{"link":"/v5/api-keys/#api-keys--getDefaultProvider","text":"The default provider connects to multiple backends and verifies their results internally, making it simple to have a high level of trust in third-party services."},{"link":"/v5/api-keys/#api-keys--getDefaultProvider","text":"A second optional parameter allows API keys to be specified to each Provider created internally and any API key omitted will fallback onto using the default API key for that service."},{"link":"/v5/api-keys/#api-keys--getDefaultProvider","text":"It is highly recommended that you provide an API for each service, to maximize your applications performance."}]},{"title":"Assembler","blocks":[{"link":"/v5/cli/asm/#cli-asm","text":"The assembler Command-Line utility allows you to assemble the Vapors ASM Dialect into deployable EVM bytecode and disassemble EVM bytecode into human-readable mnemonics."}]},{"title":"Assembler -- Example Input Files -- Note: Bytecode File Syntax","blocks":[{"link":"/v5/cli/asm/","text":"A bin file may be made up of multiple blocks of bytecode, each may optionally begin with a 0x prefix, all of which must be of even length (since bytes are required, with 2 nibbles per byte)."},{"link":"/v5/cli/asm/","text":"All whitespace is ignored."}]},{"title":"Assembler -- Assembler Examples","blocks":[{"link":"/v5/cli/asm/#cli-asm","text":"The assembler converts an Vapors ASM Dialect into bytecode by running multiple passes of an assemble stage, each pass more closely approximating the final result."},{"link":"/v5/cli/asm/#cli-asm","text":"This allows small portions of the bytecode to be massaged and tweaked until the bytecode stabilizes."},{"link":"/v5/cli/asm/#cli-asm","text":"This allows for more compact jump destinations and for code to include more advanced meta-programming techniques."}]},{"title":"Assembler -- Assembler Examples -- --define KEY=VALUE or --define FLAG","blocks":[{"link":"/v5/cli/asm/","text":"This allows key/value pairs (where the value is a string) and flags (which the value is true) to be passed along to the assembler, which can be accessed in Scripting Blocks, such as {{= defined.someKey }}."}]},{"title":"Assembler -- Assembler Examples -- --ignore-warnings","blocks":[{"link":"/v5/cli/asm/","text":"By default any warning will be treated like an error."},{"link":"/v5/cli/asm/","text":"This enabled by-passing warnings."}]},{"title":"Assembler -- Assembler Examples -- --pic","blocks":[{"link":"/v5/cli/asm/","text":"When a program is assembled, the labels are usually given as an absolute byte position, which can be jumped to for loops and control flow."},{"link":"/v5/cli/asm/","text":"This means that a program must be installed at a specific location."},{"link":"/v5/cli/asm/","text":"Byt specifying the Position Independent Code flag, code will be generated in a way such that all offsets are relative, allowing the program to be moved without any impact to its logic."},{"link":"/v5/cli/asm/","text":"This does incur an additional gas cost of 8 gas per offset access though."}]},{"title":"Assembler -- Assembler Examples -- --target LABEL","blocks":[{"link":"/v5/cli/asm/","text":"All programs have a root scope named _ which is by default assembled."},{"link":"/v5/cli/asm/","text":"This option allows another labelled target (either a Scopes or a Data Segment to be assembled instead."},{"link":"/v5/cli/asm/","text":"The entire program is still assembled per usual, so this only impacts which part of the program is output."}]},{"title":"Assembler -- Disassembler Examples","blocks":[{"link":"/v5/cli/asm/#cli-asm","text":"A disassembled program shows offsets and mnemonics for the given bytecode."},{"link":"/v5/cli/asm/#cli-asm","text":"This format may change in the future to be more human-readable."}]},{"title":"Vapory Naming Service -- Examples","blocks":[{"link":"/v5/cli/ens/","text":"TODO examples."}]},{"title":"Sandbox Utility","blocks":[{"link":"/v5/cli/vapors/","text":"The sandbox utility provides a simple way to use the most common vapors utilities required during learning, debugging and managing interactions with the Vapory network."},{"link":"/v5/cli/vapors/","text":"If no command is given, it will enter a REPL interface with many of the vapors utilities already exposed."}]},{"title":"Sandbox Utility -- Examples -- Scripting","blocks":[{"link":"/v5/cli/vapors/#cliex-scripting","text":"The eval command can be used to execute simple one-line scripts from the command line to be passed into other commands or stored in script environment variables."}]},{"title":"Sandbox Utility -- Examples -- Using Mnemonics (with a password)","blocks":[{"link":"/v5/cli/vapors/#cliex-mnemonicpassword","text":"All mnemonic phrases have a password, but the default is to use the empty string (i.e."},{"link":"/v5/cli/vapors/#cliex-mnemonicpassword","text":"\"\") as the password."},{"link":"/v5/cli/vapors/#cliex-mnemonicpassword","text":"If you have a password on your mnemonic, the --mnemonic-password will prompt for the password to use to decrypt the account."}]},{"title":"Sandbox Utility -- Examples -- Using Mnemonics (with experimental memory-hard passwords)","blocks":[{"link":"/v5/cli/vapors/#cliex-mnemonicpassword-xxx","text":"The --xxx-mnemonic-password is similar to the --mnemonic-password options, which uses a password to decrypt the account for a mnemonic, however it passes the password through the scrypt password-based key derivation function first, which is intentionally slow and makes a brute-force attack far more difficult."}]},{"title":"Sandbox Utility -- Examples -- Note","blocks":[{"link":"/v5/cli/vapors/#cliex-mnemonicpassword-xxx","text":"This is still an experimental feature (hence the xxx)."}]},{"title":"Making Your Own","blocks":[{"link":"/v5/cli/plugin/#cli-diy","text":"The cli library is meant to make it easy to create command line utilities of your own."}]},{"title":"Making Your Own -- CLI","blocks":[{"link":"/v5/cli/plugin/#cli-cli","text":"A CLI handles parsing all the command-line flags, options and arguments and instantiates a Plugin to process the command."},{"link":"/v5/cli/plugin/#cli-cli","text":"A CLI may support multiple Plugin's in which case the first argument is used to determine which to run (or if no arguments, the default plugin will be selected) or may be designed to be standalone, in which case exactly one Plugin will be used and no command argument is allowed."}]},{"title":"Making Your Own -- CLI -- addPlugin( command , pluginClass ) => void","blocks":[{"link":"/v5/cli/plugin/#cli-addplugin","text":"Add a plugin class for the command."},{"link":"/v5/cli/plugin/#cli-addplugin","text":"After all options and flags have been consumed, the first argument will be consumed and the associated plugin class will be instantiated and run."}]},{"title":"Making Your Own -- CLI -- setPlugin( pluginClass ) => void","blocks":[{"link":"/v5/cli/plugin/#cli-setplugin","text":"Set a dedicated Plugin class which will handle all input."},{"link":"/v5/cli/plugin/#cli-setplugin","text":"This may not be used in conjunction with addPlugin and will not automatically accept a command from the arguments."}]},{"title":"Making Your Own -- CLI -- showUsage( [ message = \"\" [ , status = 0 ] ] ) => never","blocks":[{"link":"/v5/cli/plugin/#cli-showusage","text":"Shows the usage help screen for the CLI and terminates."}]},{"title":"Making Your Own -- CLI -- run( args ) => Promise< void >","blocks":[{"link":"/v5/cli/plugin/#cli-run","text":"Usually the value of args passed in will be process.argv.slice(2)."}]},{"title":"Making Your Own -- Plugin","blocks":[{"link":"/v5/cli/plugin/#cli-plugin","text":"Each Plugin manages each command of a CLI and is executed in phases."},{"link":"/v5/cli/plugin/#cli-plugin","text":"If the usage (i.e."},{"link":"/v5/cli/plugin/#cli-plugin","text":"help) of a CLI is requested, the static methods getHelp and getOptionHelp are used to generate the help screen."},{"link":"/v5/cli/plugin/#cli-plugin","text":"Otherwise, a plugin is instantiated and the prepareOptions is called."},{"link":"/v5/cli/plugin/#cli-plugin","text":"Each plugin must call super.prepareOptions, otherwise the basic options are not yet processed."},{"link":"/v5/cli/plugin/#cli-plugin","text":"During this time a Plugin should consume all the flags and options it understands, since any left over flags or options will cause the CLI to bail and issue an unknown option error."},{"link":"/v5/cli/plugin/#cli-plugin","text":"This should throw if a value for a given option is invalid or some combination of options and flags is not allowed."},{"link":"/v5/cli/plugin/#cli-plugin","text":"Once the prepareOptions is complete (the returned promise is resolved), the prepareArguments is called."},{"link":"/v5/cli/plugin/#cli-plugin","text":"This should validate the number of arguments expected and throw an error if there are too many or too few arguments or if any arguments do not make sense."},{"link":"/v5/cli/plugin/#cli-plugin","text":"Once the prepareArguments is complete (the returned promise is resolved), the run is called."}]},{"title":"Making Your Own -- Plugin -- plugin.network => Network","blocks":[{"link":"/v5/cli/plugin/#cli-plugin","text":"The network this plugin is running for."}]},{"title":"Making Your Own -- Plugin -- plugin.provider => Provider","blocks":[{"link":"/v5/cli/plugin/#cli-plugin","text":"The provider for this plugin is running for."}]},{"title":"Making Your Own -- Plugin -- plugin.accounts => Array< Signer >","blocks":[{"link":"/v5/cli/plugin/#cli-plugin","text":"The accounts passed into the plugin using --account, --account-rpc and --account-void which this plugin can use."}]},{"title":"Making Your Own -- Plugin -- plugin.gasLimit => BigNumber","blocks":[{"link":"/v5/cli/plugin/#cli-plugin","text":"The gas limit this plugin should use."},{"link":"/v5/cli/plugin/#cli-plugin","text":"This is null if unspecified."}]},{"title":"Making Your Own -- Plugin -- plugin.gasPrice => BigNumber","blocks":[{"link":"/v5/cli/plugin/#cli-plugin","text":"The gas price this plugin should use."},{"link":"/v5/cli/plugin/#cli-plugin","text":"This is null if unspecified."}]},{"title":"Making Your Own -- Plugin -- plugin.nonce => number","blocks":[{"link":"/v5/cli/plugin/#cli-plugin","text":"The initial nonce for the account this plugin should use."}]},{"title":"Making Your Own -- Plugin -- plugin.getAddress( addressOrName [ , message = \"\" , [ allowZero = false ] ] ) => Promise< string >","blocks":[{"link":"/v5/cli/plugin/#plugin-getaddress","text":"A plugin should use this method to resolve an address."},{"link":"/v5/cli/plugin/#plugin-getaddress","text":"If the resolved address is the zero address and allowZero is not true, an error is raised."}]},{"title":"Making Your Own -- Plugin -- plugin.dump( header , info ) => void","blocks":[{"link":"/v5/cli/plugin/#plugin-dump","text":"Dumps the contents of info to the console with a header in a nicely formatted style."},{"link":"/v5/cli/plugin/#plugin-dump","text":"In the future, plugins may support a JSON output format which will automatically work with this method."}]},{"title":"Making Your Own -- Plugin -- plugin.throwUsageError( [ message = \"\" ] ) => never","blocks":[{"link":"/v5/cli/plugin/#plugin-throwusageerror","text":"Stops execution of the plugin and shows the help screen of the plugin with the optional message."}]},{"title":"Making Your Own -- Plugin -- plugin.throwError( message ) => never","blocks":[{"link":"/v5/cli/plugin/#plugin-throwerror","text":"Stops execution of the plugin and shows message."}]},{"title":"Making Your Own -- Plugin -- Plugin.getHelp => Help","blocks":[{"link":"/v5/cli/plugin/#plugin-gethelp","text":"Each subclass should implement this static method which is used to generate the help screen."}]},{"title":"Making Your Own -- Plugin -- Plugin.getOptionHelp => Array< Help >","blocks":[{"link":"/v5/cli/plugin/#plugin-getoptionshelp","text":"Each subclass should implement this static method if it supports additional options which is used to generate the help screen."}]},{"title":"Making Your Own -- ArgParser","blocks":[{"link":"/v5/cli/plugin/#cli-argparser","text":"The ArgParser is used to parse a command line into flags, options and arguments."},{"link":"/v5/cli/plugin/#cli-argparser","text":"Flags are simple binary options (such as the --yes), which are true if present otherwise false."},{"link":"/v5/cli/plugin/#cli-argparser","text":"Options require a single parameter follow them on the command line (such as --account wallet.json, which has the name account and the value wallet.json)."},{"link":"/v5/cli/plugin/#cli-argparser","text":"Arguments are all other values on the command line, and are not accessed through the ArgParser directly."},{"link":"/v5/cli/plugin/#cli-argparser","text":"When a CLI is run, an ArgParser is used to validate the command line by using prepareOptions, which consumes all flags and options leaving only the arguments behind, which are then passed into prepareArgs."}]},{"title":"Making Your Own -- ArgParser -- argParser.consumeFlag( name ) => boolean","blocks":[{"link":"/v5/cli/plugin/#argparser-consumeflag","text":"Remove the flag name and return true if it is present."}]},{"title":"Making Your Own -- ArgParser -- argParser.consumeMultiOptions( names ) => Array< {name:string,value:string} >","blocks":[{"link":"/v5/cli/plugin/#argparser-consumemultioptions","text":"Remove all options which match any name in the Array of names with their values returning the list (in order) of values."}]},{"title":"Making Your Own -- ArgParser -- argParser.consumeOption( name ) => string","blocks":[{"link":"/v5/cli/plugin/#argparser-consumeoption","text":"Remove the option with its value for name and return the value."},{"link":"/v5/cli/plugin/#argparser-consumeoption","text":"This will throw a UsageError if the option is included multiple times."}]},{"title":"Making Your Own -- ArgParser -- argParser.consumeOptions( name ) => Array< string >","blocks":[{"link":"/v5/cli/plugin/#argparser-consumeoptions","text":"Remove all options with their values for name and return the list (in order) of values."}]},{"title":"TypeScript -- Examples","blocks":[{"link":"/v5/cli/typescript/","text":"TODO."}]},{"title":"Best Practices -- Network Changes","blocks":[{"link":"/v5/concepts/best-practices/#best-practices","text":"Handling a change in the network (e.g."},{"link":"/v5/concepts/best-practices/#best-practices","text":"Ropsten vs Mainnet) is incredibly complex and a slight failure can at best make your application seem confusing and at worst cause the loss of funds, leak private data or misrepresent what an action performed."},{"link":"/v5/concepts/best-practices/#best-practices","text":"Luckily, standard users should likely never change their networks unless tricked to do so or they make a mistake."},{"link":"/v5/concepts/best-practices/#best-practices","text":"This is a problem you mainly need to worry about for developers, and most developers should understand the vast array of issues surrounding a network change during application operation and will understand the page reloading (which is already the default behaviour in many clients)."},{"link":"/v5/concepts/best-practices/#best-practices","text":"So, the best practice when a network change occurs is to simply refresh the page."},{"link":"/v5/concepts/best-practices/#best-practices","text":"This should cause all your UI components to reset to a known-safe state, including any banners and warnings to your users if they are on an unsupported network."},{"link":"/v5/concepts/best-practices/#best-practices","text":"This can be accomplished by using the following function:."}]},{"title":"Events","blocks":[{"link":"/v5/concepts/events/","text":"Explain how topics and such work."}]},{"title":"Events -- Solidity Topics","blocks":[{"link":"/v5/concepts/events/","text":"How to compute the topic..."}]},{"title":"Events -- Logs and Filtering","blocks":[{"link":"/v5/concepts/events/","text":"Example hog logs are used."},{"link":"/v5/concepts/events/","text":"Link to provider.getLogs and contract.on."}]},{"title":"Events -- Logs and Filtering -- Filters","blocks":[{"link":"/v5/concepts/events/","text":"Filter are used as a way to query ..."},{"link":"/v5/concepts/events/","text":"efficient, explain bloom filters lightly."},{"link":"/v5/concepts/events/","text":"A filter may have up to 4 topic-sets, where each topic-set refers to a condition that must match the log topic in that position (i.e."},{"link":"/v5/concepts/events/","text":"each condition is AND-ed together)."},{"link":"/v5/concepts/events/","text":"If a topic-set is null, a log topic in that position is not filtered at all and any value matches."},{"link":"/v5/concepts/events/","text":"If a topic-set is a single topic, a log topic in that position must match that topic."},{"link":"/v5/concepts/events/","text":"If a topic-set is an array of topics, a log topic in that position must match any one of the topics (i.e."},{"link":"/v5/concepts/events/","text":"the topic in this position are OR-ed)."}]},{"title":"Events -- Logs and Filtering -- Example Log Matching","blocks":[{"link":"/v5/concepts/events/","text":"To simplify life, ..., explain here, the contract API."}]},{"title":"Events -- Logs and Filtering -- Other Things? TODO","blocks":[{"link":"/v5/concepts/events/","text":"Explain what happens to strings and bytes, how to filter and retain the value."}]},{"title":"Gas","blocks":[{"link":"/v5/concepts/gas/#gas","text":"Explain attack vectors."}]},{"title":"Gas -- Gas Price","blocks":[{"link":"/v5/concepts/gas/#gas-price","text":"The gas price is used somewhat like a bid, indicating an amount you are willing to pay (per unit of execution) to have your transaction processed."}]},{"title":"Vapory Basics","blocks":[{"link":"/v5/concepts/","text":"This is a brief overview of some aspects of Vapory and blockchains which developers can make use of or should be aware of."},{"link":"/v5/concepts/","text":"This section is sparse at the moment, but will be expanded as time goes on."}]},{"title":"Security -- Key Derivation Functions","blocks":[{"link":"/v5/concepts/security/#security--pbkdf","text":"This is not specific to Vapory, but is a useful technique to understand and has some implications on User Experience."},{"link":"/v5/concepts/security/#security--pbkdf","text":"Many people are concerned that encrypting and decrypting an Vapory wallet is quite slow and can take quite some time."},{"link":"/v5/concepts/security/#security--pbkdf","text":"It is important to understand this is intentional and provides much stronger security."},{"link":"/v5/concepts/security/#security--pbkdf","text":"The algorithm usually used for this process is scrypt, which is a memory and CPU intensive algorithm which computes a key (fixed-length pseudo-random series of bytes) for a given password."}]},{"title":"Security -- Key Derivation Functions -- Why does it take so long?","blocks":[{"link":"/v5/concepts/security/#security--pbkdf","text":"The goal is to use as much CPU and memory as possible during this algorithm, so that a single computer can only compute a very small number of results for some fixed amount of time."},{"link":"/v5/concepts/security/#security--pbkdf","text":"To scale up an attack, the attacker requires additional computers, increasing the cost to brute-force attack to guess the password."},{"link":"/v5/concepts/security/#security--pbkdf","text":"For example, if a user knows their correct password, this process may take 10 seconds for them to unlock their own wallet and proceed."},{"link":"/v5/concepts/security/#security--pbkdf","text":"But since an attacker does not know the password, they must guess; and each guess also requires 10 seconds."},{"link":"/v5/concepts/security/#security--pbkdf","text":"So, if they wish to try guessing 1 million passwords, their computer would be completely tied up for 10 million seconds, or around 115 days."},{"link":"/v5/concepts/security/#security--pbkdf","text":"Without using an algorithm like this, a user would be able to log in instantly, however, 1 million passwords would only take a few seconds to attempt."},{"link":"/v5/concepts/security/#security--pbkdf","text":"Even secure passwords would likely be broken within a short period of time."},{"link":"/v5/concepts/security/#security--pbkdf","text":"There is no way the algorithm can be faster for a legitimate user without also being faster for an attacker."}]},{"title":"Security -- Key Derivation Functions -- Mitigating the User Experience","blocks":[{"link":"/v5/concepts/security/#security--pbkdf","text":"Rather than reducing the security (see below), a better practice is to make the user feel better about waiting."},{"link":"/v5/concepts/security/#security--pbkdf","text":"The Vapors encryption and decryption API allows the developer to incorporate a progress bar, by passing in a progress callback which will be periodically called with a number between 0 and 1 indication percent completion."},{"link":"/v5/concepts/security/#security--pbkdf","text":"In general a progress bar makes the experience feel faster, as well as more comfortable since there is a clear indication how much (relative) time is remaining."},{"link":"/v5/concepts/security/#security--pbkdf","text":"Additionally, using language like \"decrypting...\" in a progress bar makes a user feel like there time is not being needlessly wasted."}]},{"title":"Security -- Key Derivation Functions -- Work-Arounds (not recommended)","blocks":[{"link":"/v5/concepts/security/#security--pbkdf","text":"There are ways to reduce the time required to decrypt an Vapory JSON Wallet, but please keep in mind that doing so discards nearly all security on that wallet."},{"link":"/v5/concepts/security/#security--pbkdf","text":"The scrypt algorithm is designed to be tuned."},{"link":"/v5/concepts/security/#security--pbkdf","text":"The main purpose of this is to increase the difficulty as time goes on and computers get faster, but it can also be tuned down in situations where the security is less important."}]},{"title":"Contributing and Hacking","blocks":[{"link":"/v5/contributing/#contributing","text":"The vapors.js library is something that I've written out of necessity, and has grown somewhat organically over time."},{"link":"/v5/contributing/#contributing","text":"Many things are the way they are for good (at the time, at least) reasons, but I always welcome criticism, and am completely willing to have my mind changed on things."},{"link":"/v5/contributing/#contributing","text":"So, pull requests are always welcome, but please keep a few points in mind:."},{"link":"/v5/contributing/#contributing","text":"Backwards-compatibility-breaking changes will not be accepted; they may be considered for the next major version Security is important; adding dependencies require fairly convincing arguments as to why The library aims to be lean, so keep an eye on the dist/vapors.min.js file size before and after your changes Add test cases for both expected and unexpected input Any new features need to be supported by me (future issues, documentation, testing, migration), so anything that is overly complicated or specific may not be accepted."},{"link":"/v5/contributing/#contributing","text":"In general, please start an issue before beginning a pull request, so we can have a public discussion and figure out the best way to address the problem/feature."},{"link":"/v5/contributing/#contributing","text":":)."}]},{"title":"Contributing and Hacking -- Building","blocks":[{"link":"/v5/contributing/#contributing--building","text":"If you wish to modify the source code, there are a few steps involved in setting up your environment."},{"link":"/v5/contributing/#contributing--building","text":"Since the library uses a monorepo, you must install an initial required set of libraries, which can then be used to install the remaining libraries used within each package, as well as link all the packages within the repo with each other."}]},{"title":"Contributing and Hacking -- Making your changes","blocks":[{"link":"/v5/contributing/#contributing--updating","text":"TODO: Add more information here."}]},{"title":"Contributing and Hacking -- Documentation","blocks":[{"link":"/v5/contributing/#contributing--documentation","text":"The documents are generated using Flatworm documentation generation tool, which was written for the purpose of writing the documentation for vapors."},{"link":"/v5/contributing/#contributing--documentation","text":"Style Guide (this section will have much more coming):."},{"link":"/v5/contributing/#contributing--documentation","text":"Try to keep lines no longer than around 80 characters Avoid inline links in the source; use the externalLinks field in the config.js Prefix external links with link- Changing an anchor name must be well justified, as it will break all existing links to that section; flatworm will support symlinks in the future In general, I aim for xonsistency; look to similar situations throughout the documentation."}]},{"title":"Contributing and Hacking -- Documentation -- Building","blocks":[{"link":"/v5/contributing/#contributing--documentation","text":"To build the documentation, you should first follow the above steps to build the vapors library."},{"link":"/v5/contributing/#contributing--documentation","text":"Building the docs will generate several types of output:."},{"link":"/v5/contributing/#contributing--documentation","text":"A full set of HTML pages, linking across each other A single one-page HTML page with all pages linking to local anchors A full set of README.md pages organized to be browsable and linkable in GitHub A metadata dump for tool ingestion (still needs more work) (@TODO; only half done) The documentation as a LaTeX and generated PDF."}]},{"title":"Contributing and Hacking -- Documentation -- Evaluation","blocks":[{"link":"/v5/contributing/#contributing--documentation","text":"When building the documentation, all code samples are run through a JavaScript VM to ensure there are no typos in the example code, as well the exact output of results are injected into the output, so there is no need to keep the results and code in-sync."},{"link":"/v5/contributing/#contributing--documentation","text":"However, this can be a bit of a headache when making many small changes, so to build the documentation faster, you can skip the evaluation step, which will inject the code directly."}]},{"title":"Contributing and Hacking -- Documentation -- Previewing Changes","blocks":[{"link":"/v5/contributing/#contributing--documentation","text":"To preview the changes locally, you can use any standard web server and run from the /docs/ folder, or use the built-in web server."},{"link":"/v5/contributing/#contributing--documentation","text":"The same caveats as normal web development apply, such flushing browser caches after changing (and re-building) the docs."}]},{"title":"Cookbook","blocks":[{"link":"/v5/cookbook/","text":"A collection (that will grow over time) of common, simple snippets of code that are in general useful."}]},{"title":"React Native (and ilk)","blocks":[{"link":"/v5/cookbook/react-native/#cookbook-reactnative","text":"The React Native framework has become quite popular and has many popular forks, such as Expo."},{"link":"/v5/cookbook/react-native/#cookbook-reactnative","text":"React Native is based on JavaScriptCore (part of WebKit) and does not use Node.js or the common Web and DOM APIs."},{"link":"/v5/cookbook/react-native/#cookbook-reactnative","text":"As such, there are many operations missing that a normal web environment or Node.js instance would provide."},{"link":"/v5/cookbook/react-native/#cookbook-reactnative","text":"For this reason, there is a Shims module provided to fill in the holes."}]},{"title":"React Native (and ilk) -- Installing","blocks":[{"link":"/v5/cookbook/react-native/#cookbook-reactnative-shims","text":"To use vapors in React Native, you must either provide shims for the needed missing functionality, or use the vapors.js shim."},{"link":"/v5/cookbook/react-native/#cookbook-reactnative-shims","text":"It is HIGHLY RECOMMENDED you check out the [security section](cookbook-reactnative-security> below for instructions on installing packages which can affect the security of your application."},{"link":"/v5/cookbook/react-native/#cookbook-reactnative-shims","text":"After installing packages, you may need to restart your packager and company."}]},{"title":"React Native (and ilk) -- Security","blocks":[{"link":"/v5/cookbook/react-native/#cookbook-reactnative-security","text":"The React Native environment does not contain a secure random source, which is used when computing random private keys."},{"link":"/v5/cookbook/react-native/#cookbook-reactnative-security","text":"This could result in private keys that others could possibly guess, allowing funds to be stolen and assets manipulated."},{"link":"/v5/cookbook/react-native/#cookbook-reactnative-security","text":"For this reason, it is HIGHLY RECOMMENDED to also install the React Native get-random-values, which must be included before the shims."},{"link":"/v5/cookbook/react-native/#cookbook-reactnative-security","text":"If it worked correctly you should not receive any warning in the console regarding missing secure random sources."}]},{"title":"Flatworm Docs","blocks":[{"link":"/v5/documentation/#flatworm","text":"The Flatworm Docs rendering engine is designed to be very simple, but provide enough formatting necessary for documenting JavaScript libraries."},{"link":"/v5/documentation/#flatworm","text":"A lot of its inspiration came from Read the Docs and the Sphinx project."}]},{"title":"Flatworm Docs -- Fragments","blocks":[{"link":"/v5/documentation/#flatworm-fragments","text":"Each page is made up of fragments."},{"link":"/v5/documentation/#flatworm-fragments","text":"A fragment is a directive, with an value and optional link, extensions and a body."},{"link":"/v5/documentation/#flatworm-fragments","text":"Many directives support markdown in their value and body."},{"link":"/v5/documentation/#flatworm-fragments","text":"A fragment's body continues until another fragment is encountered."}]},{"title":"Flatworm Docs -- Fragments -- _section: TITLE","blocks":[{"link":"/v5/documentation/#flatworm-directive","text":"A section has its TITLE in an H1 font."},{"link":"/v5/documentation/#flatworm-directive","text":"Sections are linked to in Table of Contents and have a dividing line drawn above them."},{"link":"/v5/documentation/#flatworm-directive","text":"The body supports markdown."},{"link":"/v5/documentation/#flatworm-directive","text":"There should only be one _section: per page."},{"link":"/v5/documentation/#flatworm-directive","text":"Extensions: @inherit, @src, @nav, @note."}]},{"title":"Flatworm Docs -- Fragments -- _subsection: TITLE","blocks":[{"link":"/v5/documentation/#flatworm-directive","text":"A subsection has its TITLE in an H2 font."},{"link":"/v5/documentation/#flatworm-directive","text":"Subsections are linked to in Table of Contents and have a dividing line drawn above them."},{"link":"/v5/documentation/#flatworm-directive","text":"The title and body support markdown."},{"link":"/v5/documentation/#flatworm-directive","text":"Extensions: @inherit, @src, @note."}]},{"title":"Flatworm Docs -- Fragments -- _heading: TITLE","blocks":[{"link":"/v5/documentation/#flatworm-directive","text":"A heading has its TITLE in an H3 font."},{"link":"/v5/documentation/#flatworm-directive","text":"The title and body support markdown."},{"link":"/v5/documentation/#flatworm-directive","text":"Extensions: @inherit, @src, @note."}]},{"title":"Flatworm Docs -- Fragments -- _definition: TERM","blocks":[{"link":"/v5/documentation/#flatworm-directive","text":"A definition has its TERM in normal text and the body is indented."},{"link":"/v5/documentation/#flatworm-directive","text":"The title and body support markdown."}]},{"title":"Flatworm Docs -- Fragments -- _property: SIGNATURE","blocks":[{"link":"/v5/documentation/#flatworm-directive","text":"A property has its JavaScript SIGNATURE formatted."},{"link":"/v5/documentation/#flatworm-directive","text":"The body supports markdown and the return portion of the signature support markdown links."},{"link":"/v5/documentation/#flatworm-directive","text":"Extensions: @src."}]},{"title":"Flatworm Docs -- Fragments -- _note: BANNER","blocks":[{"link":"/v5/documentation/#flatworm-directive","text":"A note is placed in a blue bordered-box to draw attention to it."},{"link":"/v5/documentation/#flatworm-directive","text":"The body supports markdown."}]},{"title":"Flatworm Docs -- Fragments -- _warning: BANNER","blocks":[{"link":"/v5/documentation/#flatworm-directive","text":"A warning is placed in an orange bordered-box to draw attention to it."},{"link":"/v5/documentation/#flatworm-directive","text":"The body supports markdown."}]},{"title":"Flatworm Docs -- Fragments -- _code: CAPTION","blocks":[{"link":"/v5/documentation/#flatworm-directive","text":"Creates a Code block."},{"link":"/v5/documentation/#flatworm-directive","text":"The body does not support markdown, and will be output exactly as is, with the exception of Code Evaluation."},{"link":"/v5/documentation/#flatworm-directive","text":"If a line begins with a \"_\", it should be escaped with a \"\\\"."},{"link":"/v5/documentation/#flatworm-directive","text":"Extensions: @lang."}]},{"title":"Flatworm Docs -- Fragments -- _table: FOOTER","blocks":[{"link":"/v5/documentation/#flatworm-directive","text":"Creates a Table structured according to the body."},{"link":"/v5/documentation/#flatworm-directive","text":"Each cell contents supports markdown and variables supports markdown."},{"link":"/v5/documentation/#flatworm-directive","text":"Extensions: @style."}]},{"title":"Flatworm Docs -- Fragments -- _toc:","blocks":[{"link":"/v5/documentation/#flatworm-directive","text":"A toc injects a Table of Contents, loading each line of the body as a filename and recursively loads the toc if present, otherwise all the sections and subsections."},{"link":"/v5/documentation/#flatworm-directive","text":"The body does not support markdown, as it is interpreted as a list of files and directories to process."}]},{"title":"Flatworm Docs -- Fragments -- _null:","blocks":[{"link":"/v5/documentation/#flatworm-directive","text":"A null is used to terminated a directive."},{"link":"/v5/documentation/#flatworm-directive","text":"For example, after a definition, the bodies are indented, so a null can be used to reset the indentation."},{"link":"/v5/documentation/#flatworm-directive","text":"The body supports markdown."}]},{"title":"Flatworm Docs -- Markdown","blocks":[{"link":"/v5/documentation/#flatworm-markdown","text":"The markdown is simple and does not have the flexibility of other dialects, but allows for bold, italic, underlined, monospaced, superscript and strike text, supporting links and lists."},{"link":"/v5/documentation/#flatworm-markdown","text":"Lists are rendered as blocks of a body, so cannot be used within a title or within another list."}]},{"title":"Flatworm Docs -- Code","blocks":[{"link":"/v5/documentation/#flatworm--code","text":"The code directive creates a monospace, contained block useful for displaying code samples."}]},{"title":"Flatworm Docs -- Code -- JavaScript Evaluation","blocks":[{"link":"/v5/documentation/#flatworm--code-eval","text":"For JavaScript files, the file is executed with some simple substitution."},{"link":"/v5/documentation/#flatworm--code-eval","text":"A bare //! on a line is replaced with the result of the last statement."},{"link":"/v5/documentation/#flatworm--code-eval","text":"Building will fail if an error is thrown."},{"link":"/v5/documentation/#flatworm--code-eval","text":"A bare //!error is replaced with the throw error."},{"link":"/v5/documentation/#flatworm--code-eval","text":"Building will fail if an error is not thrown."},{"link":"/v5/documentation/#flatworm--code-eval","text":"Also any code included between the lines // <hide> and // </hide> will be omitted from the output, which can be used to setup variables."}]},{"title":"Flatworm Docs -- Code -- Languages","blocks":[{"link":"/v5/documentation/#flatworm--code","text":"The language can be specified using the @lang extension."}]},{"title":"Flatworm Docs -- Tables","blocks":[{"link":"/v5/documentation/#flatworm--table","text":"The table directive consumes the entire body up until the next directive."},{"link":"/v5/documentation/#flatworm--table","text":"To terminate a table early to begin a text block, use a _null: directive."},{"link":"/v5/documentation/#flatworm--table","text":"Each line of the body should be Row Data or a Variable Declaration (or continuation of a Variable Declaration)."},{"link":"/v5/documentation/#flatworm--table","text":"Blank lines are ignored."}]},{"title":"Flatworm Docs -- Tables -- Row Data","blocks":[{"link":"/v5/documentation/#flatworm--table-row","text":"Each Row Data line must begin and end with a \"|\", with each gap representing the cell data, alignment with optional column and row spanning."}]},{"title":"Flatworm Docs -- Tables -- Alignment","blocks":[{"link":"/v5/documentation/#flatworm--table-alignment","text":"The alignment for a cell is determined by the whitespace surrounding the cell data."}]},{"title":"Flatworm Docs -- Tables -- Row and Column Spanning","blocks":[{"link":"/v5/documentation/#flatworm--table-spanning","text":"A column may end its content with any number of \"<\" which indicates how many additional columns to extend into."},{"link":"/v5/documentation/#flatworm--table-spanning","text":"If the cell content contains only a \"^\", then the row above is extended into this cell (into the same number of columns)."}]},{"title":"Flatworm Docs -- Tables -- Styles","blocks":[{"link":"/v5/documentation/#flatworm--table-style","text":"The @style extension for a table can be used to control its appearance."}]},{"title":"Flatworm Docs -- Tables -- Variables","blocks":[{"link":"/v5/documentation/#flatworm--table-variable","text":"Often the layout of a table is easier to express and maintain without uneven or changing content within it."},{"link":"/v5/documentation/#flatworm--table-variable","text":"So the content can be defined separately within a table directive using variables."},{"link":"/v5/documentation/#flatworm--table-variable","text":"A variable name must begin with a letter and must only contain letters and numbers."},{"link":"/v5/documentation/#flatworm--table-variable","text":"Variables are also useful when content is repeated throughout a table."},{"link":"/v5/documentation/#flatworm--table-variable","text":"A variable is declared by starting a line with \"$NAME:\", which consumes all lines until the next variable declaration or until the next table row line."},{"link":"/v5/documentation/#flatworm--table-variable","text":"A variable name must start with a letter and may consist of letters and numbers."},{"link":"/v5/documentation/#flatworm--table-variable","text":"(i.e."},{"link":"/v5/documentation/#flatworm--table-variable","text":"/[a-z][a-z0-9]*/i)."}]},{"title":"Flatworm Docs -- Configuration","blocks":[{"link":"/v5/documentation/#flatworm-config","text":"Configuration is optional (but highly recommended) and may be either a simple JSON file (config.json) or a JS file (config.js) placed in the top of the source folder."},{"link":"/v5/documentation/#flatworm-config","text":"TODO: example JSON and example JS."}]},{"title":"Flatworm Docs -- Extensions -- @inherit< markdown >","blocks":[{"link":"/v5/documentation/#flatworm--ext-inherit","text":"Adds an inherits description to a directive."},{"link":"/v5/documentation/#flatworm--ext-inherit","text":"The markdown may contain links."}]},{"title":"Flatworm Docs -- Extensions -- @lang< text >","blocks":[{"link":"/v5/documentation/#flatworm--ext-lang","text":"Set the language a code directive should be syntax-highlighted for."},{"link":"/v5/documentation/#flatworm--ext-lang","text":"If \"javascript\", the code will be evaluated."}]},{"title":"Flatworm Docs -- Extensions -- @nav< text >","blocks":[{"link":"/v5/documentation/#flatworm--ext-nav","text":"Sets the name in the breadcrumbs when not the current node."}]},{"title":"Flatworm Docs -- Extensions -- @note< markdown >","blocks":[{"link":"/v5/documentation/#flatworm--ext-note","text":"Adds a note to a directive."},{"link":"/v5/documentation/#flatworm--ext-note","text":"The markdown may contain links."},{"link":"/v5/documentation/#flatworm--ext-note","text":"If the directive already has an @INHERIT extension, that will be used instead and the @NOTE will be ignored."}]},{"title":"Flatworm Docs -- Extensions -- @src< key >","blocks":[{"link":"/v5/documentation/#flatworm--ext-src","text":"Calls the configuration getSourceUrl(key, VALUE) to get a URL which will be linked to by a link next to the directive."},{"link":"/v5/documentation/#flatworm--ext-src","text":"This extended directive function requires an advanced config.js Configuration file since it requires a JavaScript function."}]},{"title":"Flatworm Docs -- Extensions -- @style< text >","blocks":[{"link":"/v5/documentation/#flatworm--ext-style","text":"The Table Style to use for a table directive."}]},{"title":"Getting Started -- Installing","blocks":[{"link":"/v5/getting-started/#installing","text":"Vapors' various Classes and Functions are available to import manually from sub-packages under the @vaporsproject organization but for most projects, the umbrella package is the easiest way to get started."}]},{"title":"Getting Started -- Importing -- Web Browser","blocks":[{"link":"/v5/getting-started/#importing","text":"It is generally better practice (for security reasons) to copy the vapors library to your own webserver and serve it yourself."},{"link":"/v5/getting-started/#importing","text":"For quick demos or prototyping though, you can load it in your Web Applications from our CDN."}]},{"title":"Getting Started -- Common Terminology","blocks":[{"link":"/v5/getting-started/#getting-started--glossary","text":"This section needs work..."}]},{"title":"Getting Started -- Connecting to Vapory: Metamask","blocks":[{"link":"/v5/getting-started/#getting-started--connecting","text":"The quickest and easiest way to experiment and begin developing on Vapory is to use Metamask, which is a browser extension that provides:."},{"link":"/v5/getting-started/#getting-started--connecting","text":"A connection to the Vapory network (a Provider) Holds your private key and can sign things (a Signer)."}]},{"title":"Getting Started -- Connecting to Vapory: RPC","blocks":[{"link":"/v5/getting-started/#getting-started--connecting-rpc","text":"The JSON-RPC API is another popular method for interacting with Vapory and is available in all major Vapory node implementations (e.g."},{"link":"/v5/getting-started/#getting-started--connecting-rpc","text":"Geth and Parity) as well as many third-party web services (e.g."},{"link":"/v5/getting-started/#getting-started--connecting-rpc","text":"INFURA)."},{"link":"/v5/getting-started/#getting-started--connecting-rpc","text":"It typically provides:."},{"link":"/v5/getting-started/#getting-started--connecting-rpc","text":"A connection to the Vapory network (a Provider) Holds your private key and can sign thing (a Signer)."}]},{"title":"Getting Started -- Connecting to Vapory: RPC -- Querying the Blockchain","blocks":[{"link":"/v5/getting-started/#getting-started--querying","text":"Once you have a Provider, you have a read-only connection to the blockchain, which you can use to query the current state, fetch historic logs, look up deployed code and so on."}]},{"title":"Getting Started -- Contracts","blocks":[{"link":"/v5/getting-started/#getting-started--contracts","text":"A Contract is an abstraction of program code which lives on the Vapory blockchain."},{"link":"/v5/getting-started/#getting-started--contracts","text":"The Contract object makes it easier to use an on-chain Contract as a normal JavaScript object, with the methods mapped to encoding and decoding data for you."},{"link":"/v5/getting-started/#getting-started--contracts","text":"If you are familiar with Databases, this is similar to an Object Relational Mapper (ORM)."},{"link":"/v5/getting-started/#getting-started--contracts","text":"In order to communicate with the Contract on-chain, this class needs to know what methods are available and how to encode and decode the data, which is what the Application Binary Interface (API) provides."},{"link":"/v5/getting-started/#getting-started--contracts","text":"This class is a meta-class, which means its methods are constructed at runtime, and when you pass in the ABI to the constructor it uses it to determine which methods to add."},{"link":"/v5/getting-started/#getting-started--contracts","text":"While an on-chain Contract may have many methods available, you can safely ignore any methods you don't need or use, providing a smaller subset of the ABI to the contract."},{"link":"/v5/getting-started/#getting-started--contracts","text":"An ABI often comes from the Solidity or Vyper compiler, but you can use the Human-Readable ABI in code, which the following examples use."}]},{"title":"Hacking","blocks":[{"link":"/v5/hacking/","text":"Things to keep in mind:."}]},{"title":"Hacking -- Signing Messages -- Supported Platforms","blocks":[{"link":"/v5/hacking/","text":"..."}]},{"title":"Hacking -- Signing Messages -- Dependencies","blocks":[{"link":"/v5/hacking/","text":"Adding a dependency is non-trivial and will require fairly convincing arguments."},{"link":"/v5/hacking/","text":"Further, ALL dependencies for vapors, must be MIT licensed or public domain (CC0)."},{"link":"/v5/hacking/","text":"All contributions to vapors are then included under the MIT license."}]},{"title":"Hacking -- Signing Messages -- Printable ASCII (7-bit) Characters","blocks":[{"link":"/v5/hacking/","text":"All source and documentation files should ONLY use the printable ASCII set."},{"link":"/v5/hacking/","text":"This is for several reasons, bu..."},{"link":"/v5/hacking/","text":"Transmission over certain HTTP servers and proxies can mangle UTF-8 data Certain editors on some platforms, or in certain terminals cannot handle UTF-8 characters elegantly The ability to enter non-ASCII characters on some platforms require special keyboards, input devices or input methods to be installed, which either not be supported, or may require administrative priviledges."}]},{"title":"Hacking -- Signing Messages -- License","blocks":[{"link":"/v5/hacking/","text":"MIT..."}]},{"title":"Hacking -- Signing Messages -- Other Considerations","blocks":[{"link":"/v5/hacking/","text":"A common argument to Pull Requests is that they are simple, backwards compatible and."},{"link":"/v5/hacking/","text":"It is important to remember that a small change is something that we are required to support in perpetuity."},{"link":"/v5/hacking/","text":"For example, adding support for an obscure platform, such as adding a dot-file to the root of the package, now carries the implication that we will continue keeping that dot-file up-to-date as new versions of that platform are released."}]},{"title":"Documentation -- What is Vapors?","blocks":[{"link":"/v5/#preamble","text":"The vapors.js library aims to be a complete and compact library for interacting with the Vapory Blockchain and its ecosystem."},{"link":"/v5/#preamble","text":"It was originally designed for use with vapors.io and has since expanded into a more general-purpose library."}]},{"title":"Documentation -- Features","blocks":[{"link":"/v5/#features","text":"Keep your private keys in your client, safe and sound Import and export JSON wallets (Geth, Parity and crowdsale) Import and export BIP 39 mnemonic phrases (12 word backup phrases) and HD Wallets (English, Italian, Japanese, Korean, Simplified Chinese, Traditional Chinese; more coming soon) Meta-classes create JavaScript objects from any contract ABI, including ABIv2 and Human-Readable ABI Connect to Vapory nodes over JSON-RPC, INFURA, Vaporscan, Alchemy, Cloudflare or MetaMask."},{"link":"/v5/#features","text":"ENS names are first-class citizens; they can be used anywhere an Vapory addresses can be used Tiny (~88kb compressed; 284kb uncompressed) Complete functionality for all your Vapory needs Extensive documentation Large collection of test cases which are maintained and added to Fully TypeScript ready, with definition files and full TypeScript source MIT License (including ALL dependencies); completely open source to do with as you please."}]},{"title":"Documentation -- Legacy Documentation","blocks":[{"link":"/v5/#documentation--legacy","text":"This section will be kept up to date, linking to documentation of older versions of the library."},{"link":"/v5/#documentation--legacy","text":"version 4.0 version 3.0."}]},{"title":"License and Copyright","blocks":[{"link":"/v5/license/#license","text":"The vapors library (including all dependencies) are available under the MIT License, which permits a wide variety of uses."}]},{"title":"License and Copyright -- Legacy Documentation -- MIT License","blocks":[{"link":"/v5/license/#license","text":"Copyright &copy; 2019 Richard Moore."},{"link":"/v5/license/#license","text":"Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:."},{"link":"/v5/license/#license","text":"The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software."},{"link":"/v5/license/#license","text":"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT."},{"link":"/v5/license/#license","text":"IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."}]},{"title":"Migration: From Vapors v4","blocks":[{"link":"/v5/migration/vapors-v4/#migration-v4","text":"This document only covers the features present in v4 which have changed in some important way in v5."},{"link":"/v5/migration/vapors-v4/#migration-v4","text":"It does not cover all the new additional features that have been added and mainly aims to help those updating their older scripts and applications to retain functional parity."},{"link":"/v5/migration/vapors-v4/#migration-v4","text":"If you encounter any missing changes, please let me know and I'll update this guide."}]},{"title":"Migration: From Vapors v4 -- BigNumber -- Namespace","blocks":[{"link":"/v5/migration/vapors-v4/","text":"Since BigNumber is used quite frequently, it has been moved to the top level of the umbrella package."}]},{"title":"Migration: From Vapors v4 -- BigNumber -- Creating Instances","blocks":[{"link":"/v5/migration/vapors-v4/","text":"The bigNumberify method was always preferred over the constructor since it could short-circuit an object instantiation for [[BigNumber] objects (since they are immutable)."},{"link":"/v5/migration/vapors-v4/","text":"This has been moved to a static from class method."}]},{"title":"Migration: From Vapors v4 -- Contracts -- ENS Name Resolution","blocks":[{"link":"/v5/migration/vapors-v4/","text":"The name of the resolved address has changed."},{"link":"/v5/migration/vapors-v4/","text":"If the address passed into the constructor was an ENS name, the address will be resolved before any calls are made to the contract."},{"link":"/v5/migration/vapors-v4/","text":"The name of the property where the resolved address has changed from addressPromise to resolvedAddress."}]},{"title":"Migration: From Vapors v4 -- Contracts -- Gas Estimation","blocks":[{"link":"/v5/migration/vapors-v4/","text":"The only difference in gas estimation is that the bucket has changed its name from estimate to estimateGas."}]},{"title":"Migration: From Vapors v4 -- Contracts -- Functions","blocks":[{"link":"/v5/migration/vapors-v4/","text":"In a contract in vapors, there is a functions bucket, which exposes all the methods of a contract."},{"link":"/v5/migration/vapors-v4/","text":"All these functions are available on the root contract itself as well and historically there was no difference between contact.foo and contract.functions.foo."},{"link":"/v5/migration/vapors-v4/","text":"The original reason for the functions bucket was to help when there were method names that collided with other buckets, which is rare."},{"link":"/v5/migration/vapors-v4/","text":"In v5, the functions bucket is now intended to help with frameworks and for the new error recovery API, so most users should use the methods on the root contract."},{"link":"/v5/migration/vapors-v4/","text":"The main difference will occur when a contract method only returns a single item."},{"link":"/v5/migration/vapors-v4/","text":"The root method will dereference this automatically while the functions bucket will preserve it as an Result."},{"link":"/v5/migration/vapors-v4/","text":"If a method returns multiple items, there is no difference."},{"link":"/v5/migration/vapors-v4/","text":"This helps when creating a framework, since the result will always be known to have the same number of components as the Fragment outputs, without having to handle the special case of a single return value."}]},{"title":"Migration: From Vapors v4 -- Errors -- Namespace","blocks":[{"link":"/v5/migration/vapors-v4/","text":"All errors now belong to the Logger class and the related functions have been moved to Logger instances, which can include a per-package version string."},{"link":"/v5/migration/vapors-v4/","text":"Global error functions have been moved to Logger class methods."}]},{"title":"Migration: From Vapors v4 -- Interface","blocks":[{"link":"/v5/migration/vapors-v4/#migration-v4","text":"The Interface object has undergone the most dramatic changes."},{"link":"/v5/migration/vapors-v4/#migration-v4","text":"It is no longer a meta-class and now has methods that simplify handling contract interface operations without the need for object inspection and special edge cases."}]},{"title":"Migration: From Vapors v4 -- Interface -- Inspection","blocks":[{"link":"/v5/migration/vapors-v4/","text":"Interrogating properties about a function or event can now (mostly) be done directly on the Fragment object."}]},{"title":"Migration: From Vapors v4 -- Wallet -- Mnemonic Phrases","blocks":[{"link":"/v5/migration/vapors-v4/","text":"The mnemonic phrase and related properties have been merged into a single mnemonic object, which also now includes the locale."}]},{"title":"Migration Guide","blocks":[{"link":"/v5/migration/#migration","text":"Here are some migration guides when upgrading from older versions of Vapors or other libraries."}]},{"title":"Migration: From Web3.js","blocks":[{"link":"/v5/migration/web3/","text":"This migration guide focuses on migrating web3.js version 1.2.9 to vapors.js v5."}]},{"title":"Migration: From Web3.js -- Providers","blocks":[{"link":"/v5/migration/web3/","text":"In vapors, a provider provides an abstraction for a connection to the Vapory Network."},{"link":"/v5/migration/web3/","text":"It can be used to issue read only queries and send signed state changing transactions to the Vapory Network."}]},{"title":"Migration: From Web3.js -- Signers","blocks":[{"link":"/v5/migration/web3/","text":"In vapors, a signer is an abstraction of an Vapory Account."},{"link":"/v5/migration/web3/","text":"It can be used to sign messages and transactions and send signed transactions to the Vapory Network."},{"link":"/v5/migration/web3/","text":"In web3, an account can be used to sign messages and transactions."}]},{"title":"Migration: From Web3.js -- Contracts","blocks":[{"link":"/v5/migration/web3/","text":"A contract object is an abstraction of a smart contract on the Vapory Network."},{"link":"/v5/migration/web3/","text":"It allows for easy interaction with the smart contact."}]},{"title":"Migration: From Web3.js -- Contracts -- Overloaded Functions","blocks":[{"link":"/v5/migration/web3/","text":"Overloaded functions are functions that have the same name but different parameter types."},{"link":"/v5/migration/web3/","text":"In vapors, the syntax to call an overloaded contract function is different from the non-overloaded function."},{"link":"/v5/migration/web3/","text":"This section shows the differences between web3 and vapors when calling overloaded functions."},{"link":"/v5/migration/web3/","text":"See issue #407 for more details."}]},{"title":"Migration: From Web3.js -- Numbers -- BigNumber","blocks":[{"link":"/v5/migration/web3/","text":"Convert to BigNumber:."}]},{"title":"Migration: From Web3.js -- Utilities -- Hash","blocks":[{"link":"/v5/migration/web3/","text":"Computing Keccak256 hash of a UTF-8 string in web3 and vapors:."}]},{"title":"Testing","blocks":[{"link":"/v5/testing/","text":"Testing is a critical part of any library which wishes to remain secure, safe and reliable."},{"link":"/v5/testing/","text":"Vapors currently has over 23k tests among its test suites, which are all made available for other projects to use as simple exported GZIP-JSON files."},{"link":"/v5/testing/","text":"The tests are run on every check-in and the results can been seen on the GitHub CI Action."},{"link":"/v5/testing/","text":"We also strive to constantly add new test cases, especially when issues arise to ensure the issue is present prior to the fix, corrected after the fix and included to prevent future changes from causing a regression."},{"link":"/v5/testing/","text":"A large number of the test cases were created procedurally by using known correct implementations from various sources (such as Geth) and written in different languages and verified with multiple libraries."},{"link":"/v5/testing/","text":"For example, the ABI test suites were generated by procedurally generating a list of types, for each type choosing a random (valid) value, which then was converted into a Solidity source file, compiled using solc and deployed to a running Parity node and executed, with its outputs being captured."},{"link":"/v5/testing/","text":"Similar to the how many of the hashing, event and selector test cases were created."}]},{"title":"Testing -- Supported Platforms","blocks":[{"link":"/v5/testing/#testing-supported","text":"While web technologies move quite fast, especially in the Web3 universe, we try to keep vapors as accessible as possible."},{"link":"/v5/testing/#testing-supported","text":"Currently vapors should work on almost any ES3 or better environment and tests are run against:."},{"link":"/v5/testing/#testing-supported","text":"node.js 8.x node.js 10.x node.js 12.x node.js 13.x Web Browsers (using UMD) Web Browsers (using ES modules)."},{"link":"/v5/testing/#testing-supported","text":"If there is an environment you feel has been overlooked or have suggestions, please feel free to reach out by opening an issue on Github."},{"link":"/v5/testing/#testing-supported","text":"We would like to add a test build for Expo and React as those developers often seem to encounter pain points when using vapors, so if you have experience or ideas on this, bug us."},{"link":"/v5/testing/#testing-supported","text":"The next Major version (probably summer 2021) will likely drop support for node 8.x and will require ES2015 for Proxy."},{"link":"/v5/testing/#testing-supported","text":"Certain features in JavaScript are also avoided, such as look-behind tokens in regular expressions, since these have caused conflicts (at import time) with certain JavaScript environments such as Otto."},{"link":"/v5/testing/#testing-supported","text":"Basically, the moral of the story is \"be inclusive and don't drop people needlessly\"."}]},{"title":"Testing -- Test Suites","blocks":[{"link":"/v5/testing/#testing-suites","text":"The test suites are available as gzipped JSON files in the @vaporsproject/testcases, which makes it easy to install and import (both GZIP and JSON are quite easy to consume from most languages)."},{"link":"/v5/testing/#testing-suites","text":"Each test suite also has its schema available in this package."}]},{"title":"Testing -- Test Suite API","blocks":[{"link":"/v5/testing/#testing-api","text":"There are also convenience functions for those developing directly in TypeScript."}]},{"title":"Testing -- Test Suite API -- testcases.loadTests( tag ) => Array< TestCase >","blocks":[{"link":"/v5/testing/#testing-api","text":"Load all the given testcases for the tag."},{"link":"/v5/testing/#testing-api","text":"A tag is the string in the above list of test case names not including any extension (e.g."},{"link":"/v5/testing/#testing-api","text":"\"solidity-hashes\")."}]},{"title":"Testing -- Test Suite API -- testcases.TestCase.TEST_NAME","blocks":[{"link":"/v5/testing/#testing-api","text":"Most testcases have its schema available as a TypeScript type to make testing each property easier."}]},{"title":"Testing -- Test Suite API -- Deterministic Random Numbers (DRNG)","blocks":[{"link":"/v5/testing/#testing-api","text":"When creating test cases, often we want want random data from the perspective we do not case what values are used, however we want the values to be consistent across runs."},{"link":"/v5/testing/#testing-api","text":"Otherwise it becomes difficult to reproduce an issue."},{"link":"/v5/testing/#testing-api","text":"In each of the following the seed is used to control the random value returned."},{"link":"/v5/testing/#testing-api","text":"Be sure to tweak the seed properly, for example on each iteration change the value and in recursive functions, concatenate to the seed."}]},{"title":"Testing -- Test Suite API -- testcases.randomBytes( seed , lower [ , upper ] ) => Uint8Array","blocks":[{"link":"/v5/testing/","text":"Return at least lower random bytes, up to upper (exclusive) if specified, given seed."},{"link":"/v5/testing/","text":"If upper is omitted, exactly /lower bytes are returned."}]},{"title":"Testing -- Test Suite API -- testcases.randomHexString( seed , lower [ , upper ] ) => string< DataHexString >","blocks":[{"link":"/v5/testing/","text":"Identical to randomBytes, except returns the value as a DataHexString instead of a Uint8Array."}]},{"title":"Testing -- Test Suite API -- testcases.randomNumber( seed , lower , upper ) => number","blocks":[{"link":"/v5/testing/","text":"Returns a random number of at least lower and less than upper given seed."}]},{"title":"Testing -- Schemas","blocks":[{"link":"/v5/testing/#testing-schemas","text":"This section is still a work in progress, but will outline some of the more nuanced aspects of the test cases and their values."},{"link":"/v5/testing/#testing-schemas","text":"There will likely be an overhaul of the test cases in the next major version, to make code coverage testing more straight forward and to collapse some of the redundancy."},{"link":"/v5/testing/#testing-schemas","text":"For example, there is no longer a need to separate the ABI and ABIv2 test case and the accounts and transactions suites can be merged into one large collection."}]},{"title":"Testing -- Schemas -- Accounts","blocks":[{"link":"/v5/testing/#testing-schemas","text":"Basic account information using a private key and computing various address forms."},{"link":"/v5/testing/#testing-schemas","text":"Tests were verified against [VaporyJS](https://github.com/vaporycojs) and custom scripts created to directly interact with Geth and cpp implementations."},{"link":"/v5/testing/#testing-schemas","text":"See: accounts.json.gz."}]},{"title":"Testing -- Schemas -- Contract Interface","blocks":[{"link":"/v5/testing/#testing-schemas","text":"Procedurally generated test cases to test ABI coding."}]},{"title":"Testing -- Schemas -- Contract Signatures","blocks":[{"link":"/v5/testing/#testing-schemas","text":"Computed ABI signatures and the selector hash."}]},{"title":"Testing -- Schemas -- Hierarchal Deterministic Node (BIP-32)","blocks":[{"link":"/v5/testing/#testing-schemas","text":"Tests for BIP-32 HD Wallets."}]},{"title":"Testing -- Schemas -- ENS Namehash","blocks":[{"link":"/v5/testing/#testing-schemas","text":"Test cases for the ENS Namehash Algorithm."}]},{"title":"Testing -- Schemas -- Solidity Hashes","blocks":[{"link":"/v5/testing/#testing-schemas","text":"Tests for the non-standard packed form of the Solidity hash functions."},{"link":"/v5/testing/#testing-schemas","text":"These tests were created by procedurally generating random signatures and values that match those signatures, constructing the equivalent Soldity, compiling it and deploying it to a Parity node then evaluating the response."}]},{"title":"Testing -- Schemas -- Transactions","blocks":[{"link":"/v5/testing/#testing-schemas","text":"Serialized signed and unsigned transactions with both EIP-155 enabled and disabled."}]},{"title":"Testing -- Schemas -- Units","blocks":[{"link":"/v5/testing/#testing-schemas","text":"Unit conversion."}]},{"title":"Testing -- Schemas -- Wallets","blocks":[{"link":"/v5/testing/#testing-schemas","text":"Tests for the JSON keystore format."}]}],"indices":{"_todo":["0/0","98/0","124/2","125/2","126/2","129/2","131/0","141/0","230/1","230/2","230/3","341/0","346/0","569/0","744/0","774/0","781/0","791/0","793/2","823/1"],"_fill":["0/0","316/1","797/3"],"_this":["0/0","1/1","2/0","3/0","5/1","6/1","6/4","7/0","8/0","8/1","9/0","10/0","11/0","11/1","12/0","16/0","17/0","18/0","19/0","23/1","23/2","23/4","23/5","24/1","25/1","29/1","29/2","29/3","33/0","34/0","34/1","35/0","36/0","37/0","37/1","38/0","39/1","40/1","40/4","44/0","45/0","46/0","47/0","49/0","49/1","50/0","52/2","52/3","53/1","56/1","61/1","69/1","70/1","79/1","81/0","82/0","83/0","85/0","86/0","87/0","88/0","89/0","93/0","95/0","96/0","97/0","99/0","100/0","102/0","103/0","105/0","105/1","108/0","109/0","110/0","112/0","117/0","122/0","123/0","125/1","128/1","128/4","128/6","130/2","132/0","136/2","155/6","157/3","163/0","164/0","165/1","167/0","171/1","171/2","177/1","178/0","180/1","181/0","181/1","182/1","183/0","184/0","185/0","187/0","189/1","191/0","193/0","194/0","195/0","195/1","196/2","202/1","205/1","209/0","212/2","217/0","218/0","219/1","220/0","221/0","226/1","227/1","229/1","233/1","235/0","236/0","238/0","239/0","240/0","240/1","241/1","242/0","242/1","242/2","243/0","244/0","245/0","245/1","246/0","247/0","248/0","249/0","255/0","256/0","257/0","258/0","259/0","260/0","261/0","262/0","263/0","264/0","266/0","267/0","268/0","268/1","269/0","270/0","272/0","273/0","273/2","275/0","275/1","276/0","276/1","277/0","277/1","278/0","281/0","281/1","282/0","283/0","284/0","285/1","286/0","287/0","288/0","289/0","290/0","291/0","292/0","293/0","293/1","294/0","295/1","298/0","299/1","299/2","301/0","302/0","304/0","304/1","305/0","306/0","308/0","308/1","309/2","309/3","309/5","310/1","310/2","311/0","311/1","313/0","314/1","315/0","315/1","316/0","316/1","316/2","319/2","321/1","323/0","324/0","324/1","326/0","330/0","331/0","332/0","333/0","335/1","336/1","341/0","348/0","349/0","349/1","350/0","351/0","354/0","354/1","355/0","355/1","356/0","359/0","360/0","361/0","364/0","367/0","367/2","368/0","373/1","374/1","374/2","375/2","376/1","377/1","378/1","379/1","384/2","399/1","401/1","406/2","421/2","430/0","456/1","460/0","461/6","461/7","463/2","464/1","464/3","516/3","536/1","537/5","542/0","557/0","558/1","571/0","572/0","573/0","577/0","578/0","579/1","580/2","581/0","582/0","583/0","583/1","584/1","585/0","585/1","585/2","586/0","586/1","586/2","587/0","588/1","594/3","594/4","601/1","605/1","607/0","607/1","610/1","610/2","619/1","620/1","628/1","629/1","629/2","629/3","636/0","637/0","638/0","640/2","642/2","653/0","653/1","657/1","658/1","663/1","665/1","666/2","667/2","668/0","669/0","669/1","670/1","673/0","674/0","676/0","677/0","678/0","679/0","680/0","681/0","682/0","684/1","687/1","687/2","690/1","692/1","693/1","695/1","697/2","711/0","712/0","713/0","718/1","738/1","738/2","739/0","740/1","741/1","741/3","742/1","742/2","743/1","749/0","753/1","756/5","756/6","756/8","757/0","758/0","759/0","760/0","760/1","761/0","761/1","762/0","763/0","764/1","767/0","768/0","772/1","775/3","775/5","775/6","779/7","784/0","784/1","785/0","785/2","785/3","786/0","786/2","786/5","788/2","792/1","794/1","797/3","799/1","799/2","820/1","828/1","832/0","836/2","836/3","836/4","840/1","845/0","847/1","847/2","848/0","848/2","850/1","853/5","853/7","859/0","863/2","867/4","868/1","876/0"],"_in":["0/0","1/1","6/1","6/3","22/1","22/2","24/0","29/2","30/0","31/2","32/0","40/1","40/3","49/1","60/0","61/0","62/0","64/0","65/3","69/1","70/1","79/1","96/0","103/0","112/0","120/0","123/1","123/3","124/0","125/0","125/1","127/0","128/0","128/3","128/5","128/7","128/8","134/1","135/0","138/2","139/0","145/0","149/0","155/0","155/6","160/0","162/0","171/1","174/0","180/0","180/2","182/1","187/0","205/2","206/0","208/1","211/0","224/0","227/3","229/0","243/0","246/0","251/2","257/0","258/0","260/0","263/0","264/0","270/0","272/0","275/0","276/0","277/0","283/0","284/0","285/1","287/0","288/0","291/0","292/0","293/0","294/0","295/1","296/0","304/1","308/1","309/0","309/2","309/5","310/2","313/2","315/0","316/0","316/1","337/0","348/1","387/0","388/0","389/0","408/0","413/0","418/0","418/5","421/2","424/0","429/0","430/0","461/2","461/3","461/5","461/6","462/3","464/2","466/0","466/1","472/2","479/0","481/0","482/0","483/0","484/0","501/0","501/1","501/2","502/2","502/3","503/0","516/0","518/0","534/1","536/1","537/1","537/5","538/1","540/0","557/2","560/1","566/0","567/0","568/0","570/0","587/1","594/1","594/3","595/0","610/1","612/0","619/1","620/2","624/0","627/0","629/2","642/2","647/0","647/1","647/2","655/0","661/0","663/0","663/1","667/1","681/0","682/1","689/0","690/1","691/0","695/1","705/0","710/0","720/1","735/0","739/0","741/2","743/1","746/0","751/1","753/1","755/0","756/0","764/0","764/1","771/0","773/0","775/0","775/3","779/2","779/4","779/5","779/6","779/7","786/5","787/1","787/2","787/3","788/0","788/2","789/2","789/4","790/0","792/2","793/2","794/0","795/0","796/0","797/3","798/0","799/1","799/3","801/2","802/0","802/1","803/0","803/1","804/0","805/0","807/0","808/0","823/0","826/0","831/1","834/0","836/3","836/4","836/6","837/0","840/2","842/1","844/0","847/1","847/2","847/4","848/0","852/0","853/0","853/3","860/0","861/0","861/2","863/1","865/0","866/2","866/4","867/0","867/6","868/0","868/1","869/0","870/1","872/2","872/3","876/0","876/1"],"_including":["0/0","172/4","255/0","256/0","278/0","292/0","293/0","348/0","374/0","537/0","538/1","630/0","672/0","775/5","844/0","844/1","846/0","847/1","847/3","870/1"],"_src":["0/0","802/4","803/3","804/2","806/2","828/0"],"_links":["0/0","130/0","730/0","792/2","806/1","813/0","824/1","827/1"],"_contract":["0/0","1/0","1/1","2/0","3/0","3/1","4/0","5/0","5/1","6/0","6/1","6/4","7/0","8/0","9/0","10/0","11/0","12/0","13/0","14/0","15/0","16/0","17/0","18/0","19/0","20/1","22/0","23/1","23/0","25/1","25/0","27/0","28/0","29/0","31/0","32/0","33/0","34/0","35/0","39/0","39/1","40/0","40/1","40/4","48/0","57/0","59/0","59/1","59/2","128/1","159/0","200/0","200/1","225/0","225/1","226/2","259/0","281/1","283/0","283/1","308/1","384/0","384/2","385/3","386/2","396/0","427/0","428/0","624/0","690/1","778/1","780/0","836/0","836/1","836/3","836/5","844/0","847/4","851/1","853/0","853/1","853/3","853/4","855/1","862/0","863/1","878/0","879/0"],"_factory":["0/0","1/0","2/0","3/0"],"_contractfactory":["0/0","1/1","1/0","2/0","3/0","9/0","35/0","59/2"],"_return":["1/0","6/1","6/4","13/0","14/0","15/0","21/0","23/0","23/1","24/2","29/0","31/0","40/1","40/4","41/0","42/0","43/0","52/1","73/0","74/0","171/4","187/0","315/1","316/1","391/0","394/0","395/0","396/0","420/2","429/2","464/0","487/0","488/0","489/0","490/0","509/0","510/0","511/0","512/0","574/0","575/0","576/0","588/0","589/0","639/0","663/1","718/0","770/0","772/0","773/0","806/1","853/7","873/0"],"_an":["1/0","8/1","10/0","22/3","23/3","23/4","28/0","30/0","32/0","34/1","36/0","54/0","55/0","56/2","59/0","59/1","59/2","71/0","72/0","73/0","75/0","76/0","77/0","78/0","79/1","80/0","84/0","94/0","94/2","104/0","104/1","104/2","105/1","108/0","111/0","114/0","123/4","124/0","128/2","128/3","129/1","130/4","143/2","154/0","156/4","157/0","157/2","157/4","175/2","189/0","190/0","192/0","192/1","204/0","205/1","205/2","207/1","213/0","213/1","225/0","232/0","251/1","251/2","281/1","283/0","296/0","298/0","299/1","300/0","309/5","313/0","315/2","316/3","319/1","320/0","321/0","322/0","328/1","331/0","336/0","338/0","344/0","345/1","351/0","353/0","353/1","356/0","360/0","364/1","376/1","377/1","384/0","384/1","385/3","391/1","400/0","406/0","418/0","420/0","420/1","420/2","421/0","421/2","421/3","422/1","423/0","429/1","432/0","433/0","437/0","447/0","456/1","461/6","466/0","466/1","468/0","475/1","481/1","486/1","501/0","515/0","516/2","518/0","520/0","521/0","522/0","523/0","537/1","556/2","556/3","557/0","570/0","579/0","601/0","601/1","602/0","603/0","614/0","619/0","620/0","621/0","622/0","624/0","626/0","629/3","641/0","650/1","654/1","658/2","660/1","667/1","672/0","675/0","684/0","687/1","688/1","688/2","692/2","697/4","697/5","710/0","730/1","731/0","731/1","735/2","738/0","740/0","741/0","741/3","749/0","756/5","756/8","763/0","763/1","769/4","775/1","775/5","779/6","783/0","785/1","786/1","786/3","786/5","786/7","788/0","789/3","789/4","790/1","792/2","801/1","802/0","803/0","804/0","808/0","815/2","815/4","824/0","827/2","828/1","836/0","836/1","836/2","836/5","836/6","842/2","844/1","847/4","850/0","851/1","853/5","860/0","861/0","861/2","862/0","863/1","867/3","872/1","876/1"],"_instance":["1/0","5/0","6/0","32/0","39/0","40/0","84/0","136/1","175/0","188/0","191/0","318/0","320/0","321/0","322/0","325/0","329/0","336/0","337/0","433/0","437/0","520/0","521/0","522/0","523/0","538/0","588/0","594/2","797/2"],"_of":["1/0","5/0","5/1","6/0","6/4","9/0","14/0","14/1","15/0","20/0","21/0","22/0","24/0","24/1","26/0","27/0","29/0","30/0","35/0","39/0","39/1","40/0","40/4","42/0","42/1","43/0","49/0","50/0","51/0","53/0","54/0","56/2","59/0","59/2","65/2","65/4","69/1","70/1","71/0","74/0","76/0","77/0","83/0","84/0","85/0","86/0","87/0","88/0","89/0","93/0","95/0","96/0","97/0","99/0","102/0","107/0","108/0","110/0","117/0","120/0","121/0","122/0","123/0","123/2","128/1","128/7","130/1","130/4","135/0","136/1","136/2","137/0","140/0","146/0","150/0","154/0","154/1","155/5","155/6","157/1","159/0","164/0","171/0","171/3","171/4","172/5","174/4","175/0","175/1","175/2","175/3","176/0","177/1","180/1","180/2","186/0","189/0","192/1","199/0","200/0","201/0","202/0","203/0","204/0","205/0","205/1","206/0","207/0","208/0","210/0","211/0","212/0","213/0","219/0","222/0","222/1","223/0","224/0","226/0","227/0","227/1","230/0","231/0","231/1","231/2","233/0","234/0","236/0","237/0","238/0","239/0","240/0","240/1","241/0","241/1","242/0","242/1","242/2","243/0","244/0","245/1","246/0","247/0","249/0","255/0","256/0","258/0","259/0","261/0","262/0","263/0","264/0","268/1","269/0","270/0","274/0","275/0","276/0","277/0","278/0","283/1","284/0","285/0","285/2","286/0","288/0","289/0","291/0","292/0","293/0","293/1","295/0","296/0","297/1","301/0","304/0","305/0","306/0","308/0","310/0","313/1","314/0","314/1","315/1","316/1","329/0","330/0","331/0","332/0","333/0","335/0","336/0","337/0","339/0","340/0","345/1","353/0","354/0","355/0","355/1","356/0","361/0","361/1","368/0","368/1","369/0","374/0","375/0","376/1","377/0","378/0","379/0","384/0","385/1","385/3","391/1","396/0","399/1","402/0","406/2","407/0","414/0","416/0","418/0","418/1","418/2","418/4","420/0","420/1","422/2","429/0","429/1","431/0","436/0","437/0","439/0","440/0","441/0","442/0","443/0","444/0","445/0","446/0","448/0","449/0","450/0","451/0","452/0","453/0","454/0","455/0","456/0","457/0","458/0","460/0","461/0","462/0","462/2","462/4","463/2","464/2","464/3","468/0","469/0","470/0","470/1","475/1","479/0","480/0","481/0","482/0","483/0","484/0","484/1","485/0","486/0","487/0","488/0","489/0","490/0","492/0","493/0","499/0","502/0","505/0","507/0","509/0","511/0","513/0","516/2","520/0","521/0","522/0","523/0","524/0","525/0","526/0","527/0","528/0","529/0","530/0","531/0","532/0","533/0","534/0","537/0","537/1","537/3","538/0","538/1","539/0","540/0","541/0","542/0","545/0","546/0","548/0","549/0","550/0","551/0","554/0","554/1","555/0","556/1","556/2","556/3","556/4","557/1","561/0","564/0","565/0","567/0","568/0","573/0","580/0","581/0","582/0","583/0","584/0","585/0","585/1","586/0","586/1","587/0","588/0","588/1","589/0","594/2","601/1","607/1","610/1","612/0","618/0","619/1","620/0","620/1","620/2","625/1","625/2","628/2","629/0","640/2","644/1","645/0","645/1","647/0","647/1","650/0","650/1","651/0","652/0","654/0","658/2","661/0","662/0","663/0","663/1","666/0","667/0","667/1","668/0","677/0","684/1","687/1","687/2","688/2","689/0","692/1","693/0","693/1","694/0","695/0","695/1","697/5","706/0","710/0","712/0","715/0","718/0","719/0","720/1","730/2","731/1","733/1","734/2","735/0","737/0","738/0","738/1","741/3","742/2","745/1","750/0","755/0","756/0","756/2","756/6","756/8","764/0","765/0","766/0","771/0","773/0","775/1","775/3","779/6","783/0","784/0","785/3","786/0","786/6","788/2","789/0","790/1","792/0","793/1","793/2","794/0","794/1","796/0","797/1","798/1","800/1","801/0","802/1","803/1","806/1","809/1","811/0","811/1","813/0","813/1","815/1","817/2","820/0","820/1","822/0","822/5","823/0","836/0","836/5","842/2","844/1","845/0","846/0","847/1","847/2","847/3","847/4","849/0","851/0","851/2","853/0","853/7","858/0","861/0","862/0","865/0","866/0","866/4","866/5","866/6","867/7","870/1","872/2","874/0","875/0","876/0","876/1","882/0"],"_attached":["1/0","3/0","5/0","8/0","34/0","39/0","205/0"],"_to":["1/0","2/0","3/0","5/0","5/1","6/0","8/0","8/1","9/0","11/0","12/0","13/0","14/0","15/0","16/0","17/0","18/0","20/1","21/1","23/1","23/4","24/0","25/0","26/0","27/0","28/0","29/0","29/2","32/0","34/0","34/1","35/0","37/0","38/0","39/0","39/1","40/0","41/0","42/0","43/0","44/0","45/0","46/0","52/0","52/3","53/0","53/1","54/0","55/0","58/0","58/2","59/1","60/0","61/0","61/1","64/0","65/0","65/2","65/3","75/0","94/2","95/0","96/0","104/0","104/3","106/0","111/0","113/0","114/0","115/0","118/0","119/0","119/2","123/1","123/2","123/4","125/0","125/1","127/0","128/0","128/2","128/3","128/4","128/5","128/7","129/0","130/0","130/1","134/0","135/0","136/1","136/3","138/0","143/0","143/2","144/0","148/0","152/0","154/0","155/0","155/1","155/2","155/5","156/0","156/3","157/0","158/1","159/0","161/0","162/0","165/0","169/0","171/2","171/4","172/0","172/3","172/5","174/1","174/2","174/3","174/4","174/5","175/0","182/0","182/1","183/0","184/0","184/1","185/0","187/0","188/0","189/0","189/1","191/0","195/0","196/0","197/0","202/1","205/0","205/1","205/3","208/1","209/0","211/0","213/0","214/0","214/2","217/0","218/0","219/0","225/0","225/2","226/1","227/3","240/0","240/1","241/0","241/1","242/0","242/1","242/2","244/0","245/0","245/1","250/0","251/0","251/1","252/0","253/0","254/0","257/0","265/0","265/1","266/0","268/1","269/0","273/2","281/0","281/1","283/0","283/1","285/2","285/3","293/0","293/1","296/0","296/4","299/0","302/0","304/1","306/0","308/0","309/0","309/3","309/4","309/5","310/0","311/0","311/1","313/2","315/0","315/3","315/4","316/0","316/3","318/0","324/0","325/0","327/0","335/0","335/1","336/0","336/1","337/2","339/0","340/0","348/1","349/0","350/0","352/0","356/0","375/2","376/1","384/0","384/1","384/2","385/0","385/1","385/3","386/2","396/0","397/0","406/2","418/0","418/5","420/1","421/0","421/1","421/3","425/1","426/0","427/0","429/0","429/2","430/0","444/0","446/0","447/0","447/1","449/0","450/0","456/1","456/0","457/0","458/0","461/4","461/5","461/6","461/7","461/8","462/3","462/5","462/6","464/0","464/3","464/4","468/0","472/0","476/0","477/0","478/0","481/0","484/0","486/0","501/0","505/0","506/0","508/0","513/0","516/0","518/0","529/0","531/0","532/0","533/0","534/1","534/0","537/2","542/0","544/0","554/1","556/0","556/3","557/2","566/0","567/0","568/0","576/1","579/0","579/1","580/2","584/0","584/1","585/2","586/2","588/1","590/0","591/0","594/0","601/1","604/0","606/0","607/1","611/0","618/0","624/0","625/0","625/1","628/0","628/1","629/1","629/2","629/3","642/2","643/0","644/1","647/2","648/0","651/0","652/0","654/1","654/0","655/0","658/1","661/0","662/0","662/1","663/1","664/0","667/0","667/1","669/0","669/1","673/0","676/0","683/0","685/0","687/1","687/2","688/1","688/2","692/1","692/2","692/3","695/1","697/1","697/3","697/4","700/0","701/0","702/0","704/0","705/0","706/0","707/0","708/0","710/0","716/0","718/1","720/1","730/0","730/1","730/6","731/1","732/4","733/1","733/4","734/2","735/0","735/1","735/2","736/0","738/1","738/2","739/0","741/0","741/2","742/1","743/1","745/0","746/0","747/0","747/2","748/0","750/0","751/0","751/1","756/2","756/5","763/0","764/0","767/0","768/0","769/0","769/4","775/2","775/3","775/4","775/5","777/0","778/1","779/0","779/2","780/0","781/0","783/0","785/0","785/2","786/0","786/1","786/2","786/4","786/5","787/0","787/1","788/0","788/1","788/2","789/1","789/3","789/4","790/0","790/1","792/2","793/0","793/2","794/0","794/1","795/0","797/3","798/0","798/2","799/1","799/2","800/0","802/1","803/1","807/0","808/0","810/0","811/1","812/0","812/1","815/5","817/1","820/0","821/0","822/0","824/0","827/0","828/0","829/0","830/0","831/0","833/0","833/1","834/4","834/0","835/0","836/1","836/2","836/3","836/4","836/5","837/0","839/2","840/2","842/0","842/1","842/2","843/0","844/0","844/1","845/0","847/1","847/3","848/1","849/0","850/1","851/1","851/2","852/0","853/2","853/3","853/7","854/0","854/1","859/0","860/0","860/1","861/1","861/2","863/1","864/0","866/0","866/1","866/3","866/5","866/6","867/0","867/3","867/4","868/0","871/0","872/0","872/1","872/2","872/3","873/0","874/0","876/1","876/2","877/1","878/0","882/1"],"_address":["1/0","1/1","3/0","5/0","7/0","8/0","8/1","32/0","33/0","34/0","34/1","39/0","58/1","58/2","58/0","128/3","141/0","159/0","163/0","199/0","200/0","201/0","202/0","202/1","205/1","205/2","206/0","207/0","207/1","225/0","225/1","226/1","235/0","244/0","250/0","259/0","266/0","267/0","268/1","281/0","282/0","283/0","283/1","299/0","305/0","306/0","307/0","314/1","315/4","323/0","328/2","329/0","330/0","332/0","375/2","410/2","416/2","418/4","420/0","420/1","420/2","421/0","421/1","421/2","421/3","422/0","422/1","422/2","423/0","424/0","425/0","426/0","427/0","428/0","492/0","564/0","581/0","642/0","642/2","643/0","676/0","685/0","686/0","687/2","763/0","763/1","789/4","851/0","851/1","851/2","877/0"],"_is":["1/1","3/0","3/1","5/1","7/0","8/0","9/0","10/0","11/0","11/1","12/0","14/1","19/1","20/0","21/0","21/1","22/2","22/3","22/4","22/5","23/0","23/2","23/3","24/3","25/0","29/0","29/1","30/0","31/2","33/0","34/0","35/0","36/0","37/0","37/1","38/0","39/1","42/1","47/1","48/0","52/1","52/2","52/3","56/0","56/2","57/0","58/1","58/2","59/0","59/2","60/0","61/1","63/0","65/0","65/5","67/0","71/0","79/1","80/0","83/0","84/1","90/0","91/0","92/0","93/0","94/1","101/0","103/0","104/0","105/0","105/1","108/0","111/0","112/0","114/0","115/1","116/0","118/0","118/1","119/2","123/0","123/1","123/2","124/1","125/0","125/1","127/1","128/0","128/1","128/2","128/4","128/5","128/6","129/1","130/4","130/5","134/1","134/2","135/0","136/3","137/0","138/2","138/3","139/0","139/1","142/0","145/0","145/1","147/0","149/0","149/1","151/0","154/0","154/1","155/0","155/2","155/5","156/1","156/2","156/4","157/0","157/2","159/0","160/0","161/1","161/2","162/0","163/0","163/1","166/0","171/0","171/3","171/4","174/0","174/2","175/1","175/3","177/1","180/1","181/1","182/1","183/0","184/0","187/0","189/0","192/1","193/2","194/2","195/0","196/1","197/1","197/2","198/0","200/1","202/1","203/0","204/0","205/1","206/1","207/1","209/0","212/2","214/2","215/0","219/1","220/1","221/1","222/1","225/0","225/1","226/0","226/1","227/0","227/1","227/2","228/0","231/2","233/1","235/0","240/1","241/1","242/1","242/2","245/0","245/1","246/0","251/2","257/0","265/0","267/0","269/0","272/0","273/0","273/1","275/1","276/1","277/1","280/1","281/0","281/1","282/0","283/0","285/2","293/0","293/1","294/0","295/0","296/0","296/4","297/0","298/0","299/1","300/0","302/0","304/1","308/1","309/0","309/1","309/2","309/3","309/4","309/5","310/2","311/1","313/0","314/0","314/1","315/0","315/1","315/2","315/4","316/0","316/3","319/1","320/1","322/1","322/3","324/0","325/0","327/1","328/0","328/1","331/0","335/0","336/0","336/1","337/1","338/0","345/0","345/1","345/2","348/0","349/0","349/1","350/0","351/0","352/0","353/0","354/0","355/0","356/0","358/0","359/0","360/0","361/0","363/0","364/0","366/0","367/0","367/2","368/0","371/0","375/2","377/1","378/1","379/1","383/0","384/0","385/2","385/3","386/1","386/2","391/1","397/1","400/1","406/0","406/2","406/3","418/1","418/3","418/5","420/0","420/1","421/1","421/2","422/1","424/0","429/1","434/0","438/0","447/0","450/0","455/0","456/1","459/0","460/0","461/0","461/5","462/2","462/3","462/6","463/0","464/0","464/4","466/0","466/1","468/0","469/0","471/0","472/0","472/1","472/2","473/0","474/0","475/0","475/1","481/1","484/1","486/1","487/0","492/0","493/0","499/0","501/0","501/2","501/3","505/0","507/0","513/0","516/0","518/0","530/0","534/1","535/0","536/0","536/1","537/0","537/5","542/0","556/0","556/2","556/3","556/4","557/0","558/1","565/0","571/1","573/0","579/0","583/1","584/0","589/0","592/0","594/1","594/3","594/4","601/1","605/0","605/1","606/0","607/0","607/1","608/1","609/0","612/0","613/0","617/0","618/0","619/1","620/0","622/0","625/0","625/2","628/1","629/0","629/1","629/2","629/3","640/2","641/0","642/2","647/0","654/1","657/2","658/2","659/2","662/0","663/0","664/0","665/1","666/0","666/1","667/0","667/1","667/2","669/0","676/0","682/1","684/1","685/0","686/0","688/2","690/1","692/1","692/2","692/3","693/1","695/1","697/1","697/2","697/3","697/5","701/1","702/1","703/1","707/1","708/1","709/1","710/0","711/0","712/0","717/0","718/1","720/1","730/5","731/0","732/0","733/0","735/2","737/1","739/0","741/0","742/0","742/2","745/1","747/0","748/0","749/0","750/0","751/1","756/0","756/2","756/3","756/6","756/7","756/9","757/0","758/0","760/1","761/1","763/1","767/0","768/0","769/0","769/4","770/0","772/1","775/1","775/3","775/4","779/3","779/4","779/5","779/6","783/0","784/0","784/1","785/0","785/1","785/2","785/3","786/0","786/7","787/0","787/2","787/3","788/1","788/2","789/0","789/3","794/0","797/1","797/3","798/1","799/0","799/2","800/0","801/0","801/1","801/3","805/0","807/0","808/0","809/1","811/1","812/0","813/0","815/0","815/1","815/2","815/3","815/4","819/0","820/1","822/0","822/3","822/4","823/0","830/0","831/0","833/0","834/0","836/0","836/2","836/3","836/4","839/0","840/1","842/0","842/1","843/0","847/1","847/3","849/0","852/0","853/0","853/2","853/3","853/6","855/1","861/0","862/0","863/1","866/0","866/3","867/3","867/7","870/1","872/2","873/1","876/0","876/2"],"_the":["1/1","2/0","3/0","3/1","5/0","5/1","6/0","7/0","8/0","8/1","9/0","10/0","11/0","12/0","13/0","14/0","14/1","17/0","18/0","20/1","21/0","21/1","22/0","22/1","22/2","23/0","23/1","23/3","23/4","24/0","24/1","24/3","25/0","25/1","27/0","28/0","29/0","29/3","32/0","33/0","34/0","34/1","35/0","36/0","37/0","38/0","39/0","39/1","40/0","41/0","42/0","42/1","45/0","46/0","48/0","49/0","49/1","50/0","51/0","52/0","52/1","52/3","53/0","55/0","56/0","56/2","57/0","59/0","60/0","60/1","61/0","62/0","63/0","64/0","65/0","65/1","65/2","65/3","67/0","68/0","69/0","69/1","70/0","70/1","71/0","72/0","73/0","74/0","75/0","79/0","79/1","81/0","82/0","83/0","85/0","86/0","87/0","88/0","90/0","91/0","92/0","93/0","94/0","94/1","94/2","95/0","96/0","97/0","98/0","99/0","100/0","101/0","102/0","103/0","104/0","104/1","104/3","105/0","107/0","108/0","109/0","111/0","112/0","113/0","114/0","115/0","117/0","118/1","119/0","119/2","120/0","122/0","123/0","123/2","123/3","123/4","124/1","125/0","125/1","126/0","127/0","127/1","128/1","128/3","128/4","128/5","128/6","128/7","128/8","129/1","130/1","130/2","130/3","130/4","130/5","133/0","134/1","134/2","135/0","136/0","136/2","137/0","138/0","138/1","142/0","143/0","143/1","143/2","144/0","144/1","147/0","148/0","148/1","151/0","154/0","154/1","154/2","155/0","155/5","155/6","156/3","156/4","157/1","157/3","159/0","160/0","161/0","161/1","161/2","163/1","165/0","167/0","169/0","170/0","171/0","171/1","171/2","171/3","171/4","172/3","172/4","174/0","174/2","174/3","174/4","174/5","175/1","175/2","175/3","176/0","177/0","177/1","178/0","179/0","179/2","180/0","180/1","180/2","181/0","182/0","182/2","183/0","184/1","185/1","186/0","187/0","188/0","189/0","191/0","192/0","192/1","193/0","193/1","193/2","194/0","194/1","194/2","196/0","196/1","197/0","197/1","197/2","199/0","200/0","200/1","201/0","202/0","202/1","203/0","204/0","205/0","205/1","205/2","205/3","206/0","206/1","207/0","207/1","208/0","208/1","209/0","210/0","211/0","212/0","213/0","213/1","214/0","214/1","214/2","218/0","221/0","222/0","222/1","223/0","224/0","225/0","225/1","226/0","226/1","227/0","227/1","227/2","229/0","229/1","230/0","231/0","231/1","231/2","233/0","233/1","234/0","235/0","236/0","237/0","238/0","239/0","240/0","241/0","242/0","242/1","243/0","244/0","246/0","247/0","248/0","249/0","250/0","251/0","251/2","252/0","253/0","254/0","255/0","256/0","257/0","258/0","259/0","260/0","261/0","262/0","263/0","264/0","265/0","265/1","266/0","267/0","268/0","268/1","269/0","270/0","271/0","272/0","273/0","273/1","275/0","275/1","276/0","276/1","277/0","277/1","278/0","279/0","280/1","281/0","281/1","282/0","283/0","283/1","284/0","285/0","285/1","285/2","285/3","286/0","287/0","288/0","289/0","290/0","291/0","292/0","293/0","294/0","295/0","296/0","296/1","296/3","297/0","297/1","299/0","301/0","302/0","303/0","304/0","304/1","305/0","306/0","307/0","308/0","309/2","309/3","309/5","310/0","311/0","311/1","312/0","313/1","313/2","314/1","315/1","315/3","315/4","316/1","316/2","316/3","317/0","318/0","319/1","320/1","321/1","321/2","322/1","322/3","323/0","324/0","325/0","326/0","327/0","327/1","328/2","330/0","332/0","333/0","334/1","334/2","335/0","335/1","336/0","337/0","337/1","337/2","338/0","339/0","340/0","345/0","345/1","345/2","346/0","349/1","352/0","354/0","355/0","356/0","359/0","360/0","361/0","364/0","367/0","367/2","368/0","369/0","372/0","373/0","373/2","374/0","374/2","375/0","375/3","376/0","377/0","378/0","379/0","384/1","384/2","385/0","385/1","385/2","386/1","386/2","387/0","388/0","389/0","390/0","391/0","391/1","392/0","393/0","394/0","395/0","396/0","397/0","398/0","399/0","400/0","400/1","401/0","402/0","403/0","403/1","404/0","405/0","406/1","406/2","406/3","407/0","408/0","409/0","410/0","411/0","412/0","413/0","414/0","415/0","416/0","417/0","418/0","418/1","418/2","418/3","418/4","418/5","420/1","421/0","421/1","421/3","422/1","422/2","423/1","425/0","425/1","426/0","427/0","428/0","429/0","434/0","436/0","436/1","438/0","439/0","440/0","441/0","442/0","443/0","444/0","445/0","446/0","448/0","449/0","450/0","451/0","452/0","453/0","454/0","455/0","456/0","456/1","457/0","458/0","459/0","461/0","461/5","461/8","462/2","462/3","462/4","462/5","462/6","463/0","463/1","464/0","464/2","464/4","466/0","466/1","470/0","471/0","472/2","479/0","481/0","482/0","483/0","484/1","487/0","488/0","491/0","492/0","493/0","494/0","495/0","496/0","497/0","498/0","499/0","500/0","501/0","501/1","501/2","501/3","502/0","505/0","506/0","507/0","508/0","510/0","512/0","513/0","519/0","522/1","524/0","525/0","526/0","527/0","528/0","529/0","530/0","531/0","534/1","536/1","537/1","537/2","537/3","537/5","539/0","540/0","541/0","542/0","544/0","545/0","546/0","547/0","548/0","549/0","550/0","551/0","552/0","553/0","554/0","554/1","555/0","556/0","556/1","556/2","556/3","556/4","557/1","557/2","558/2","559/0","560/0","560/1","561/0","562/0","563/0","564/0","565/0","565/1","566/0","567/0","568/0","570/0","571/0","571/1","572/0","573/0","574/0","575/0","576/0","576/1","577/0","578/0","579/0","580/0","581/0","582/0","583/0","583/1","584/0","585/0","585/1","586/0","586/1","587/1","588/1","589/0","592/0","593/0","594/0","594/1","594/2","594/3","596/0","600/0","605/0","608/0","610/1","611/0","612/0","613/0","617/0","618/0","620/0","620/1","620/2","625/0","625/1","625/2","627/0","628/0","628/1","628/2","629/0","629/1","629/2","629/3","636/0","637/0","638/0","639/0","640/0","640/1","640/2","642/0","642/1","642/2","643/0","644/0","644/1","645/0","645/1","647/1","647/2","649/0","650/1","651/0","652/0","654/0","654/1","656/0","657/0","657/1","657/2","658/0","658/2","659/0","659/1","659/2","660/0","662/0","662/1","663/0","663/1","665/0","665/1","666/0","666/1","666/2","667/0","667/1","667/2","668/0","669/1","670/0","670/1","671/0","672/0","673/0","674/0","676/0","677/0","678/0","679/0","680/0","681/0","682/0","682/1","684/0","684/1","685/0","686/0","687/0","687/1","687/2","688/0","688/1","688/2","689/0","690/0","690/1","691/0","692/0","692/3","693/0","693/1","694/0","695/0","695/1","696/0","697/0","697/1","697/4","697/5","698/0","699/0","700/0","701/0","701/1","702/0","702/1","703/1","705/0","706/0","707/0","707/1","708/0","708/1","709/0","709/1","710/0","711/0","712/0","713/0","714/0","715/0","716/0","717/0","718/0","718/1","719/0","720/0","720/1","721/0","722/0","723/0","724/0","725/0","726/0","727/0","728/0","729/0","730/0","730/1","730/2","730/3","730/4","730/5","731/0","731/1","731/4","732/0","733/0","735/0","735/1","736/0","738/0","738/1","739/0","741/0","741/2","742/2","743/0","743/1","745/0","745/1","746/0","747/0","747/1","747/2","748/0","749/0","750/0","751/0","751/1","752/0","752/1","753/1","754/0","755/0","756/1","756/2","756/3","756/4","756/5","756/7","756/8","756/9","757/0","758/0","759/0","760/0","761/0","762/0","763/1","764/0","764/1","765/0","766/0","767/0","768/0","769/0","769/1","769/2","769/3","769/4","770/0","771/0","772/0","772/1","773/0","775/0","775/1","775/3","775/4","775/6","777/0","779/2","779/6","779/7","780/0","781/0","783/0","784/1","785/3","786/0","786/1","786/3","786/7","787/0","787/1","787/2","788/0","788/1","788/2","789/0","789/1","789/3","789/4","790/0","790/1","792/0","792/2","793/0","793/1","793/2","794/0","794/1","795/0","795/1","797/0","797/1","797/3","798/0","798/1","799/0","799/2","799/3","800/0","800/1","802/2","803/2","804/1","805/0","805/1","806/1","807/1","808/1","809/1","810/0","811/0","811/1","812/1","812/2","813/0","814/0","815/0","815/1","815/3","815/5","816/0","817/0","817/2","818/0","819/0","820/1","821/0","822/0","822/1","822/4","823/0","824/1","825/0","825/1","826/0","827/1","827/2","828/0","829/0","830/0","831/0","833/0","833/1","834/0","834/4","835/0","836/0","836/1","836/3","836/4","836/5","836/6","839/2","840/0","840/2","842/2","843/0","845/0","846/0","847/1","847/2","847/3","847/4","848/0","848/1","849/0","850/0","851/0","851/1","851/2","852/0","853/0","853/1","853/2","853/3","853/4","853/5","853/7","854/0","855/0","855/1","856/0","857/0","860/0","860/1","861/1","862/0","862/1","863/0","863/1","863/2","866/2","866/3","866/4","866/5","866/6","867/0","867/5","867/7","868/0","870/0","870/1","872/0","872/2","872/3","874/0","876/0","876/1","876/2","879/0","881/0","882/0","882/1","885/0"],"_same":["1/1","29/3","130/3","144/1","179/2","316/1","386/2","423/1","463/1","537/5","605/0","659/1","667/0","669/1","795/1","820/1","853/7","863/0"],"_as":["1/1","10/0","22/1","22/3","24/1","29/3","36/0","52/2","56/0","64/0","65/0","85/0","113/0","118/0","119/2","128/1","128/4","130/5","138/1","143/1","144/1","148/1","155/1","155/3","156/3","158/0","158/1","160/1","165/1","171/0","171/4","172/2","174/1","180/1","182/1","189/0","196/1","197/0","199/0","200/0","201/0","202/0","208/1","224/0","231/1","231/2","233/0","240/0","246/0","251/2","273/0","274/0","285/1","297/1","299/1","304/1","305/0","306/0","308/1","309/0","309/1","311/1","313/2","314/1","316/1","317/0","328/1","331/0","334/2","352/0","360/0","364/1","376/0","384/1","398/0","403/1","406/0","406/1","406/2","412/0","421/0","421/1","422/0","423/0","423/1","430/1","432/0","456/0","457/0","458/0","461/5","461/7","463/0","468/0","472/2","501/2","502/0","503/0","510/0","512/0","515/1","520/0","521/0","522/0","523/0","536/1","537/5","538/1","544/0","556/4","557/2","561/0","579/0","584/0","587/1","605/0","609/0","620/2","625/1","626/0","640/2","642/2","667/0","669/1","673/0","675/0","684/0","692/1","730/1","730/3","730/6","733/1","734/2","739/0","741/0","747/1","769/1","769/2","779/0","784/1","786/0","787/2","788/2","789/3","790/1","792/2","793/2","794/0","795/1","797/0","797/2","809/1","811/0","811/1","813/1","834/1","836/1","842/2","844/1","847/3","853/1","853/5","853/7","866/1","866/4","867/0","867/4","867/6","868/0","871/0","874/0"],"_using":["1/1","23/3","23/4","24/3","32/0","52/1","69/1","70/1","94/0","111/0","114/0","118/0","119/0","121/0","126/0","126/1","144/0","157/1","161/0","170/0","171/2","196/2","206/0","212/0","296/4","305/0","309/5","311/0","312/0","313/1","317/0","319/2","327/0","347/0","349/1","384/3","386/1","421/0","490/0","509/0","510/0","511/0","512/0","536/1","551/0","557/1","558/1","565/0","573/0","587/1","607/1","628/0","640/2","651/0","652/0","697/4","699/0","717/0","730/1","731/4","735/1","747/0","748/0","759/0","769/4","775/6","786/5","787/3","792/0","816/0","822/1","866/4","866/5","867/2","867/4","877/0"],"_constructor":["1/1","2/0","3/0","8/1","11/0","12/0","20/1","34/1","37/0","38/0","144/1","353/1","355/2","356/0","360/0","361/0","362/0","363/0","368/0","390/0","396/0","436/0","519/0","836/4","850/0","851/1"],"_with":["1/1","2/0","3/0","5/1","7/0","20/1","27/0","28/0","33/0","39/1","49/1","62/0","63/0","64/0","68/0","69/1","70/1","128/7","138/0","138/3","139/1","143/0","143/2","144/0","145/1","148/0","149/1","156/4","160/0","171/4","174/1","184/1","189/0","204/0","205/3","226/1","246/0","248/0","257/0","283/1","285/3","296/4","305/0","306/0","307/0","311/0","312/0","314/1","315/1","319/0","320/1","327/1","336/0","336/1","349/0","384/0","384/1","385/0","385/1","385/3","400/0","420/0","421/0","421/1","439/0","440/0","441/0","442/0","443/0","444/0","445/0","446/0","447/1","448/0","449/0","461/0","461/1","462/2","466/0","466/1","478/0","480/0","481/0","485/0","504/0","505/0","507/0","518/0","523/0","525/0","526/0","527/0","528/0","529/0","531/0","537/1","551/0","554/1","556/2","556/3","564/0","574/0","584/0","588/0","601/0","602/0","603/0","614/0","622/0","629/3","637/1","638/1","640/0","647/0","647/1","653/1","659/0","660/0","664/0","672/0","674/0","692/2","693/1","697/0","698/0","704/0","719/0","730/0","730/6","731/1","732/1","733/1","737/0","745/0","745/1","747/0","748/0","753/1","764/0","764/1","765/0","771/0","772/0","773/0","787/1","790/1","792/2","793/2","801/1","809/1","809/2","815/0","815/1","815/3","818/0","820/0","822/2","822/4","822/5","834/0","836/1","836/2","836/3","843/0","843/1","844/1","847/4","853/2","853/3","862/1","866/4","866/5","867/6","877/1","883/0"],"_and":["1/1","3/0","3/1","5/1","21/0","21/1","22/1","22/5","23/4","24/0","26/0","27/0","28/0","29/0","32/0","39/1","55/0","56/1","56/0","59/1","59/2","60/1","61/0","61/1","63/0","64/0","65/3","72/0","73/0","74/0","79/1","100/0","103/0","111/0","112/0","113/0","116/0","123/2","123/3","123/4","124/1","128/3","128/7","130/5","134/1","136/2","138/2","139/0","143/2","144/1","145/0","149/0","154/1","155/0","157/0","157/2","157/3","158/0","160/0","160/1","161/2","162/0","169/0","171/1","171/3","171/4","172/2","172/5","174/1","174/2","174/3","175/3","182/0","182/1","184/0","185/1","187/0","189/0","192/1","193/1","194/1","196/0","196/1","205/0","205/2","205/3","208/1","214/1","214/2","225/0","227/3","228/0","229/1","230/0","231/2","242/1","251/1","265/1","273/1","273/2","280/1","283/1","287/0","293/0","296/0","296/2","296/4","297/0","309/0","309/1","309/2","311/0","311/1","314/1","314/2","315/1","315/3","316/1","316/3","317/0","318/0","320/1","327/1","334/1","335/0","337/1","347/0","348/1","374/0","375/3","384/1","384/2","384/3","385/0","386/2","403/1","404/0","405/0","418/1","418/3","419/0","420/1","421/2","422/1","425/1","429/2","430/0","447/0","450/0","451/0","452/0","453/0","454/0","455/0","459/0","461/7","461/8","462/0","462/2","462/4","464/3","466/1","468/0","469/1","470/0","471/0","472/1","473/0","474/0","475/0","475/1","487/0","501/0","501/1","501/2","513/0","530/0","535/0","537/0","537/1","537/3","537/5","538/1","542/0","554/1","556/1","560/1","561/0","569/0","571/1","574/0","576/1","579/0","587/1","588/1","594/0","594/1","600/0","601/0","602/0","603/0","604/0","605/0","610/1","620/1","625/2","631/0","632/0","637/1","638/1","639/0","643/0","647/1","654/1","658/2","661/0","663/0","669/1","673/0","674/0","675/0","682/1","687/1","688/2","692/3","695/1","697/5","698/0","718/0","730/1","730/3","730/4","730/6","731/0","732/0","732/1","733/0","733/1","733/4","735/0","735/1","736/0","738/1","738/2","739/0","741/0","743/0","745/0","748/0","751/0","751/1","752/1","753/1","754/0","756/0","756/2","756/3","756/5","756/6","756/8","759/0","763/1","765/0","766/0","769/0","769/2","769/3","769/4","770/0","772/0","773/0","775/1","775/3","775/5","776/0","778/1","778/0","779/3","779/4","781/0","784/0","785/0","785/1","785/2","785/3","786/0","786/2","786/3","787/1","788/2","789/0","789/1","789/3","789/4","793/2","794/0","795/0","795/1","797/0","797/1","798/2","799/1","800/1","801/1","801/2","802/1","803/1","803/2","804/1","805/0","805/1","806/1","809/1","810/1","811/0","811/1","813/0","815/5","818/0","820/0","822/0","822/2","822/5","823/0","823/1","827/2","830/0","831/0","833/0","833/1","834/0","834/1","834/4","835/0","836/1","836/3","836/4","839/0","840/0","840/2","842/0","843/0","843/1","844/0","844/1","846/0","847/1","847/2","847/3","848/1","848/2","853/1","853/3","854/0","855/1","857/0","860/1","861/1","861/2","863/2","865/0","866/0","866/2","866/3","866/4","866/5","866/6","867/1","867/4","867/5","867/7","868/0","872/3","875/0","876/0","876/1","876/2","877/0","877/1","879/0","882/1","883/0"],"_interface":["1/1","10/0","36/0","71/0","154/0","321/1","331/0","335/1","338/0","384/0","384/1","384/2","385/0","386/0","387/0","388/0","389/0","390/0","391/0","392/0","393/0","394/0","395/0","396/0","397/0","398/0","399/0","400/0","401/0","402/0","404/0","405/0","418/0","501/1","732/1","733/1","745/1","836/3","855/0","855/1","878/0"],"_signerorprovider":["1/1"],"_passed":["1/1","2/0","3/0","48/0","57/0","110/0","158/1","328/2","345/2","397/0","412/0","538/1","620/2","623/0","739/0","746/0","755/0","759/0","769/4","851/1"],"_when":["1/1","17/0","18/0","45/0","46/0","49/1","56/0","64/0","121/0","126/0","128/2","128/4","129/1","155/2","157/4","168/0","171/0","174/2","245/0","257/0","328/1","336/0","337/2","338/0","351/0","364/1","418/0","461/0","462/2","464/3","501/0","501/1","501/2","501/3","565/0","594/3","601/1","619/1","628/0","628/1","629/0","655/0","658/1","662/0","730/1","741/0","769/4","775/4","794/0","794/1","799/0","822/3","826/0","836/4","853/2","853/4","853/7","858/0","863/2","866/3","867/4","872/0"],"_creating":["1/1","32/0","184/1","336/0","364/1","436/0","501/0","519/1","519/0","735/0","850/0","853/7","872/0"],"_attach":["1/0","5/0","39/0"],"_returns":["2/0","3/0","5/0","6/0","14/1","25/0","27/0","28/0","39/0","40/0","42/1","49/0","50/0","51/0","54/0","55/0","58/0","76/0","90/0","91/0","92/0","93/0","128/4","156/0","163/0","164/0","168/0","169/0","180/1","197/0","199/0","200/0","201/0","202/0","208/0","209/0","210/0","211/0","212/0","213/0","215/0","222/0","223/0","228/0","299/0","300/0","301/0","302/0","303/0","304/0","305/0","306/0","307/0","308/0","310/0","311/0","319/0","350/0","357/0","392/0","393/0","397/0","398/0","399/0","400/0","401/0","402/0","422/0","423/0","424/0","425/0","427/0","428/0","437/0","439/0","440/0","441/0","442/0","443/0","444/0","445/0","446/0","448/0","449/0","450/0","451/0","452/0","453/0","454/0","455/0","456/0","457/0","458/0","459/0","473/0","474/0","475/0","480/0","481/0","483/0","484/0","485/0","486/0","504/0","505/0","507/0","520/0","521/0","522/0","523/0","525/0","526/0","527/0","528/0","529/0","530/0","531/0","532/0","533/0","534/0","535/0","538/0","547/0","548/0","549/0","550/0","551/0","555/0","559/0","560/0","561/0","562/0","563/0","564/0","566/0","567/0","568/0","592/0","596/0","641/0","642/0","643/0","644/0","649/0","650/0","651/0","652/0","654/0","699/0","714/0","715/0","716/0","717/0","853/4","853/6","874/0","875/0"],"_unsigned":["2/0","28/0","55/0","537/1","537/5","675/0","676/0","677/0","678/0","679/0","680/0","681/0","682/0","685/0","697/1","883/0"],"_transaction":["2/0","3/0","3/1","9/0","24/0","24/1","24/3","25/0","28/0","29/0","29/2","35/0","52/1","52/0","53/0","53/1","55/0","56/2","65/2","65/5","69/0","70/0","128/2","128/3","168/0","169/0","171/0","171/1","171/2","171/3","171/4","172/2","172/5","202/1","202/0","203/0","211/0","212/0","213/0","213/1","214/0","214/1","214/2","215/0","227/0","227/1","227/3","246/0","247/0","248/0","249/0","255/0","256/0","257/0","258/0","262/0","263/0","265/0","266/0","267/0","268/0","269/0","270/0","271/0","272/0","273/0","273/1","274/0","275/0","276/0","277/0","278/0","279/0","280/1","280/0","281/0","281/1","282/0","283/0","283/1","284/0","285/3","286/0","287/0","288/0","289/0","290/0","291/0","292/0","293/0","295/0","296/2","304/0","305/0","306/0","308/1","310/0","310/2","311/0","311/1","315/3","315/0","316/1","316/0","398/0","401/0","405/0","412/0","413/0","414/0","415/0","416/0","417/0","427/0","501/1","625/0","627/0","628/0","628/1","629/0","629/2","629/3","675/0","676/0","677/0","678/0","679/0","680/0","681/0","682/0","683/0","684/0","684/1","685/0","686/0","687/0","687/1","688/0","688/2","689/0","690/0","691/0","692/0","692/2","693/0","694/0","695/0","695/1","696/0","697/0","697/1","697/5","783/0"],"_which":["2/0","3/0","6/1","6/4","9/0","20/0","21/0","23/1","24/3","28/0","30/0","32/0","35/0","40/1","40/4","48/0","52/3","55/0","57/0","58/0","61/1","62/0","63/0","64/0","75/0","79/1","101/0","102/0","104/3","120/0","123/0","125/0","128/1","128/5","129/0","129/1","130/4","135/0","136/0","136/1","138/2","139/0","143/2","145/0","149/0","154/1","157/2","157/3","157/4","163/0","166/0","168/0","169/0","171/1","172/4","180/0","189/0","190/0","193/1","193/2","194/1","196/0","205/2","208/1","215/0","218/0","225/0","235/0","244/0","265/1","283/0","283/1","287/0","296/0","296/4","308/0","309/3","310/0","310/2","311/0","315/1","321/1","324/0","327/0","328/0","331/0","335/0","336/0","337/0","338/0","339/0","340/0","345/1","345/2","349/1","350/0","351/0","355/0","376/1","377/1","378/1","384/0","384/2","385/1","385/3","386/1","386/2","396/0","397/0","398/0","399/0","408/0","412/0","413/0","420/1","421/1","426/0","429/0","429/1","429/2","430/0","431/0","461/5","461/7","461/8","462/2","462/3","462/6","463/1","463/2","464/0","464/4","466/0","469/0","487/0","492/0","493/0","499/0","501/3","502/0","503/0","516/0","518/0","536/0","537/1","538/1","542/0","544/0","561/0","584/0","589/0","595/0","612/0","618/0","620/2","625/0","628/0","642/2","644/1","647/0","653/1","654/1","655/0","657/1","658/2","659/1","659/2","662/1","663/0","664/0","665/1","667/0","667/2","684/0","687/1","692/2","693/1","695/1","697/1","720/1","730/1","730/4","730/5","731/0","731/1","732/1","737/0","739/0","741/0","742/0","742/2","748/0","751/1","753/0","759/0","764/1","767/0","768/0","769/1","769/2","769/4","771/0","775/3","784/0","785/3","787/1","790/1","792/0","794/1","798/1","799/0","799/2","815/5","820/0","822/4","828/0","833/0","835/0","836/0","836/3","836/4","836/6","840/2","844/1","846/0","848/0","853/0","853/2","854/0","857/0","866/0","866/1","866/5","868/0"],"_would":["2/0","27/0","28/0","54/0","119/2","184/1","213/0","244/0","373/2","374/2","399/0","427/0","428/0","462/6","463/1","464/0","464/3","537/5","618/0","663/0","669/1","692/2","786/4","786/5","786/6","797/2","867/4"],"_deploy":["2/0","3/0","9/0","35/0","129/0","159/0","281/1","283/0","390/0","396/0","427/0"],"_args":["2/0","3/0","22/0","23/0","25/0","27/0","28/0","29/0","31/0","219/0","407/0","412/0","597/0","598/0","599/0","755/0"],"_get":["2/0","50/0","79/0","141/0","144/0","156/0","163/0","187/0","188/0","199/0","200/0","201/0","202/0","203/0","204/0","208/1","208/0","209/0","210/0","211/0","299/0","301/0","302/0","303/0","304/0","392/0","393/0","394/0","395/0","422/0","423/0","427/0","428/0","560/0","561/0","714/0","715/0","763/0","767/0","768/0","788/2","799/2","828/0","830/0"],"_getdeploytransaction":["2/0"],"_unsignedtransaction":["2/0","28/0","55/0","675/0","676/0","677/0","678/0","679/0","680/0","681/0","682/0","685/0"],"_uses":["3/0","20/1","128/5","174/1","205/1","420/1","461/4","464/2","542/0","657/1","658/1","697/2","748/0","790/1","836/4","846/0"],"_signer":["3/0","6/3","6/4","6/0","11/1","12/0","25/1","32/0","37/1","38/0","40/3","40/4","40/0","52/0","53/0","64/0","65/0","66/0","67/0","68/0","69/0","69/1","70/1","133/0","134/0","163/0","166/0","167/0","168/0","169/0","170/0","171/0","296/0","296/2","297/0","298/0","299/1","299/0","300/0","301/0","302/0","303/0","304/0","305/0","306/0","307/0","308/0","310/0","311/0","312/0","314/0","314/1","314/2","315/4","315/0","316/3","316/0","317/0","328/0","328/1","329/0","330/0","759/0","833/1","834/4","861/0"],"_into":["3/0","48/0","56/0","57/0","75/0","78/1","79/0","82/0","94/2","95/0","110/0","119/0","123/1","123/4","129/0","345/2","386/2","396/0","400/1","421/0","421/1","421/3","471/0","479/0","482/0","501/2","501/3","514/0","515/0","536/1","623/0","653/0","659/2","663/0","666/2","667/2","670/1","695/1","716/0","736/0","738/0","746/0","759/0","769/0","769/4","794/0","820/0","820/1","843/1","851/1","857/0","866/5","876/2"],"_where":["3/0","56/1","184/1","194/2","203/0","204/0","337/0","337/1","345/1","353/0","466/1","471/0","564/0","663/0","692/3","739/0","779/2","788/2","851/2"],"_will":["3/0","6/1","6/4","8/0","8/1","23/0","23/3","24/1","29/2","32/0","34/0","34/1","40/1","40/4","53/1","65/4","87/0","88/0","93/0","94/0","94/1","121/0","124/1","138/2","139/0","145/0","149/0","161/2","171/4","174/3","177/0","180/0","180/2","197/1","197/2","208/1","215/0","218/0","231/2","233/1","257/0","270/0","273/1","296/3","309/1","313/2","313/0","319/2","320/1","321/1","324/0","327/1","328/1","328/2","335/1","337/0","337/2","354/1","355/1","372/0","375/3","384/2","399/1","400/1","401/1","403/1","420/2","421/2","425/1","429/2","447/1","456/1","461/5","462/5","481/1","486/1","488/1","501/2","501/3","515/1","536/1","557/2","557/0","558/2","564/0","576/1","579/1","580/2","583/1","584/1","585/1","585/2","586/1","586/2","587/1","595/0","612/0","620/1","620/2","637/1","638/1","640/1","642/2","644/1","650/1","663/1","666/2","667/2","670/1","672/0","673/0","674/0","697/4","711/0","712/0","735/1","740/0","741/2","745/1","747/2","751/1","752/1","753/0","753/1","755/0","756/5","764/1","772/1","775/3","784/1","787/1","789/3","792/1","792/2","793/1","794/1","796/0","809/1","815/2","815/4","815/5","825/1","827/2","828/0","839/0","842/2","845/0","851/1","853/4","853/5","853/7","867/5","876/0","876/1"],"_be":["3/0","3/1","8/1","21/0","23/0","23/4","24/0","24/1","24/3","27/0","28/0","29/2","31/1","34/1","49/1","53/1","54/0","55/0","56/2","58/0","60/0","60/1","61/0","64/0","65/3","65/4","69/1","70/1","75/0","94/1","102/0","103/0","112/0","116/0","119/0","119/2","123/1","123/4","124/0","125/0","126/1","128/1","128/4","129/0","129/1","130/2","130/3","132/0","138/1","138/2","139/0","143/1","143/2","145/0","148/1","149/0","156/3","158/1","161/2","165/1","171/1","172/3","172/5","174/3","174/5","175/2","177/0","180/0","181/1","182/0","184/0","189/0","189/1","192/0","193/1","193/2","194/1","197/1","197/2","202/1","205/0","205/2","213/0","213/1","214/0","214/1","217/0","218/0","224/0","230/0","231/0","231/2","233/1","241/0","242/1","251/1","257/0","265/0","265/1","268/1","273/1","273/2","283/1","285/3","296/0","297/0","299/1","304/1","309/1","309/5","313/2","315/0","315/4","316/0","316/2","320/1","324/0","324/1","327/1","328/1","334/1","335/0","336/0","337/0","339/0","340/0","345/2","347/0","354/1","355/1","359/0","359/1","361/1","368/1","373/1","373/2","374/1","374/2","375/3","386/1","386/2","396/0","397/0","398/0","399/0","399/1","400/1","401/1","406/0","406/1","418/0","421/1","421/2","422/2","425/1","430/0","430/1","431/0","436/0","461/6","461/7","461/8","462/4","462/5","462/6","463/1","467/0","472/0","472/1","472/2","481/1","486/1","488/1","501/1","502/0","503/0","514/1","515/1","516/1","519/0","537/2","537/3","537/5","538/1","542/0","557/2","561/0","576/1","588/1","594/1","594/3","601/1","604/0","628/2","637/1","638/1","640/1","642/2","644/1","645/1","653/1","655/0","661/0","662/1","663/0","663/1","667/0","667/1","673/0","684/0","687/2","692/2","692/3","693/1","697/1","697/4","735/1","737/0","738/1","739/0","740/0","741/0","741/1","741/2","742/1","743/1","746/0","751/1","752/1","753/1","755/0","775/6","784/0","784/1","786/4","786/5","786/6","786/7","787/1","788/1","788/2","789/3","790/1","792/2","793/2","794/1","799/1","799/2","800/0","802/3","809/1","809/2","812/1","813/1","815/5","816/0","817/2","821/0","822/1","823/0","825/0","825/1","827/2","828/0","839/1","840/2","843/0","844/1","845/0","847/2","847/4","851/1","853/7","856/0","860/1","861/1","861/2","867/7","872/0","872/3","876/1","876/2"],"_deployed":["3/0","59/0","200/1","235/0","385/1","835/0","866/5"],"_once":["3/0","18/0","46/0","123/1","155/4","174/3","218/0","227/2","274/0","313/2","462/0","557/2","711/0","712/0","756/7","756/9","835/0"],"_mined":["3/0","3/1","65/5","171/3","210/0","213/1","214/0","215/0","227/1","229/1","244/0","257/0","274/0","275/0","275/1","276/0","276/1","277/0","277/1","278/0","280/1","284/0","292/0","627/0","628/0"],"_can":["3/1","21/0","24/3","29/2","49/1","53/1","56/0","56/1","58/0","61/0","61/1","75/0","116/0","123/4","125/0","126/1","128/1","128/5","129/0","129/1","130/3","136/2","143/2","158/1","165/1","172/3","172/5","174/5","175/2","181/1","189/0","192/0","205/2","230/0","242/1","273/2","283/1","296/0","296/2","296/4","299/1","316/2","317/0","324/1","331/0","334/1","335/0","336/0","349/1","361/1","368/1","385/3","386/2","396/0","397/0","398/0","406/0","406/1","421/2","430/0","430/1","438/0","461/0","461/7","461/8","464/4","467/0","472/2","502/0","516/1","542/0","561/0","588/1","594/1","604/0","610/2","629/3","645/1","647/1","647/2","662/1","667/0","684/0","693/1","695/1","697/1","739/0","741/0","746/0","759/0","775/1","775/6","784/0","785/1","786/0","786/7","788/2","789/4","790/1","794/1","795/0","798/1","812/1","815/5","816/0","821/0","822/1","831/1","833/1","834/4","835/0","836/5","836/6","840/2","844/1","854/0","856/0","860/1","861/1","861/2","866/2","876/2"],"_found":["3/1","589/0"],"_at":["3/1","20/0","20/1","79/0","79/1","118/1","161/0","163/0","179/2","193/1","194/1","201/0","218/0","229/1","235/0","285/3","301/0","625/1","663/1","665/1","667/2","688/1","688/2","714/0","720/0","741/1","775/1","779/4","784/1","789/1","836/4","867/6","873/0","875/0"],"_deploytransaction":["3/1","9/0","35/0"],"_no":["3/1","14/1","19/1","42/1","47/1","103/0","112/0","128/5","138/2","139/0","145/0","149/0","156/1","161/2","163/1","195/1","200/1","220/1","221/1","222/1","231/2","349/0","421/2","438/0","478/0","537/3","629/3","745/1","751/1","786/7","792/2","794/0","847/4","853/1","853/6","855/1","876/2"],"_interactions":["3/1","745/0"],"_should":["3/1","23/5","24/3","60/1","103/0","112/0","132/0","154/1","154/2","185/1","187/0","193/1","193/2","194/1","194/2","268/1","273/2","315/1","315/2","316/1","316/2","321/2","336/0","359/0","462/4","462/6","502/0","556/4","558/1","579/0","628/2","653/1","658/2","661/0","663/1","718/1","756/5","756/6","756/8","760/0","761/0","762/0","763/0","767/0","768/0","775/2","775/3","775/5","784/0","793/0","799/3","802/3","809/2","817/2","825/0","840/0","853/3","867/1"],"_made":["3/1","30/0","155/2","174/2","658/2","692/2","737/0","801/0","851/1","866/1"],"_until":["3/1","56/2","171/3","215/0","699/0","738/1","801/3","817/0","822/4"],"_promise":["3/0","8/0","13/0","22/0","23/0","25/0","27/0","28/0","29/0","34/0","41/0","49/0","50/0","51/0","52/0","53/0","54/0","55/0","165/0","169/0","170/0","193/0","199/0","200/0","201/0","202/0","203/0","204/0","206/0","207/0","208/0","209/0","210/0","211/0","212/0","213/0","214/0","215/0","265/1","266/0","267/0","268/0","269/0","270/0","271/0","272/0","273/0","280/0","299/0","299/1","301/0","302/0","303/0","304/0","305/0","306/0","307/0","308/0","310/0","311/0","312/0","316/0","320/0","327/0","564/0","698/0","699/0","755/0","756/7","756/9","763/0"],"_explain":["4/0","141/1","198/0","216/0","344/0","419/0","569/0","776/0","779/1","780/0","781/0","782/0"],"_here":["4/0","48/0","57/0","98/0","111/0","114/0","216/0","419/0","569/0","780/0","791/0","858/0"],"_new":["5/0","6/0","24/1","32/0","39/0","40/0","58/0","66/0","84/0","121/0","134/0","138/0","143/0","144/0","148/0","152/0","156/0","161/0","168/0","175/0","185/0","190/0","197/0","318/0","319/0","325/0","329/0","337/0","386/0","489/0","525/0","526/0","527/0","528/0","529/0","531/0","538/0","558/0","588/0","589/0","595/0","607/0","607/1","622/0","628/0","628/1","628/2","635/0","711/0","789/3","842/2","848/1","853/3","866/3"],"_useful":["5/1","39/1","64/0","69/1","70/1","129/0","212/2","274/0","328/1","349/1","384/3","399/1","401/1","403/0","501/0","501/2","501/3","537/5","558/2","593/0","601/1","605/1","607/1","730/6","731/0","785/0","796/0","814/0","822/3"],"_if":["5/1","8/1","9/0","11/0","11/1","12/0","14/1","19/1","22/2","23/0","23/3","24/3","29/2","31/2","34/1","35/0","37/0","37/1","38/0","39/1","42/1","47/1","52/2","58/1","58/2","65/2","65/3","83/0","90/0","91/0","92/0","93/0","119/2","134/1","134/2","138/2","139/0","145/0","149/0","154/1","155/6","156/1","157/2","161/1","161/2","163/1","170/0","171/4","175/1","175/3","179/2","180/1","181/1","196/1","197/1","197/2","200/1","206/1","207/1","220/1","221/1","222/1","225/1","228/0","231/2","233/1","248/0","251/2","257/0","273/1","275/1","276/1","277/1","280/1","281/1","283/0","294/0","295/0","298/0","300/0","308/1","309/0","309/1","309/5","310/2","311/1","313/1","315/2","315/3","315/4","316/2","316/3","319/1","320/1","322/1","322/3","325/0","327/1","334/1","337/2","367/2","391/1","400/1","406/1","406/3","418/1","420/1","422/1","424/0","427/0","450/0","451/0","452/0","453/0","454/0","455/0","456/1","459/0","462/6","464/3","472/1","472/2","473/0","474/0","475/0","475/1","481/1","484/1","486/1","505/0","507/0","530/0","535/0","539/0","557/1","576/1","582/0","583/0","583/1","592/0","594/4","606/0","607/0","608/1","609/0","628/2","629/1","629/3","641/0","650/1","654/1","682/1","688/2","692/2","697/1","697/2","697/4","697/5","711/0","712/0","745/1","747/2","751/1","756/1","756/6","756/8","760/1","761/1","763/1","768/0","769/1","770/0","772/1","775/5","779/4","779/5","779/6","786/2","786/4","790/0","799/3","809/2","811/0","815/2","815/4","820/1","825/1","827/2","836/2","848/2","851/1","853/6","867/3","867/4","873/0","873/1"],"_there":["5/1","23/0","26/0","39/1","56/1","56/2","130/4","136/0","158/0","200/1","213/1","227/3","315/4","336/0","406/3","461/2","461/3","461/5","462/1","503/0","519/1","544/0","604/0","614/0","619/0","619/1","655/0","662/0","671/0","688/2","692/3","697/5","756/8","786/7","787/2","787/3","788/0","790/0","794/0","797/2","797/3","802/3","853/0","853/1","853/2","853/6","867/3","869/0","876/1","876/2"],"_are":["5/1","14/0","15/0","19/1","20/1","22/1","26/0","30/0","39/1","42/0","43/0","47/1","52/2","56/1","56/2","60/0","61/0","133/0","135/0","136/0","144/1","155/3","155/6","157/1","157/2","157/3","157/4","158/0","172/0","174/2","175/3","179/1","179/2","196/1","208/1","220/1","221/1","227/3","246/0","248/0","265/1","274/0","296/3","313/1","314/0","336/1","376/1","378/1","403/0","406/1","418/3","421/1","429/0","461/1","461/2","461/3","461/5","461/7","461/8","462/1","471/0","503/0","519/1","539/0","544/0","545/0","554/1","557/1","560/1","587/1","593/0","594/0","604/0","605/1","607/1","648/0","655/0","661/0","667/0","667/1","671/0","675/0","688/2","692/3","730/3","730/4","731/4","737/0","741/0","741/2","756/2","756/4","756/8","769/1","769/3","769/4","775/5","778/0","779/0","779/7","783/0","785/1","788/0","789/1","789/2","790/0","792/0","794/0","796/0","797/2","802/1","803/1","812/1","813/1","817/3","822/3","830/0","836/2","836/3","836/4","839/2","842/0","842/1","842/2","844/1","846/0","850/0","851/1","853/1","858/0","863/0","866/1","866/2","867/1","867/6","868/0","869/0","872/0","873/1"],"_multiple":["5/1","39/1","155/2","156/0","174/1","174/2","179/2","648/0","658/1","667/0","735/0","737/0","738/0","751/1","772/1","853/6","866/4"],"_similar":["5/1","39/1","349/0","464/3","472/0","669/0","748/0","792/2","836/2","866/6"],"_or":["5/1","5/0","6/0","7/0","13/0","22/3","24/3","29/2","31/2","32/0","33/0","39/1","39/0","40/0","41/0","49/1","53/0","58/0","58/1","58/2","84/1","84/0","93/0","102/0","104/2","106/0","108/0","123/1","123/4","124/0","126/1","128/5","128/7","129/0","130/0","130/3","130/4","136/1","138/1","143/1","143/2","148/1","155/6","156/3","158/1","159/0","162/0","163/0","165/1","171/1","172/0","175/2","189/0","190/0","192/0","206/1","207/1","210/0","242/1","250/0","251/0","251/1","251/2","265/0","266/0","295/0","296/4","297/1","308/1","311/1","339/0","340/0","349/0","351/0","354/0","357/0","362/0","365/0","367/2","370/0","378/0","382/0","384/3","386/0","386/1","394/0","401/1","403/1","415/0","418/1","418/2","418/4","420/1","422/1","425/1","425/0","431/0","432/0","456/1","461/8","464/1","466/0","466/1","467/0","470/1","472/0","474/0","476/0","477/0","488/0","505/0","507/0","571/1","588/1","594/3","606/0","607/0","619/1","620/0","624/0","629/1","638/1","640/1","642/2","645/1","655/0","667/1","682/1","697/4","698/0","710/0","730/1","730/6","739/0","742/1","746/0","751/1","756/5","756/6","756/8","763/0","775/1","775/2","779/7","784/0","786/4","789/3","795/0","797/1","797/2","798/0","813/1","817/2","822/0","822/4","823/0","831/1","836/5","836/6","839/1","840/2","844/0","847/1","847/2","847/3","847/4","856/0","858/0","867/1","867/3","867/4"],"_identical":["5/1","39/1","195/0","226/1","406/1","468/0","874/0"],"_copies":["5/1","39/1","847/1","847/2"],"_on":["5/1","6/4","17/0","22/0","24/1","39/1","40/4","45/0","48/0","52/3","56/0","57/0","59/0","59/1","65/2","65/3","65/5","126/0","130/5","136/2","143/2","155/0","159/0","182/0","182/2","196/1","212/2","213/1","217/0","225/2","227/1","227/2","235/0","248/0","273/0","273/1","273/2","296/1","316/3","337/0","350/0","384/2","385/0","429/0","429/1","435/0","462/1","462/3","462/6","501/0","594/2","619/0","654/1","654/0","672/0","692/1","692/2","711/0","712/0","730/5","731/2","732/2","733/2","734/0","747/2","769/2","769/3","775/5","778/1","784/1","785/0","788/0","788/2","789/1","789/3","797/1","798/1","815/1","833/0","835/0","836/0","836/1","836/3","836/5","840/2","853/1","853/3","856/0","859/0","862/0","866/2","867/1","867/3","867/4","872/3"],"_network":["5/1","24/1","25/0","28/0","39/1","55/0","59/0","65/2","65/3","138/0","138/1","143/0","143/1","144/0","144/1","148/0","148/1","154/0","156/0","156/1","156/3","158/1","159/0","161/0","161/2","180/2","185/0","188/0","190/0","197/0","197/2","202/1","203/0","204/0","209/0","213/0","213/1","214/0","231/1","231/2","232/0","233/0","233/1","234/0","235/0","242/1","265/0","273/1","296/0","384/2","385/0","626/0","628/0","687/1","687/2","745/0","757/0","775/0","775/3","775/4","775/5","833/1","834/4","860/0","860/1","861/1","862/0"],"_you":["5/1","39/1","56/0","65/2","136/1","136/3","138/3","139/1","145/1","149/1","159/0","296/3","313/1","325/0","464/3","464/4","557/1","594/4","730/5","731/4","735/2","736/0","747/2","775/3","783/0","790/0","790/1","793/0","794/1","795/0","798/0","798/1","798/2","799/3","831/1","835/0","836/1","836/2","836/4","836/5","836/6","844/1","848/2","867/3","867/4"],"_wish":["5/1","23/1","39/1","325/0","669/0","786/4","790/0"],"_interact":["5/1","20/1","39/1","384/0","385/0","447/1","731/1","877/1"],"_each":["5/1","39/1","78/0","120/0","155/3","157/0","162/0","174/1","174/2","196/1","217/0","219/0","247/0","248/0","251/1","293/0","339/0","340/0","345/1","347/0","353/0","356/0","384/1","385/3","397/1","406/0","466/0","466/1","514/1","516/1","556/3","594/1","625/2","640/2","653/0","653/1","687/1","712/0","716/0","730/1","730/2","730/5","735/1","735/2","737/0","738/0","756/0","756/4","767/0","768/0","779/2","779/3","786/3","790/1","793/2","801/0","810/1","811/0","817/2","818/0","866/5","868/1","871/0","872/2","872/3"],"_them":["5/1","39/1","65/3","136/1","429/2","769/2","786/2","802/1","803/1"],"_name":["5/0","7/0","8/1","22/0","23/0","25/0","27/0","28/0","29/0","31/0","33/0","34/1","39/0","94/1","107/0","116/0","117/0","118/0","138/1","143/1","148/1","158/1","205/0","205/1","205/2","206/1","207/0","207/1","217/0","218/0","219/0","220/0","221/0","222/0","223/0","231/1","231/2","233/0","233/1","266/0","307/0","313/2","313/0","316/3","354/0","373/0","406/1","406/2","406/3","409/0","414/0","418/1","503/0","542/0","555/0","556/3","557/2","557/0","564/0","603/0","620/1","719/0","763/0","769/2","770/0","771/0","772/0","773/0","792/2","822/2","822/4","822/5","826/0","851/0","851/1","851/2","852/0","863/0","871/0"],"_addressorname":["5/0","39/0","763/0"],"_but":["6/0","21/1","29/1","40/0","111/0","114/0","129/1","135/0","154/1","171/0","171/4","180/2","195/1","212/1","213/1","257/0","296/2","315/0","316/0","328/1","399/1","401/1","464/4","501/1","588/0","588/1","593/0","622/0","628/0","640/1","659/1","663/0","665/0","667/1","669/0","688/2","747/0","784/1","785/0","786/3","788/0","788/2","789/1","789/2","800/0","813/0","823/0","830/0","836/6","847/3","863/0","876/0"],"_connected":["6/0","32/0","40/0","138/0","143/0","148/0","152/0","155/1","156/0","166/0","175/0","183/0","197/0","209/0","296/4","302/0","311/1","318/0","324/0","325/0"],"_providerorsigner":["6/0","32/0","40/0"],"_by":["6/1","6/3","21/0","24/1","31/0","40/1","40/3","49/0","70/0","116/0","118/0","123/0","123/1","127/1","128/6","130/5","134/1","137/0","142/0","147/0","151/0","156/0","157/1","161/2","163/0","164/0","166/0","171/1","174/4","177/1","182/0","189/0","241/0","242/1","243/0","246/0","250/0","251/0","254/0","273/0","283/0","285/1","286/0","290/0","293/0","315/1","336/1","338/0","351/0","384/1","386/1","406/1","406/3","461/8","463/0","469/0","504/0","537/1","538/0","560/0","571/1","589/0","592/0","610/1","619/1","628/0","649/0","654/0","667/1","673/0","674/0","687/2","697/4","717/0","720/1","730/1","730/3","730/4","734/2","738/0","740/0","740/1","742/0","769/4","775/6","787/1","789/3","819/0","822/4","828/0","866/4","866/5","867/3","882/1"],"_passing":["6/1","6/3","40/1","40/3","219/0","536/1","740/1","787/1"],"_provider":["6/1","6/0","11/0","11/1","32/0","37/0","37/1","40/1","40/0","64/0","68/0","134/0","136/3","137/0","138/1","138/0","141/0","142/0","143/1","143/0","144/0","147/0","148/0","151/0","152/0","154/0","154/2","155/0","156/0","160/0","161/0","163/0","164/0","165/0","167/0","171/0","171/2","174/0","174/5","175/1","175/2","175/3","175/0","176/0","177/0","178/0","179/0","180/0","180/1","181/0","181/1","182/0","183/0","184/1","184/0","185/0","186/0","189/0","189/1","190/0","191/0","192/0","193/0","194/0","195/0","196/0","197/0","198/0","199/0","200/0","201/0","202/0","203/0","204/0","205/3","206/0","207/0","208/0","209/0","210/0","211/0","212/0","213/0","214/0","215/0","217/0","218/0","219/0","220/0","221/0","222/0","223/0","228/0","298/0","311/1","314/1","318/0","324/0","325/0","329/0","711/0","712/0","730/1","730/2","730/0","735/0","735/1","758/0","778/1","833/1","834/4","835/0","860/0"],"_downgraded":["6/1","40/1"],"_only":["6/1","21/0","23/0","29/3","31/1","40/1","128/5","135/0","157/2","157/4","171/0","174/3","182/1","218/0","219/1","228/0","246/0","285/1","285/3","295/1","300/0","309/1","315/3","328/1","336/1","376/1","406/3","421/1","450/0","451/0","452/0","453/0","454/0","455/0","459/0","461/2","461/5","473/0","474/0","475/0","530/0","534/1","535/0","576/1","631/0","632/0","633/0","647/2","661/0","720/1","742/2","769/4","786/0","786/5","793/2","802/3","820/1","822/2","835/0","840/0","848/0","852/0","853/4","860/1"],"_has":["6/1","20/0","25/1","40/1","62/0","116/0","123/3","128/3","128/8","155/4","155/6","171/1","174/3","202/0","214/2","225/0","257/0","274/0","275/1","276/1","277/1","280/1","283/0","304/0","313/2","334/1","345/1","376/0","421/1","462/0","463/2","468/0","469/0","502/2","502/3","537/5","538/1","557/2","594/1","608/0","612/0","627/0","628/0","659/2","662/1","675/0","732/0","733/0","769/2","785/0","789/0","797/0","802/0","803/0","804/0","805/0","806/0","827/2","843/1","849/0","850/1","851/0","851/2","852/0","855/0","855/1","866/1","867/3","868/1"],"_read":["6/1","21/0","29/3","40/1","90/0","328/1","618/0","800/1","835/0","860/1"],"_access":["6/1","23/4","40/1","52/3","128/7","130/0","130/1","143/2","171/4","172/3","182/1","384/2","732/4","733/4","734/2","741/3"],"_constant":["6/2","21/0","24/0","40/2","367/0"],"_calls":["6/2","40/2","59/1","165/1","316/3","560/0","828/0","851/1"],"_act":["6/4","40/4"],"_behalf":["6/4","40/4"],"_that":["6/4","8/0","11/0","11/1","12/0","13/0","14/0","15/0","22/1","27/0","28/0","29/0","31/2","34/0","37/0","37/1","38/0","40/4","41/0","42/0","43/0","53/1","56/2","60/0","65/2","65/3","79/1","83/0","100/0","103/0","112/0","116/0","119/2","121/0","124/1","128/4","128/5","135/0","155/3","155/6","157/1","158/1","171/4","174/3","176/0","186/0","196/1","205/2","208/1","213/0","213/1","227/1","227/2","231/2","242/0","242/1","244/0","251/1","251/2","257/0","259/0","265/0","273/2","274/0","278/0","283/0","288/0","291/0","292/0","299/0","299/1","314/0","337/2","345/0","359/0","386/2","404/0","405/0","415/0","420/2","421/1","421/2","426/0","427/0","428/0","434/0","435/0","460/0","461/5","462/2","462/6","463/0","463/1","464/0","464/1","464/3","468/0","501/0","502/0","542/0","558/1","564/0","588/1","594/4","605/0","608/0","612/0","629/3","640/2","642/0","643/0","644/1","647/0","648/0","667/0","667/1","667/2","675/0","717/0","718/0","730/2","730/4","730/5","735/1","735/2","741/1","741/2","779/2","779/4","779/5","779/6","785/1","786/0","788/0","789/0","789/3","792/2","796/0","797/2","799/1","827/2","833/0","842/0","842/1","842/2","848/1","852/0","853/2","855/1","863/0","882/1"],"_connect":["6/0","40/0","144/0","156/3","161/0","168/0","298/0","325/0","700/0","844/0"],"_ens":["7/0","8/1","33/0","34/1","159/0","205/0","205/2","205/3","206/0","235/0","266/0","307/0","316/3","555/0","844/1","851/1","851/0","881/0"],"_was":["7/0","8/1","9/0","11/0","11/1","12/0","33/0","34/1","35/0","37/0","37/1","38/0","48/0","57/0","167/0","171/3","186/0","195/1","213/1","242/0","275/0","276/0","277/0","278/0","281/1","284/0","285/1","288/0","291/0","292/0","293/0","295/0","346/0","421/0","421/1","427/0","462/6","576/1","614/0","619/0","621/0","628/2","644/1","663/0","664/0","665/0","665/1","667/2","692/2","792/0","843/1","850/0","851/1","853/1","853/2","866/5"],"_constructed":["7/0","33/0","836/4"],"_string":["7/0","8/0","23/3","33/0","34/0","51/0","74/0","77/0","83/0","84/1","86/0","89/0","97/0","99/0","102/0","107/0","113/0","115/0","117/0","138/1","143/1","143/2","148/1","164/0","169/0","183/0","188/0","200/0","201/0","206/0","207/0","212/0","230/1","230/2","231/1","233/0","235/0","236/0","237/0","240/0","244/0","245/0","247/0","250/0","251/0","254/0","256/0","259/0","260/0","261/0","262/0","266/0","267/0","271/0","276/0","279/0","281/0","282/0","283/0","285/0","287/0","288/0","289/0","299/0","305/0","307/0","308/0","309/0","309/2","309/5","310/0","312/0","323/0","326/0","327/0","330/0","332/0","333/0","337/1","339/0","340/0","345/1","345/2","345/0","348/0","349/1","349/0","350/0","351/0","354/0","355/0","357/0","361/0","362/0","365/0","368/0","370/0","372/1","373/2","373/0","374/0","375/3","375/0","382/0","386/0","386/1","391/1","391/0","394/0","395/0","396/0","398/0","399/0","409/0","410/0","411/0","414/0","415/0","416/0","422/0","423/0","425/0","426/0","427/0","428/0","431/0","457/0","458/0","461/8","468/0","469/0","475/0","476/0","477/0","478/0","482/0","483/0","484/0","485/0","486/0","487/0","492/0","493/0","494/0","501/2","501/3","503/0","504/0","505/0","506/0","507/0","510/0","512/0","514/0","522/0","532/0","533/0","537/0","537/1","542/0","546/0","547/0","548/0","549/0","550/0","551/0","552/0","553/0","554/0","555/0","559/0","561/0","562/0","563/0","566/0","567/0","568/0","571/0","572/0","573/0","577/0","578/0","579/0","580/0","581/0","583/0","584/0","587/0","590/0","591/0","608/0","612/0","620/2","636/0","637/0","638/0","640/0","642/0","643/0","644/0","645/0","647/0","647/1","649/0","650/0","653/1","654/0","662/0","667/0","668/0","673/0","676/0","684/0","685/0","686/0","693/0","694/0","697/0","700/0","701/0","702/0","705/0","713/0","714/0","716/0","717/0","718/0","739/0","747/0","763/0","771/0","772/0","773/0","854/0","865/0","870/1","874/0"],"_resolve":["8/0","34/0","205/3","207/0","215/0","307/0","564/0","763/0"],"_object":["8/0","9/0","20/1","23/1","34/0","35/0","59/0","75/0","138/1","143/1","143/2","148/1","156/4","168/0","171/2","171/4","225/0","228/0","231/1","248/0","283/1","300/0","345/1","345/2","350/0","357/0","358/0","362/0","363/0","365/0","366/0","370/0","371/0","382/0","383/0","386/0","386/1","406/1","429/1","432/0","435/0","459/0","462/2","466/0","466/1","473/0","474/0","475/0","475/1","491/0","514/0","515/0","516/0","516/1","536/0","538/1","556/2","556/3","558/1","601/0","622/0","641/0","683/0","836/1","836/2","850/0","855/0","855/1","856/0","857/0","862/0"],"_provided":["8/1","11/0","11/1","12/0","14/1","19/1","31/2","34/1","37/0","37/1","38/0","42/1","47/1","58/1","58/2","124/0","126/1","138/2","139/0","145/0","149/0","155/5","156/1","163/1","175/3","220/1","221/1","222/1","320/1","327/1","328/2","472/2","594/0","671/0","697/2","730/3","797/3","847/3"],"_it":["8/1","21/1","24/1","24/2","24/3","25/0","26/0","29/0","34/1","52/3","59/1","60/1","65/0","65/3","75/0","79/1","93/0","104/1","118/0","123/1","123/3","128/5","130/3","135/0","136/3","138/3","139/1","145/1","149/1","155/0","155/1","155/2","155/6","157/0","157/1","161/2","171/0","171/3","174/1","180/1","182/1","184/1","187/0","189/0","197/2","218/0","227/2","246/0","257/0","266/0","273/2","274/0","283/0","285/1","285/3","292/0","295/0","296/2","296/4","309/0","309/1","309/5","313/1","313/2","314/0","315/2","315/3","315/4","316/3","320/1","327/1","328/1","334/1","352/0","359/1","361/1","368/1","375/3","385/3","406/2","418/1","420/1","421/2","422/1","438/0","462/0","462/2","462/5","463/1","464/3","468/0","472/0","501/0","505/0","507/0","518/0","556/4","557/1","557/2","571/1","594/1","610/2","637/1","638/1","640/2","642/2","645/0","647/1","650/1","651/0","654/1","661/0","667/0","692/2","692/3","697/3","697/4","698/0","699/0","725/0","730/5","735/0","735/2","745/1","748/0","750/0","756/5","768/0","770/0","785/2","786/0","788/2","792/2","798/1","799/2","799/3","807/0","808/0","809/2","811/1","822/0","828/1","831/0","831/1","834/3","836/1","836/4","842/1","843/1","848/1","849/0","850/0","853/5","855/1","860/1","861/1","862/1","868/0","872/1","882/1"],"_equal":["8/1","34/1","315/4","375/2","450/0","456/1","606/0","667/0","687/2"],"_resolved":["8/1","8/0","34/1","34/0","177/0","316/2","756/7","756/9","763/1","851/0","851/1","851/2"],"_resolvedaddress":["8/0","34/0","851/2"],"_result":["9/0","21/0","22/0","23/0","23/3","23/4","24/2","24/3","29/0","35/0","52/3","113/0","115/1","128/4","138/2","139/0","145/0","149/0","171/4","174/3","177/0","180/1","180/2","193/2","194/2","200/1","203/0","204/0","212/0","305/0","306/0","316/2","337/0","337/2","340/0","399/0","400/1","400/0","401/0","402/0","406/0","407/0","412/0","427/0","428/0","461/5","587/1","698/0","738/0","799/1","815/1","853/5","853/7"],"_deployment":["9/0","35/0","123/3","128/1","359/0","360/0","396/0"],"_used":["9/0","22/3","23/4","29/2","35/0","49/0","49/1","53/1","58/0","60/0","61/1","104/0","111/0","114/0","116/0","118/0","123/4","128/1","128/2","129/1","134/2","138/2","139/0","143/2","145/0","149/0","156/2","157/1","157/3","161/2","163/1","165/1","172/3","172/5","174/5","175/1","179/0","181/1","182/0","184/0","189/0","189/1","191/0","192/1","195/1","197/1","205/2","219/1","224/0","227/2","231/2","240/0","242/1","243/0","281/1","283/0","283/1","285/3","286/0","293/0","296/0","296/1","305/0","306/0","313/2","315/1","316/2","322/1","322/3","324/0","335/0","336/0","337/0","338/0","351/0","359/0","398/0","418/0","427/0","447/0","461/8","463/0","464/3","484/1","491/0","502/0","503/0","513/0","516/0","542/0","544/0","556/0","557/2","560/0","561/0","565/0","584/0","588/1","593/0","594/3","604/0","627/0","628/2","642/2","644/1","655/0","662/1","667/0","667/1","682/1","684/0","692/1","692/2","695/1","697/1","697/2","697/4","709/0","746/0","751/1","753/1","756/2","767/0","768/0","769/0","769/4","778/0","779/0","783/0","785/3","790/1","799/0","812/0","812/1","813/1","815/5","821/0","827/2","844/1","849/0","860/1","861/1","861/2","872/0","872/2"],"_response":["9/0","25/0","35/0","52/0","155/5","171/0","180/2","181/0","193/2","214/0","249/0","274/0","311/0","399/0","882/1"],"_transactionresponse":["9/0","25/0","35/0","52/0","171/2","171/4","204/0","214/0","249/0","274/0","283/1","311/0"],"_abi":["10/0","20/1","22/0","32/0","36/0","48/0","57/0","335/0","337/0","338/0","339/0","340/0","341/0","342/0","343/0","344/0","345/0","345/1","345/2","346/0","353/0","384/0","385/2","386/0","386/1","386/2","403/1","418/1","565/0","836/4","836/5","836/6","844/0","866/5","876/2","878/0","879/0"],"_had":["11/1","37/1"],"_events":["13/0","14/1","19/1","41/0","42/1","47/1","52/2","58/0","196/0","208/1","216/0","221/1","224/0","225/2","227/3","388/0","776/0"],"_match":["13/0","30/0","41/0","155/6","206/1","225/0","250/0","251/0","251/1","579/0","583/1","585/1","586/1","612/0","771/0","779/2","779/5","779/6","882/1"],"_event":["13/0","14/0","14/1","15/0","16/0","17/0","18/0","19/0","19/1","24/3","30/0","31/0","31/1","41/0","42/0","42/1","43/0","44/0","45/0","46/0","47/0","47/1","196/0","216/0","217/0","218/0","219/0","220/0","221/0","222/0","223/0","226/1","227/1","230/0","351/0","353/1","354/0","355/2","356/0","364/0","364/1","365/0","366/0","388/0","393/0","395/0","400/0","403/1","404/0","407/0","408/0","409/0","410/0","418/1","418/2","710/0","847/4","856/0","866/6"],"_query":["13/0","41/0","58/0","208/1","779/0","835/0"],"_filter":["13/0","30/0","31/0","41/0","58/0","208/0","225/0","225/1","226/0","226/1","227/0","227/3","250/0","251/0","252/0","253/0","254/0","287/0","397/0","779/0","779/2","781/0"],"_queryfilter":["13/0","41/0"],"_from":["13/0","24/3","41/0","49/1","52/0","53/0","58/1","58/0","80/0","84/0","87/0","104/0","155/3","167/0","174/2","181/0","186/0","189/0","193/2","197/2","202/1","203/0","204/0","226/2","252/0","267/0","268/1","282/0","296/2","305/0","306/0","313/2","315/3","315/4","319/0","320/0","321/0","322/0","336/1","337/1","337/2","345/0","349/1","357/0","362/0","365/0","370/0","382/0","386/0","399/0","400/0","401/0","402/0","412/0","417/0","420/1","428/0","436/1","437/0","448/0","462/3","484/0","507/0","520/0","521/0","522/0","523/0","538/0","557/2","558/0","574/0","575/0","576/0","610/0","610/1","640/1","661/0","673/0","686/0","687/1","687/2","693/1","696/0","698/0","711/0","730/5","746/0","753/1","795/0","800/1","815/5","830/0","831/1","836/6","844/0","847/4","848/0","850/1","851/2","852/0","858/0","859/0","863/1","866/3","866/4","868/0","872/0"],"_block":["13/0","41/0","172/2","199/0","200/0","201/0","202/0","203/0","204/0","210/0","212/0","227/1","229/1","229/0","236/0","237/0","238/0","239/0","240/0","241/0","242/0","243/0","244/0","245/0","246/0","247/0","248/0","249/0","252/0","253/0","254/0","255/0","256/0","257/0","263/0","264/0","275/0","275/1","276/0","276/1","277/0","277/1","278/0","284/0","285/3","288/0","291/0","292/0","293/0","294/0","301/0","304/0","711/0","731/0","809/0","814/0","817/1"],"_hash":["13/0","41/0","169/0","171/0","171/1","171/2","171/4","215/0","227/0","236/0","237/0","254/0","256/0","262/0","276/0","288/0","289/0","309/4","309/5","351/0","364/1","395/0","404/0","411/0","428/0","493/0","545/0","546/0","552/0","553/0","554/0","562/0","563/0","640/2","684/0","697/1","718/0","718/1","865/0","879/0","882/0"],"_fromblockorblockhash":["13/0","41/0"],"_toblock":["13/0","41/0","253/0"],"_array":["13/0","15/0","41/0","43/0","76/0","77/0","78/0","110/0","120/0","122/0","141/0","164/0","175/2","176/0","204/0","208/0","223/0","226/0","230/2","247/0","249/0","251/2","251/0","261/0","290/0","309/3","309/5","339/0","340/0","345/1","356/0","369/0","374/0","375/3","377/0","377/1","378/0","379/0","387/0","388/0","389/0","391/1","391/0","397/0","406/0","406/2","432/0","466/0","476/0","479/0","480/0","481/0","482/0","489/0","490/0","509/0","511/0","516/2","556/3","651/0","652/0","716/0","759/0","768/0","771/0","773/0","775/3","779/6","870/0","873/0"],"_number":["14/0","22/3","27/0","42/0","49/0","50/0","54/0","82/0","85/0","87/0","88/0","93/0","95/0","96/0","102/0","105/0","138/1","143/1","148/1","177/0","179/0","180/0","181/0","199/0","202/0","210/0","211/0","213/0","222/0","222/1","229/1","231/2","234/0","238/0","239/0","241/0","242/0","243/0","255/0","258/0","263/0","264/0","268/1","268/0","269/0","270/0","272/0","273/0","275/0","277/0","278/0","284/0","286/0","291/0","292/0","293/0","301/0","302/0","303/0","304/0","306/0","359/0","378/0","417/0","429/0","433/0","434/0","437/0","439/0","440/0","441/0","442/0","443/0","444/0","445/0","446/0","448/0","449/0","450/0","451/0","452/0","453/0","454/0","455/0","456/1","456/0","457/0","458/0","459/0","461/8","462/0","462/1","463/0","463/1","463/2","464/0","468/0","469/0","495/0","496/0","497/0","498/0","499/0","500/0","502/0","505/0","507/0","508/0","518/0","520/0","521/0","522/0","523/0","525/0","526/0","527/0","528/0","529/0","530/0","531/0","534/0","535/0","537/0","537/1","537/3","540/0","541/0","585/0","586/1","586/0","609/0","652/0","663/1","663/0","677/0","682/0","687/2","687/0","688/0","689/0","691/0","692/0","695/0","704/0","706/0","707/0","708/0","709/0","710/0","715/0","756/8","760/0","761/0","762/0","786/0","787/1","820/0","820/1","853/7","864/0","866/4","875/0"],"_listeners":["14/0","15/0","19/0","42/0","43/0","47/0","219/0","220/1","221/0","222/0","222/1","223/0"],"_subscribed":["14/0","15/0","42/0","43/0"],"_total":["14/1","42/1","175/1","222/1","243/0"],"_count":["14/1","14/0","42/1","42/0","69/0","70/0","202/0","222/0","304/0","502/0","606/0"],"_all":["14/1","19/0","19/1","42/1","47/0","47/1","110/0","121/0","157/1","160/0","164/0","171/0","171/4","172/4","219/0","220/1","221/0","221/1","229/1","243/0","248/0","264/0","265/1","274/0","287/0","290/0","314/0","316/2","348/0","387/0","388/0","389/0","420/2","461/7","462/4","464/0","464/4","479/0","480/0","482/0","485/0","515/1","560/1","587/1","588/0","595/0","630/0","673/0","674/0","718/0","730/4","731/1","737/0","737/1","741/2","742/0","747/0","751/0","752/1","753/0","756/5","769/3","769/4","771/0","773/0","775/5","779/4","788/0","790/1","792/2","793/2","794/0","811/0","822/4","834/0","839/1","839/2","840/0","844/1","846/0","847/2","848/1","853/0","853/1","854/0","866/1","870/0"],"_listener":["14/0","15/0","16/0","17/0","18/0","42/0","43/0","44/0","45/0","46/0","217/0","218/0","219/0","220/0","220/1","222/0","223/0"],"_listenercount":["14/0","42/0","222/0"],"_list":["15/0","43/0","110/0","122/0","164/0","176/0","203/0","223/0","247/0","249/0","261/0","284/0","293/0","369/0","556/1","663/0","719/0","771/0","773/0","811/1","813/1","866/5","870/1"],"_unsubscribe":["16/0","19/0","44/0","47/0","58/0"],"_off":["16/0","44/0","220/0","634/0"],"_subscribe":["17/0","18/0","45/0","46/0","58/0"],"_calling":["17/0","18/0","45/0","46/0","52/3","56/0","194/2","212/2","305/0","506/0","508/0","564/0","863/2"],"_occurs":["17/0","18/0","45/0","46/0","628/1","629/1","688/2","775/4"],"_for":["19/0","22/1","22/2","22/5","23/2","23/3","23/4","25/0","30/0","31/0","32/0","47/0","50/0","54/0","59/1","60/0","61/0","65/0","65/3","65/5","69/0","75/0","81/0","82/0","84/0","99/0","104/0","104/1","105/1","106/0","108/0","109/0","116/0","119/0","122/0","123/0","123/3","124/1","129/0","130/2","130/3","130/4","136/0","138/1","138/3","139/1","143/1","145/1","148/1","149/1","154/1","155/0","157/0","159/0","160/0","165/1","168/1","171/1","171/2","171/3","178/0","179/0","181/1","182/2","188/0","192/0","196/0","196/1","196/2","202/1","205/1","212/2","213/1","214/2","215/0","217/0","218/0","220/0","220/1","221/0","222/0","223/0","225/2","229/1","247/0","248/0","251/2","252/0","253/0","254/0","261/0","268/0","280/0","293/0","296/2","309/2","310/2","312/0","316/1","316/2","318/0","321/1","323/0","324/0","326/0","328/2","329/0","331/0","336/0","337/2","349/1","354/1","356/0","373/1","373/2","374/1","374/2","375/1","375/3","377/1","378/0","378/1","379/1","390/0","392/0","393/0","394/0","395/0","397/0","398/0","399/0","399/1","400/0","401/0","401/1","402/0","403/0","403/1","405/0","406/2","418/3","421/1","425/0","425/1","434/0","437/0","460/0","461/2","461/5","462/4","462/6","463/2","464/3","472/1","501/1","519/1","520/0","521/0","522/0","523/0","537/4","537/5","543/0","556/0","556/2","558/0","561/0","570/0","571/0","572/0","574/0","575/0","576/0","577/0","578/0","580/1","593/0","600/0","605/1","625/1","625/2","629/0","629/2","629/3","631/0","632/0","633/0","635/0","636/0","637/0","638/0","643/0","647/2","653/0","657/2","658/2","659/2","660/1","665/0","665/1","666/0","667/0","668/0","670/0","671/0","678/0","679/0","680/0","681/0","682/0","684/0","687/0","688/0","689/0","690/0","691/0","692/0","692/2","693/0","694/0","695/0","701/0","702/0","707/0","708/0","713/0","717/0","730/0","730/2","730/3","730/5","730/6","731/0","731/2","732/0","732/2","733/1","733/2","734/0","735/1","735/2","738/2","741/0","743/0","747/2","748/0","752/0","754/0","756/6","757/0","758/0","762/0","772/0","773/0","775/3","785/3","786/0","786/2","786/4","786/7","789/1","789/3","792/0","792/2","793/2","797/3","798/0","798/1","799/2","800/0","812/1","813/0","814/0","815/0","819/0","821/0","825/0","829/0","830/0","831/0","831/1","834/0","836/1","839/1","840/1","842/2","843/0","843/1","844/1","847/3","847/4","850/0","853/2","853/3","855/1","860/0","862/1","863/3","866/1","866/5","867/4","867/5","869/0","870/0","872/3","876/2","880/0","881/0","882/0","885/0"],"_unsubscribed":["19/1","47/1"],"_remove":["19/0","47/0","220/0","221/0","770/0","771/0","772/0","773/0"],"_removealllisteners":["19/0","47/0","221/0"],"_meta":["20/0","23/3","48/0","57/0","308/1","738/2","836/4","844/0","855/1"],"_class":["20/0","23/3","48/0","57/0","61/1","69/1","70/1","184/0","187/0","188/0","296/1","296/4","297/0","314/2","317/0","335/1","385/0","438/0","536/1","557/2","557/0","558/2","587/1","607/1","622/0","752/0","752/1","753/0","836/3","836/4","844/1","850/1","854/0","854/1","855/1"],"_any":["20/0","21/1","22/0","29/1","29/0","31/2","58/1","58/2","111/0","114/0","115/1","116/0","127/0","128/7","130/3","158/1","165/0","171/4","182/2","186/0","187/0","193/0","205/0","212/1","224/0","225/1","226/2","227/0","230/0","231/0","250/0","251/0","251/2","273/1","287/0","296/4","310/1","315/1","315/2","316/1","324/0","345/2","348/0","361/1","368/1","377/1","406/2","418/0","421/2","422/2","424/0","429/1","461/5","466/0","469/0","488/1","490/0","538/1","556/2","560/0","564/0","588/1","610/1","620/2","634/0","645/1","654/1","661/0","672/0","673/0","674/0","688/2","698/0","699/0","735/1","740/0","741/2","756/5","756/8","771/0","775/5","779/4","779/6","789/3","795/0","799/3","815/5","820/0","836/5","844/0","847/1","847/3","847/4","848/2","851/1","866/0","867/1","870/1"],"_its":["20/0","123/4","128/5","155/6","195/1","254/0","296/4","309/0","347/0","364/1","406/1","406/3","514/0","515/0","588/0","591/0","618/0","629/0","647/0","647/1","653/0","662/0","663/0","675/0","741/2","772/0","800/1","802/0","803/0","804/0","805/0","806/0","820/0","821/0","836/4","843/0","852/0","866/1","866/5","868/1","871/0"],"_properties":["20/0","20/1","26/0","32/0","143/2","156/4","159/0","171/4","225/0","261/0","274/0","314/0","314/1","315/1","315/3","316/1","331/0","345/1","405/0","472/0","488/1","556/2","587/1","588/0","604/0","696/0","856/0","857/0"],"_determined":["20/0","134/1","161/2","334/1","819/0"],"_run":["20/0","20/1","53/0","136/1","751/1","752/1","755/0","756/9","769/4","794/0","795/0","866/2","867/1"],"_time":["20/0","20/1","129/0","180/2","195/1","218/0","285/3","706/0","707/0","708/0","732/0","756/5","784/1","785/1","786/0","786/6","787/2","787/3","788/0","788/2","789/0","789/1","796/0","867/6"],"_determine":["20/1","29/2","56/0","426/0","751/1","836/4"],"_what":["20/1","89/0","198/0","385/2","775/1","781/0","836/3","843/0","872/0"],"_methods":["20/1","21/0","24/0","26/0","32/0","48/0","57/0","157/3","159/0","172/0","172/4","172/6","205/0","216/0","224/0","324/0","380/0","430/0","438/0","519/1","558/2","667/2","756/2","836/1","836/3","836/4","836/5","840/2","853/0","853/3","854/1","855/1"],"_available":["20/1","48/0","57/0","157/2","157/4","160/0","174/0","182/1","296/1","406/3","625/0","671/0","720/0","720/1","830/0","834/0","836/3","836/5","846/0","853/1","866/1","868/0","868/1","871/0"],"_so":["20/1","60/1","157/1","194/2","195/1","246/0","299/1","325/0","385/3","386/2","406/0","406/2","418/3","421/1","438/0","462/3","462/5","463/1","464/4","587/1","594/1","628/2","647/1","730/2","742/2","775/2","775/4","786/0","786/4","788/0","789/2","789/3","789/4","794/0","794/1","812/1","813/1","822/1","835/0","847/1","853/3","867/4"],"_following":["20/1","127/0","156/4","192/1","224/0","230/0","231/0","372/0","418/0","612/0","673/0","674/0","775/6","836/6","847/1","872/2"],"_sections":["20/1","802/1","811/0"],"_describe":["20/1","176/0"],"_generic":["20/1","598/0","616/0","683/0"],"_ways":["20/1","662/1","788/0"],"_added":["20/1","103/0","112/0","125/1","844/1","848/1"],"_during":["20/1","52/1","157/1","257/0","320/1","327/1","328/2","359/0","360/0","709/0","745/0","756/5","775/3","786/0"],"_method":["21/0","22/0","23/2","23/0","24/0","25/0","26/0","27/0","28/0","29/3","29/0","160/0","165/0","172/3","185/1","193/1","194/1","227/2","310/1","311/0","313/2","313/0","319/2","325/0","347/0","399/1","401/1","421/1","447/0","464/4","587/1","661/0","763/0","764/1","767/0","768/0","834/0","850/0","850/1","853/2","853/4","853/5","853/6"],"_evaluates":["21/0"],"_small":["21/0","123/2","738/1","786/0","794/1","842/1"],"_amount":["21/0","52/0","53/0","54/0","55/0","136/2","213/0","242/0","243/0","269/0","272/0","286/0","618/0","629/0","706/0","783/0","786/0"],"_evm":["21/0","24/3","59/0","123/0","123/2","172/5","335/0","385/2","736/0"],"_code":["21/0","32/0","73/0","95/0","96/0","97/0","100/0","104/1","111/0","113/0","114/0","115/0","128/1","128/5","200/0","205/2","421/0","428/0","461/6","464/1","584/0","601/0","602/0","612/0","652/0","738/2","741/2","790/0","794/0","794/1","796/0","809/0","809/1","814/0","815/5","825/0","825/1","835/0","836/0","836/6","876/1"],"_against":["21/0","24/1","174/2","718/1","867/1","877/1"],"_current":["21/0","24/1","52/0","53/0","56/0","69/0","70/0","180/1","195/1","303/0","319/1","600/0","651/0","652/0","656/0","687/2","826/0","835/0"],"_blockchain":["21/0","21/1","24/1","56/2","136/0","229/0","324/0","399/1","462/2","544/0","624/0","731/1","734/2","835/0","836/0","843/0"],"_state":["21/0","21/1","24/1","29/0","29/1","56/0","91/0","172/5","196/1","212/1","213/1","285/0","285/3","296/0","361/0","367/1","367/2","368/0","775/5","835/0","860/1"],"_computed":["21/0","472/2","488/1","562/0","663/0","666/0","666/2","667/2","670/0","670/1","693/1","879/0"],"_asking":["21/0"],"_single":["21/0","23/0","78/1","80/0","285/3","391/1","461/2","461/3","479/0","482/0","647/1","647/2","657/1","657/2","769/2","779/5","786/0","793/2","853/4","853/7","857/0"],"_node":["21/0","24/1","29/0","65/2","73/0","74/0","94/1","95/0","96/0","97/0","99/0","100/0","101/0","102/0","103/0","104/0","105/0","106/0","107/0","108/0","109/0","110/0","111/0","112/0","113/0","114/0","115/0","116/0","117/0","118/0","119/0","120/0","121/0","122/0","134/1","154/0","160/0","161/2","162/0","163/0","170/0","171/1","172/0","182/1","182/2","574/0","575/0","576/0","577/0","578/0","579/0","580/0","581/0","582/0","583/0","584/0","585/0","586/0","587/0","588/0","589/0","629/0","629/1","797/1","797/2","826/0","834/0","866/5","867/2","867/5","880/0","882/1"],"_therefore":["21/1","116/0","128/5","463/1","468/0"],"_free":["21/1","29/1","730/5","731/2","732/2","733/2","734/0","847/1","867/3"],"_does":["21/1","29/1","60/1","65/1","65/2","89/0","111/0","114/0","119/2","168/0","171/4","180/1","206/1","207/1","212/1","310/1","315/3","319/1","364/1","367/1","385/2","642/2","668/0","741/3","786/3","786/0","797/1","799/0","809/1","811/1","813/0","848/1"],"_not":["21/1","23/1","23/5","29/0","29/1","31/2","58/1","58/2","60/0","60/1","65/1","65/2","79/1","93/0","111/0","114/0","119/2","128/5","135/0","136/1","161/1","168/0","171/3","171/4","175/1","180/1","184/0","185/0","206/1","207/1","212/1","213/1","215/0","229/1","273/2","275/1","276/1","277/1","280/1","298/0","308/1","309/3","310/1","310/2","311/1","313/2","315/0","315/3","316/0","319/1","322/1","322/3","334/2","364/1","367/1","377/1","378/1","384/2","385/2","399/1","400/1","401/1","447/1","462/3","462/4","462/6","462/0","475/1","522/1","556/4","557/2","558/1","576/1","579/1","580/2","584/1","585/2","586/2","587/1","588/1","594/3","605/0","605/1","606/0","607/0","608/1","609/0","613/0","617/0","621/0","628/0","634/0","642/2","653/1","654/1","661/0","665/0","668/0","675/0","697/1","701/2","702/2","730/4","731/4","753/1","756/4","756/6","756/8","763/1","769/3","779/4","785/0","786/3","787/3","788/0","789/3","797/1","799/0","799/3","809/1","811/1","813/0","815/4","826/0","840/2","847/3","848/1","870/1","872/0"],"_require":["21/1","23/5","124/1","162/0","208/1","212/1","384/2","544/0","558/1","594/4","647/0","769/2","789/3","839/0","840/2","867/5"],"_ether":["21/1","212/1","314/1","360/0","461/3","461/5","494/0","499/0","501/0","501/1","501/2","502/2","502/3","505/0","506/0","507/0","508/0","625/1","688/1"],"_cannot":["21/1","24/2","56/2","91/0","212/1","296/2","297/0","328/0","436/0","519/0","669/0","813/1","840/2"],"_make":["21/1","75/0","205/2","314/1","462/3","601/0","625/0","750/0","756/8","775/1","775/2","784/0","787/0","871/0","876/1"],"_changes":["21/1","775/0","789/3","791/0","794/1","795/0","848/2","855/0","866/3"],"_type":["22/0","22/2","23/0","108/0","130/4","134/1","134/0","230/0","265/1","337/1","355/0","356/0","369/0","372/0","373/0","374/0","375/0","375/2","376/0","377/0","378/0","379/0","381/0","382/0","383/0","384/1","391/1","561/0","564/0","566/0","567/0","568/0","620/0","866/5","871/0"],"_depends":["22/0"],"_values":["22/1","30/0","119/2","180/2","205/0","257/0","336/1","339/0","396/0","397/0","398/0","399/0","400/0","401/0","402/0","404/0","406/1","407/0","412/0","429/0","429/2","430/0","430/1","447/0","461/4","472/2","491/0","501/0","539/0","556/2","559/0","560/1","562/0","566/0","567/0","568/0","610/1","619/0","675/0","769/3","771/0","773/0","799/2","872/0","876/0","882/1"],"_have":["22/1","52/3","65/3","128/0","135/0","157/2","182/1","207/1","278/0","285/1","292/0","295/1","316/2","319/1","319/2","328/2","331/0","385/1","461/8","464/3","564/0","625/1","642/1","658/2","659/1","665/0","667/0","668/0","688/1","695/1","730/4","735/0","742/0","747/0","747/2","752/1","779/2","783/0","789/1","789/4","792/1","802/1","803/1","813/0","835/0","836/5","848/0","848/1","853/7","854/0","854/1","857/0","863/0","867/3","867/4","867/6","871/0"],"_simple":["22/1","59/1","123/2","166/0","205/1","328/0","536/0","594/0","732/1","735/0","745/0","746/0","769/1","796/0","800/0","813/0","815/0","823/0","842/0","866/1"],"_meaning":["22/1","659/1"],"_javascript":["22/1","22/2","22/3","345/2","350/0","429/0","434/0","435/0","456/0","461/4","534/0","534/1","609/0","794/0","800/0","806/0","815/0","825/1","828/1","836/1","844/0","867/6"],"_types":["22/1","23/1","312/0","339/0","340/0","348/0","349/0","350/0","351/0","375/1","385/3","501/2","556/3","558/0","559/0","560/1","560/0","561/0","562/0","564/0","566/0","567/0","568/0","619/1","643/0","793/1","863/0","866/5"],"_fairly":["22/1","132/0","133/0","558/1","789/3","839/0"],"_straight":["22/1","732/1","876/1"],"_forward":["22/1","206/1","732/1","876/1"],"_strings":["22/1","391/1","501/0","536/1","537/0","538/1","646/0","647/0","647/1","647/2","648/0","655/0","667/0","781/0"],"_booleans":["22/1"],"_returned":["22/1","22/4","22/5","79/1","155/3","171/2","174/3","186/0","206/1","207/1","222/1","280/1","391/1","515/1","697/1","710/0","756/7","756/9","872/2","873/1"],"_numbers":["22/2","429/0","429/1","434/0","461/0","461/4","461/7","534/1","822/2","822/5","872/0"],"_safe":["22/2","350/0","429/0","434/0","456/1","462/3","464/4","604/0","609/0","667/1","775/5","844/0","866/0"],"_range":["22/2","429/0","434/0","466/0","466/1","666/0"],"_less":["22/3","172/0","172/4","246/0","456/1","586/1","788/2","875/0"],"_than":["22/3","29/0","227/2","456/1","463/1","481/1","486/1","522/1","537/3","618/0","625/0","648/0","666/1","699/0","787/0","792/2","875/0"],"_bits":["22/3","446/0","518/0","537/1","537/3","537/5","540/0"],"_such":["22/3","52/2","156/3","158/1","165/1","172/2","189/0","233/0","297/1","299/1","308/1","311/1","314/1","331/0","334/2","352/0","432/0","501/2","587/1","620/2","626/0","642/2","730/1","730/6","739/0","741/2","769/1","769/2","776/0","795/1","797/0","797/2","842/2","866/4","867/6"],"_int24":["22/3"],"_uint48":["22/3"],"_normal":["22/3","23/3","64/0","184/1","345/2","795/1","797/2","805/0","836/1"],"_otherwise":["22/4","29/3","103/0","112/0","119/2","192/0","231/2","265/0","391/1","667/0","697/2","756/3","756/4","769/1","811/0","847/4","872/1"],"_bignumber":["22/4","27/0","50/0","54/0","199/0","211/0","213/0","242/0","243/0","269/0","270/0","272/0","286/0","293/0","301/0","303/0","306/0","359/0","417/0","429/1","429/2","429/0","430/0","433/0","436/0","436/1","437/0","438/0","439/0","440/0","441/0","442/0","443/0","444/0","445/0","446/0","448/0","449/0","450/0","451/0","452/0","453/0","454/0","455/0","456/0","457/0","458/0","459/0","462/2","462/4","462/0","464/4","495/0","496/0","497/0","498/0","499/0","500/0","501/2","507/0","508/0","688/0","689/0","691/0","760/0","761/0","849/0","850/0","864/0"],"_bytes":["22/5","23/4","93/0","309/0","309/1","309/2","309/3","420/0","432/0","466/0","467/0","473/0","474/0","475/1","479/0","480/0","481/0","481/1","482/0","483/0","484/0","485/0","486/0","486/1","487/0","488/0","489/0","492/0","493/0","510/0","512/0","515/0","521/0","546/0","547/0","548/0","549/0","550/0","554/1","575/0","637/1","638/1","647/0","647/1","647/2","648/0","649/0","650/1","651/0","654/0","663/0","663/1","665/0","672/0","673/0","674/0","680/0","690/0","696/0","737/0","781/0","785/3","873/0","873/1"],"_both":["22/5","501/1","718/0","789/3","868/0","883/0"],"_fixed":["22/5","447/0","518/0","520/0","521/0","522/0","523/0","525/0","526/0","527/0","528/0","529/0","530/0","531/0","535/0","536/0","537/1","537/5","538/0","539/0","540/0","541/0","542/0","543/0","619/1","785/3","786/0"],"_length":["22/5","96/0","108/0","128/7","130/4","130/5","378/0","406/2","466/1","475/1","475/0","481/0","481/1","483/0","484/1","486/0","486/1","489/0","513/0","554/1","647/0","647/1","650/1","667/0","668/0","737/0","785/3"],"_dynamic":["22/5","378/0"],"_datahexstring":["22/5","74/0","83/0","102/0","126/1","169/0","200/0","201/0","212/0","230/2","236/0","237/0","240/0","247/0","251/0","254/0","256/0","260/0","261/0","262/0","271/0","276/0","279/0","287/0","288/0","289/0","305/0","310/0","326/0","333/0","339/0","394/0","395/0","396/0","397/1","398/0","399/0","420/0","458/0","467/0","468/0","471/0","474/0","475/1","477/0","482/0","483/0","484/0","486/0","488/0","493/0","514/0","515/1","546/0","547/0","548/0","549/0","550/0","551/0","554/0","555/0","562/0","563/0","566/0","567/0","568/0","577/0","578/0","579/0","580/0","584/0","590/0","591/0","636/0","637/0","638/0","640/0","644/0","645/0","650/0","684/0","693/0","694/0","697/0","718/0","874/0"],"_m":["22/0","23/0","25/0","27/0","28/0","29/0","31/0","123/0","613/0","615/0","619/0","620/0","621/0","622/0","623/0","628/0","629/0","665/0","805/0","847/0","871/0"],"_e":["22/0","23/0","25/0","27/0","28/0","29/0","31/0","64/0","159/0","205/0","601/0","602/0","613/0","614/0","615/0","616/0","617/0","618/0","619/0","620/0","621/0","622/0","623/0","624/0","625/0","626/0","627/0","628/0","629/0","630/0","633/0","664/0","665/0","666/0","667/0","668/0","669/0","670/0","739/0","742/0","802/0","803/0","804/0","805/0","806/0","807/0","808/0","810/0","851/0","871/0","881/0"],"_t":["22/0","23/0","25/0","27/0","28/0","29/0","31/0","613/0","615/0","617/0","619/0","620/0","621/0","623/0","624/0","625/0","626/0","628/0","629/0","662/0","665/0","666/0","669/0","670/0","671/0","781/0","802/0","803/0","804/0","805/0","806/0","809/0","810/0","847/0","871/0"],"_h":["22/0","23/0","25/0","27/0","28/0","29/0","569/0","574/0","575/0","576/0","588/0","589/0"],"_o":["22/0","23/0","25/0","27/0","28/0","29/0","343/0","345/0","601/0","602/0","613/0","614/0","615/0","616/0","617/0","618/0","624/0","626/0","627/0","631/0","633/0","634/0","665/0","666/0","667/0","668/0","669/0","670/0","781/0","809/0","810/0"],"_d":["22/0","23/0","25/0","27/0","28/0","29/0","569/0","574/0","575/0","576/0","588/0","589/0","613/0","617/0","620/0","623/0","625/0","627/0","628/0","629/0","630/0","658/0","660/0","664/0","669/0","781/0","872/0"],"_n":["22/0","23/0","25/0","27/0","28/0","29/0","31/0","159/0","205/0","343/0","345/0","462/0","463/0","601/0","602/0","613/0","616/0","617/0","618/0","619/0","620/0","621/0","622/0","623/0","624/0","625/0","626/0","627/0","628/0","629/0","631/0","632/0","657/0","658/0","659/0","660/0","665/0","666/0","667/0","668/0","669/0","732/0","806/0","807/0","808/0","809/0","851/0","871/0","872/0","881/0"],"_a":["22/0","23/0","25/0","27/0","28/0","29/0","31/0","123/0","136/0","139/0","145/0","149/0","157/0","161/0","341/0","342/0","343/0","345/0","346/0","421/0","437/0","478/0","480/0","481/0","483/0","484/0","485/0","486/0","487/0","488/0","510/0","512/0","515/0","521/0","547/0","548/0","549/0","550/0","575/0","617/0","619/0","620/0","621/0","623/0","624/0","628/0","629/0","632/0","649/0","654/0","664/0","666/0","670/0","696/0","730/0","732/0","739/0","742/0","806/0","807/0","808/0","809/0","840/0","869/0","871/0"],"_overrides":["22/0","23/0","25/0","27/0","28/0","29/0","49/0","50/0","51/0","52/0","53/0","54/0","55/0"],"_always":["23/0","94/1","174/2","345/1","464/4","637/1","638/1","692/3","697/3","789/1","789/2","850/0","853/7"],"_even":["23/0","464/2","468/0","647/0","737/0","786/6"],"_value":["23/0","31/2","52/1","52/2","83/0","84/0","85/0","101/0","102/0","103/0","108/0","110/0","112/0","119/2","120/0","126/1","186/0","187/0","201/0","202/1","226/0","227/0","242/1","251/2","272/0","304/1","312/0","320/1","327/1","337/1","360/1","406/0","406/1","406/2","417/0","422/2","429/2","438/0","439/0","440/0","441/0","442/0","443/0","444/0","445/0","446/0","448/0","449/0","450/0","451/0","452/0","453/0","454/0","455/0","456/0","456/1","457/0","458/0","461/5","462/3","466/0","470/0","470/1","478/0","495/0","496/0","497/0","498/0","499/0","500/0","501/2","504/0","505/0","506/0","507/0","508/0","520/0","521/0","522/0","522/1","523/0","525/0","526/0","527/0","528/0","529/0","530/0","531/0","534/0","534/1","535/0","538/0","560/1","560/0","564/0","603/0","607/0","609/0","612/0","620/0","620/1","620/2","625/1","643/0","663/0","663/1","670/0","681/0","691/0","699/0","739/0","755/0","756/6","769/2","771/0","772/0","779/4","781/0","801/1","801/2","828/0","853/7","866/5","872/2","872/3","874/0"],"_simplifies":["23/1","136/1","184/1","335/1"],"_frameworks":["23/1","853/3"],"_use":["23/1","23/2","94/2","113/0","121/0","128/1","130/1","136/3","154/1","154/2","155/0","158/1","187/0","188/0","194/2","195/1","205/1","211/0","242/0","269/0","285/2","297/1","321/2","325/0","335/1","384/2","426/0","429/0","436/1","461/0","462/6","464/1","552/0","553/0","579/1","580/2","584/1","585/2","586/2","642/2","701/0","701/2","702/0","702/2","718/1","745/0","747/0","747/2","759/0","760/0","761/0","762/0","763/0","784/0","786/0","792/2","795/0","797/1","798/0","817/1","829/0","833/0","835/0","836/1","836/5","836/6","840/0","843/1","847/1","847/4","853/3","866/1"],"_since":["23/1","48/0","57/0","61/0","103/0","112/0","136/1","213/1","273/2","278/0","292/0","314/1","335/1","336/0","352/0","464/1","642/2","647/2","648/0","662/1","669/0","730/4","731/4","737/0","756/5","786/3","787/2","790/1","828/1","843/1","849/0","850/0","853/7","867/6"],"_they":["23/1","61/0","155/3","179/2","185/1","196/1","208/1","298/0","308/1","310/2","311/1","336/1","385/3","403/1","675/0","730/4","731/1","732/1","733/1","775/2","775/5","786/3","786/4","789/1","789/3","842/0","844/1","850/0"],"_do":["23/1","136/1","171/3","185/0","334/2","634/0","701/2","702/2","756/8","775/2","844/1","847/1","872/0"],"_need":["23/1","28/0","136/1","185/0","335/1","336/0","399/1","401/1","429/2","447/1","579/1","580/2","584/1","585/2","586/2","642/2","647/2","662/1","775/3","789/3","794/0","798/2","836/5","855/1","876/2"],"_inspect":["23/1"],"_unwrap":["23/1"],"_simplified":["23/1","728/0","844/0"],"_functions":["23/1","23/0","29/3","154/1","389/0","403/0","418/0","420/2","430/0","461/8","462/3","462/6","464/0","464/2","545/0","565/1","600/0","671/0","785/0","830/0","853/0","853/1","853/2","853/3","853/5","854/0","854/1","863/0","863/2","869/0","872/3","882/0"],"_another":["23/2","65/4","65/5","106/0","128/0","180/0","213/1","257/0","463/1","464/0","556/4","640/1","742/1","801/3","813/1","834/0"],"_error":["23/2","23/4","194/2","298/0","315/2","319/1","422/1","456/1","475/1","481/1","486/1","594/0","600/0","601/0","601/1","602/0","603/0","606/0","607/0","608/1","609/0","610/0","610/1","612/0","614/0","616/0","624/0","626/0","628/1","629/1","629/3","633/0","650/1","654/1","654/0","662/1","662/0","663/0","664/0","665/1","665/0","666/2","666/0","667/2","667/0","668/0","669/0","670/1","670/0","671/0","672/0","673/0","674/0","688/2","697/5","704/0","706/0","710/0","740/0","756/5","756/8","763/1","765/0","766/0","815/2","815/3","815/4","853/3","854/1"],"_recovery":["23/2","426/0","853/3"],"_example":["23/3","32/0","65/5","106/0","123/3","129/2","156/3","171/1","181/1","296/2","309/2","328/2","373/2","374/2","418/3","461/2","462/6","464/3","472/1","501/1","537/4","629/3","657/2","658/2","659/2","660/1","692/2","778/0","786/2","794/0","812/1","823/1","842/2","866/5","872/3","876/2"],"_function":["23/3","52/3","94/2","187/0","283/1","309/5","316/2","336/0","337/1","345/2","353/1","354/0","355/2","356/0","367/0","369/0","370/0","371/0","389/0","392/0","394/0","398/0","399/0","401/0","402/0","403/1","405/0","413/0","414/0","415/0","416/0","418/1","418/2","418/4","418/5","421/2","546/0","565/0","620/2","623/0","653/0","654/1","662/1","663/1","663/0","666/2","667/2","670/1","697/2","748/0","775/6","828/1","856/0","863/1"],"_invalid":["23/3","422/1","603/0","619/0","620/0","626/0","662/0","663/0","664/0","672/0","673/0","674/0","756/6"],"_utf":["23/3","23/4","554/1","648/0","651/0","653/1","654/0","654/1","655/0","658/2","659/2","662/1","662/0","663/0","664/0","665/0","666/0","667/0","670/0","671/0","672/0","674/0","840/2","865/0"],"_call":["23/3","29/0","53/0","56/0","212/0","212/1","305/0","314/2","315/1","328/2","337/0","350/0","399/0","402/0","428/0","624/0","690/1","699/0","756/4","863/1"],"_above":["23/3","32/0","192/0","224/0","374/2","793/0","802/1","803/1","820/1","847/2","870/1"],"_throw":["23/3","298/0","308/1","310/2","311/1","315/2","337/2","456/1","602/0","603/0","607/0","650/1","672/0","756/6","756/8","765/0","766/0","772/1","815/3"],"_exception":["23/3","624/0","809/1"],"_allows":["23/4","59/1","64/0","119/0","121/0","129/0","130/0","157/3","165/0","171/4","182/0","196/0","205/0","273/2","421/1","429/1","518/0","642/2","667/0","730/1","735/1","736/0","738/1","738/2","739/0","742/1","787/1","813/0","862/1"],"_low":["23/4","384/2","462/3","558/1","730/3"],"_level":["23/4","123/0","123/1","128/8","335/0","337/2","384/2","462/3","558/1","611/0","661/0","735/0","849/0"],"_reason":["23/4","159/0","196/2","463/0","663/0","664/0","665/0","666/2","666/0","667/2","667/0","668/0","669/0","670/1","670/0","733/4","797/3","799/2","853/2"],"_allowing":["23/4","30/0","61/0","337/2","741/2","799/1"],"_alternate":["23/4"],"_strategy":["23/4"],"_most":["23/5","128/1","154/2","157/3","159/0","171/4","172/4","174/0","205/1","210/0","229/1","296/3","321/2","335/1","336/0","384/2","399/1","401/1","403/0","429/2","447/1","461/1","462/4","537/5","558/1","558/2","579/1","580/2","584/1","585/2","586/2","669/1","671/0","731/0","745/0","775/3","830/0","853/3","855/0","868/0","871/0"],"_developers":["23/5","240/1","241/1","242/2","245/1","285/2","293/1","335/1","384/2","384/3","399/1","401/1","403/0","462/4","558/1","558/2","579/1","580/2","584/1","585/2","586/2","593/0","669/1","775/3","784/0","867/4"],"_non":["24/0","143/2","321/1","379/1","418/1","430/0","565/0","566/0","567/0","568/0","584/0","588/1","625/2","642/1","642/2","667/0","687/1","703/0","839/0","840/2","863/1","882/0"],"_requires":["24/0","25/1","171/0","172/5","174/4","182/1","283/1","328/1","556/1","648/0","730/1","732/4","786/1","786/3","828/1"],"_signed":["24/0","28/0","55/0","214/1","296/0","310/0","426/0","447/0","537/0","537/1","537/5","538/1","539/0","554/1","556/0","556/1","642/0","643/0","675/0","692/2","860/1","861/1","883/0"],"_payment":["24/0"],"_form":["24/0","645/1","651/0","652/0","655/0","656/0","657/0","657/1","658/0","658/1","659/0","660/0","882/0"],"_fee":["24/0","734/2"],"_paid":["24/0","157/4","732/4"],"_miner":["24/0","24/1","241/0","244/0","245/0"],"_verified":["24/1","315/4","560/1","866/4","877/1"],"_every":["24/1","128/8","227/1","337/0","612/0","866/2"],"_entire":["24/1","128/5","264/0","742/2","817/0"],"_well":["24/1","158/0","160/1","274/0","384/1","538/1","544/0","625/1","673/0","733/1","787/2","790/1","792/2","794/0","834/1","853/1"],"_who":["24/1"],"_compute":["24/1","283/1","425/0","464/3","551/0","556/0","576/1","588/1","640/0","642/2","645/0","697/1","697/4","777/0","786/0"],"_after":["24/1","25/0","180/0","213/1","336/1","461/5","752/1","789/3","795/1","798/2","812/1","866/3"],"_executing":["24/1","26/0","29/0","212/0"],"_required":["24/3","27/0","52/2","54/0","129/1","136/2","171/4","202/1","213/0","241/0","265/1","304/1","315/0","316/0","316/1","331/0","384/1","385/0","462/4","556/0","556/4","618/0","629/0","731/1","737/0","745/0","788/0","790/1","842/1"],"_logged":["24/3","30/0"],"_solidity":["24/3","343/0","345/0","351/0","372/0","385/1","386/1","418/5","542/0","565/0","566/0","567/0","568/0","647/0","777/0","836/6","866/5","870/2","882/0"],"_log":["24/3","208/0","225/0","226/1","255/0","256/0","257/0","258/0","259/0","260/0","261/0","262/0","263/0","264/0","287/0","290/0","364/1","400/0","404/0","407/0","408/0","409/0","410/0","411/0","597/0","598/0","599/0","611/0","630/0","631/0","632/0","633/0","730/6","779/2","779/4","779/5","779/6","786/5"],"_then":["24/3","31/2","58/1","58/2","189/0","251/2","462/6","584/0","642/2","682/1","769/4","790/1","820/1","839/2","866/5","882/1"],"_queried":["24/3","197/2","629/0"],"_receipt":["24/3","215/0","280/0","281/0","282/0","283/0","284/0","285/0","286/0","287/0","288/0","289/0","290/0","291/0","292/0","293/0","294/0","295/0"],"_write":["24/0","26/0","52/1","90/0"],"_sent":["25/0","155/2","157/3","171/0","202/0","202/1","265/0","268/1","304/0","628/0","687/1","687/2"],"_several":["26/0","154/1","158/0","227/3","274/0","503/0","519/1","655/0","671/0","793/1","840/1"],"_options":["26/0","154/1","156/4","156/0","319/0","327/0","476/0","699/0","706/0","707/0","708/0","709/0","710/0","711/0","712/0","748/0","751/0","752/1","756/4","756/5","756/6","768/0","769/0","769/1","769/2","769/4","771/0","773/0"],"_analyze":["26/0","730/6"],"_results":["26/0","59/1","111/0","174/2","735/0","786/0","794/0","866/2"],"_without":["26/0","53/0","129/1","157/1","285/3","296/2","462/5","584/0","741/2","786/5","786/7","822/0","847/1","847/3","853/7","855/1"],"_actually":["26/0","29/1","53/0","286/0","421/1","667/2"],"_analysis":["26/0"],"_estimate":["27/0","54/0","213/0","213/1","306/0","852/0"],"_units":["27/0","54/0","503/0","505/0","507/0","884/0"],"_gas":["27/0","54/0","171/1","211/0","213/0","242/0","243/0","269/0","270/0","286/0","293/0","303/0","306/0","359/0","501/1","625/1","625/2","628/0","628/1","628/2","629/0","629/2","678/0","679/0","688/0","688/1","688/2","689/0","741/3","760/0","761/0","782/0","783/0","852/0"],"_execute":["27/0","28/0","111/0","114/0","115/0","208/1","296/0","296/4","746/0"],"_estimategas":["27/0","54/0","213/0","306/0","315/1","852/0"],"_big":["27/0","50/0","54/0","199/0","211/0","213/0","242/0","243/0","269/0","270/0","272/0","286/0","293/0","301/0","303/0","306/0","359/0","417/0","429/0","430/0","433/0","435/0","437/0","439/0","440/0","441/0","442/0","443/0","444/0","445/0","446/0","448/0","449/0","450/0","451/0","452/0","453/0","454/0","455/0","456/0","457/0","458/0","459/0","461/7","461/8","462/0","462/1","463/0","463/1","463/2","464/0","478/0","495/0","496/0","497/0","498/0","499/0","500/0","507/0","508/0","678/0","679/0","681/0","688/0","689/0","691/0","760/0","761/0","864/0"],"_represents":["28/0","78/0","100/0","104/1","106/0","232/0","251/1","323/0","326/0","345/1","404/0","438/0","502/3","502/4","536/0","670/0","675/0"],"_submitted":["28/0","55/0"],"_populate":["28/0","55/0","171/2","171/4","310/1","316/0"],"_populatetransaction":["28/0","55/0","311/0","315/1","316/0"],"_tx":["28/0","55/0","215/0","697/0"],"_unsignedtx":["28/0","55/0"],"_rather":["29/0","463/1","787/0"],"_change":["29/0","29/1","91/0","212/1","257/0","313/0","325/0","367/1","438/0","557/0","743/1","775/0","775/2","775/3","775/4","842/1","872/3"],"_possible":["29/0","52/3","135/0","155/1","187/0","462/3","667/0","692/2","695/1","786/0","867/0"],"_ask":["29/0"],"_pretend":["29/0"],"_changing":["29/0","296/0","298/0","792/2","795/1","822/0","860/1"],"_some":["29/2","65/4","128/4","157/4","171/3","205/3","334/2","384/3","462/4","544/0","667/1","732/0","756/6","784/0","785/0","785/1","786/0","815/0","840/2","848/0","858/0","876/0","876/1"],"_cases":["29/2","56/1","154/1","472/2","619/1","647/1","667/1","789/3","844/1","855/1","866/3","866/4","866/6","872/0","876/0","876/1","878/0","881/0"],"_fail":["29/2","629/3","815/2","815/4"],"_succeed":["29/2"],"_static":["29/0","53/0","56/0","91/0","185/1","314/1","436/1","519/1","558/2","756/2","767/0","768/0","850/1"],"_callstatic":["29/0","53/0"],"_up":["30/0","174/4","207/0","242/1","293/0","321/1","460/0","464/0","647/2","658/2","730/0","730/5","731/2","732/2","733/2","734/0","737/0","779/2","786/1","786/4","790/0","801/0","817/0","835/0","842/2","845/0","873/0"],"_topics":["30/0","225/0","251/0","261/0","287/0","397/0","400/0","400/1","776/0","777/0","779/6"],"_bloom":["30/0","287/0","779/1"],"_efficient":["30/0","779/1"],"_searching":["30/0"],"_entries":["30/0","560/1"],"_filters":["30/0","31/0","57/0","58/0","779/1","779/0"],"_optionally":["31/0","135/0","185/1","318/0","610/0","645/0","651/0","652/0","697/0","698/0","719/0","737/0"],"_filtering":["31/0","778/0"],"_additional":["31/0","32/0","130/4","135/0","157/4","168/0","171/4","172/6","182/1","196/2","601/0","602/0","642/2","705/0","741/3","768/0","786/1","820/0","848/1"],"_constraints":["31/0"],"_indexed":["31/1","261/0","348/1","352/0","376/0","466/1"],"_parameters":["31/1","124/1","158/1","356/0","369/0","373/1","374/1","376/1","378/1","379/1","407/0","412/0","429/2","623/0"],"_may":["31/1","64/0","65/2","69/1","70/1","101/0","102/0","124/0","128/7","138/1","138/2","139/0","143/1","145/0","148/1","149/0","156/3","157/1","158/1","162/0","171/1","180/2","182/1","189/1","196/2","205/2","208/1","213/1","224/0","231/0","245/0","251/1","257/0","265/1","298/0","308/1","310/2","311/1","315/0","316/0","325/0","339/0","340/0","345/2","347/0","359/1","360/0","373/1","374/1","384/3","386/1","386/2","399/1","401/1","418/0","422/2","425/1","431/0","461/6","462/6","464/1","472/0","472/1","472/2","501/1","503/0","514/1","538/1","579/0","588/1","594/3","640/1","642/1","648/0","662/1","663/0","667/1","669/0","692/3","737/0","743/1","751/1","753/1","764/1","779/2","786/2","789/3","798/2","820/0","822/5","823/0","824/1","827/1","836/5","840/2"],"_filtered":["31/1","779/4"],"_parameter":["31/2","328/1","348/0","349/0","372/0","373/0","373/2","374/0","375/0","376/0","377/1","621/0","642/2","735/1","769/2","863/0"],"_null":["31/2","58/1","58/2","79/1","128/3","171/4","206/1","207/1","250/0","251/0","251/1","275/1","276/1","277/1","280/1","281/1","283/0","324/1","354/1","359/1","373/1","374/1","377/1","378/1","379/1","647/1","647/2","667/1","682/1","701/1","702/1","760/1","761/1","779/4","812/0","812/1","817/1"],"_field":["31/2","305/0","306/0","313/2","315/4","556/3","557/2","792/2"],"_matches":["31/2","58/1","58/2","225/1","404/0","405/0","408/0","413/0","779/4"],"_v":["31/0","614/0","618/0","620/0","667/0","668/0","739/0"],"_see":["32/0","168/1","182/2","225/2","342/0","343/0","392/0","393/0","394/0","395/0","397/0","398/0","399/0","400/0","401/0","402/0","419/1","421/3","580/1","660/1","720/1","787/0","863/3","877/2"],"_addition":["32/0","227/3"],"_contact":["32/0","853/1","862/1"],"_automatically":["32/0","65/0","118/1","125/1","161/2","171/1","242/1","328/2","403/1","425/1","536/1","753/1","764/1","853/5"],"_add":["32/0","135/0","217/0","218/0","439/0","464/3","464/4","525/0","752/0","789/3","791/0","836/4","866/3","867/4"],"_defined":["32/0","123/0","464/0","538/0","538/1","739/0","822/1"],"_vapors":["32/0","61/0","63/0","64/0","72/0","73/0","94/0","123/0","123/4","127/0","128/8","135/0","138/0","143/0","148/0","152/0","154/1","156/0","157/1","161/0","171/0","174/0","175/0","185/0","189/0","190/0","197/0","205/2","296/0","313/1","318/0","319/0","320/0","321/0","322/0","329/0","337/0","338/0","348/0","349/0","350/0","351/0","357/0","358/0","362/0","363/0","365/0","366/0","370/0","371/0","382/0","383/0","386/2","386/0","422/0","423/0","424/0","425/0","426/0","427/0","428/0","437/0","459/0","462/2","462/4","464/1","464/2","464/3","473/0","474/0","475/0","476/0","477/0","478/0","479/0","480/0","481/0","482/0","483/0","484/0","485/0","486/0","487/0","488/0","489/0","490/0","491/0","492/0","493/0","494/0","495/0","496/0","497/0","498/0","499/0","500/0","504/0","505/0","506/0","507/0","508/0","509/0","510/0","511/0","512/0","514/0","515/0","546/0","547/0","548/0","549/0","550/0","551/0","552/0","553/0","554/0","555/0","557/1","558/0","566/0","567/0","568/0","570/0","574/0","575/0","576/0","590/0","591/0","592/0","594/0","594/2","595/0","600/0","612/0","635/0","642/0","643/0","644/0","645/0","649/0","650/0","651/0","652/0","654/0","656/0","657/0","658/0","659/0","660/0","664/0","665/0","666/0","667/0","668/0","669/0","670/0","672/0","673/0","674/0","696/0","697/0","698/0","699/0","720/0","720/1","721/0","722/0","723/0","724/0","725/0","726/0","727/0","728/0","729/0","730/2","736/0","738/0","745/0","745/1","787/1","789/0","789/3","792/0","793/0","798/0","830/0","831/0","839/1","839/2","843/0","843/1","846/0","848/0","853/0","858/0","859/0","860/0","861/0","863/1","863/2","865/0","866/1","867/0","867/1","867/4"],"_erc20":["33/0","34/0","35/0","36/0","37/0","38/0","39/0","40/0","41/0","42/0","43/0","44/0","45/0","46/0","47/0","49/0","50/0","51/0","52/0","53/0","54/0","55/0","58/0"],"_depend":["48/0","57/0","296/1","501/0"],"_decimal":["49/0","102/0","126/1","431/0","462/0","502/0","502/2","502/3","518/0","536/0","541/0"],"_places":["49/0","502/0","502/2","502/3"],"_erc":["49/0","50/0"],"_token":["49/0","49/1","50/0","51/0","629/3","733/4"],"_parseunits":["49/1","501/2","507/0","508/0"],"_taking":["49/1"],"_input":["49/1","356/0","407/0","412/0","501/0","753/0","789/3","840/2"],"_user":["49/1","321/1","461/8","464/0","501/0","501/1","501/2","653/0","701/0","785/0","786/2","786/5","786/7","787/0","787/3"],"_formatunits":["49/1","501/3","505/0","506/0"],"_utils":["49/1","337/0","338/0","348/0","349/0","350/0","351/0","357/0","358/0","362/0","363/0","365/0","366/0","370/0","371/0","382/0","383/0","386/0","422/0","423/1","423/0","424/0","425/0","426/0","427/0","428/0","473/0","474/0","475/0","476/0","477/0","478/0","479/0","480/0","481/0","482/0","483/0","484/0","485/0","486/0","487/0","488/0","489/0","490/0","504/0","505/0","506/0","507/0","508/0","509/0","510/0","511/0","512/0","514/0","515/0","546/0","547/0","548/0","549/0","550/0","551/0","552/0","553/0","554/0","555/0","558/0","566/0","567/0","568/0","570/0","590/0","591/0","592/0","595/0","635/0","642/0","643/0","644/0","645/0","649/0","650/0","651/0","652/0","654/0","656/0","657/0","658/0","659/0","660/0","664/0","665/0","666/0","667/0","668/0","669/0","670/0","672/0","673/0","674/0","696/0","697/0","698/0","699/0"],"_displaying":["49/1","501/0","501/3","814/0"],"_amounts":["49/1"],"_ui":["49/1","162/0","775/5"],"_decimals":["49/0","522/1","523/0","529/0","537/0","537/1","537/3","537/5","538/1","541/0"],"_balance":["50/0","199/0","214/2","301/0","501/1","501/3","733/4"],"_owner":["50/0"],"_getbalance":["50/0","199/0","301/0"],"_symbol":["51/0","494/0"],"_transfers":["52/0"],"_tokens":["52/0","53/0","54/0","55/0","629/3","733/1","867/6"],"_target":["52/0","53/0","54/0","55/0","107/0","108/0","128/5","130/2","241/0","605/0","607/0","742/1","742/0"],"_boolean":["52/1","53/0","91/0","92/0","103/0","112/0","170/0","219/0","228/0","257/0","294/0","295/0","300/0","358/0","360/0","363/0","364/0","366/0","367/0","371/0","376/0","383/0","424/0","450/0","451/0","452/0","453/0","454/0","455/0","459/0","473/0","474/0","475/0","530/0","535/0","539/0","592/0","641/0","703/0","770/0"],"_inaccessible":["52/1"],"_operation":["52/1","77/0","78/0","78/1","79/0","79/1","80/0","81/0","82/0","83/0","92/0","103/0","112/0","126/0","321/1","328/2","429/0","608/1","613/0","617/0","619/0","669/1","775/3"],"_other":["52/2","64/0","128/4","135/0","158/0","172/2","173/0","182/0","314/1","385/1","385/3","439/0","440/0","441/0","450/0","451/0","452/0","453/0","454/0","462/2","463/2","464/1","464/3","525/0","526/0","527/0","528/0","588/0","624/0","640/0","699/0","746/0","769/3","781/0","790/1","793/2","813/0","842/0","847/4","853/2","858/0","866/1"],"_techniques":["52/2","384/3","738/2"],"_chain":["52/3","59/1","138/1","143/1","148/1","227/1","231/2","234/0","273/0","273/1","302/0","584/0","626/0","682/0","682/1","692/0","692/3","695/1","697/4","697/5","836/1","836/3","836/5"],"_contracts":["52/3","159/0","212/2","385/0","385/1","501/0","836/0","862/0"],"_transfer":["52/3","52/0","53/0","54/0","55/0","58/0","409/2","410/2","414/2","416/2","418/2","418/4"],"_why":["52/3","461/0","462/0","463/0","786/0","789/3"],"_rw":["52/0"],"_performs":["53/0","74/0","123/2","206/0","605/0"],"_dry":["53/0"],"_transferring":["53/0"],"_signing":["53/0","171/3","308/1","310/2","635/0","636/0","637/0","638/0","639/0","640/0","641/0","682/1"],"_sending":["53/0","165/0","168/0","272/0","311/1","316/1","501/1","501/2","625/1"],"_preflight":["53/1"],"_check":["53/1","315/0","605/0","606/0","607/0","608/0","609/0","718/0","798/1","866/2"],"_successful":["53/1","295/0"],"_how":["54/0","157/3","225/2","336/1","384/0","461/6","704/0","776/0","777/0","781/0","787/2","820/0","836/3","866/6"],"_many":["54/0","56/1","61/0","136/0","155/1","157/2","157/3","160/1","172/0","196/2","208/1","229/1","310/2","314/1","385/1","429/0","430/0","461/0","516/0","544/0","623/0","647/1","669/0","730/5","745/1","756/8","775/3","785/1","789/1","794/1","797/0","797/2","801/2","820/0","834/1","836/5","866/6"],"_could":["55/0","213/1","285/3","799/1","850/0"],"_perform":["56/0","168/0","669/1"],"_taken":["56/0","103/0","112/0","273/2"],"_account":["56/0","65/2","163/1","164/0","165/1","170/0","172/2","214/2","296/0","299/0","304/0","305/0","306/0","317/0","323/0","331/0","334/1","625/0","625/1","629/3","687/1","688/1","692/2","747/2","748/0","759/0","762/0","769/2","861/0","861/2","877/0"],"_best":["56/0","211/0","629/0","629/2","640/2","775/1","775/4","789/4"],"_vapory":["56/0","59/0","128/0","128/2","134/2","136/0","136/1","142/0","151/0","154/0","155/0","158/0","160/0","163/0","172/0","172/4","205/0","205/1","232/0","296/0","314/1","322/1","385/0","421/0","421/1","429/0","461/0","461/5","513/0","516/0","546/0","570/0","626/0","731/0","731/1","745/0","784/0","785/0","785/1","788/0","833/0","833/1","834/0","834/4","836/0","843/0","844/0","844/1","860/0","860/1","861/0","861/1","862/0"],"_provide":["56/1","157/4","315/0","316/0","462/6","584/0","731/1","735/2","797/2","798/0","800/0"],"_false":["56/1","103/0","112/0","610/0","645/0","703/1","763/0","769/1"],"_positives":["56/1"],"_negatives":["56/1"],"_eventually":["56/2"],"_consistent":["56/2","154/0","872/0"],"_model":["56/2","600/0"],"_also":["56/2","128/5","129/1","154/1","155/0","156/3","157/2","157/4","189/1","196/2","283/1","315/2","345/2","386/2","419/1","462/6","503/0","583/1","593/0","620/1","629/3","692/2","733/0","786/3","786/7","788/2","799/2","815/5","822/3","857/0","866/3","867/6","868/1","869/0"],"_means":["56/2","128/5","461/5","647/0","667/0","730/4","741/1","836/4"],"_certain":["56/2","135/0","172/0","331/0","661/0","662/1","663/0","840/2","867/6"],"_consistency":["56/2"],"_modes":["56/2"],"_known":["56/2","328/1","582/0","583/0","583/1","775/5","853/7","866/4"],"_actual":["56/2","182/2","193/2","292/0"],"_attempted":["56/2","180/0"],"_note":["56/0","139/0","145/0","149/0","157/0","162/0","196/1","309/0","325/0","352/0","648/0","653/0","661/0","737/0","749/0","802/4","803/3","804/2","807/0","827/0","827/2"],"_estimating":["56/0","306/0","629/0"],"_fromaddress":["58/1","58/0"],"_toaddress":["58/2","58/0"],"_abstraction":["59/0","59/2","154/0","296/0","836/0","860/0","861/0","862/0"],"_bytecode":["59/0","59/2","74/0","75/0","76/0","77/0","78/0","79/0","80/0","82/0","85/0","118/1","123/1","123/2","123/4","128/1","128/3","128/4","130/4","396/0","736/0","737/0","738/0","738/1","743/0"],"_way":["59/1","155/0","195/1","421/1","655/0","667/0","667/1","741/2","745/0","779/0","786/7","789/1","789/4","830/0","833/0","848/0"],"_serialize":["59/1","513/0","516/0","697/0"],"_transactions":["59/1","65/0","65/2","65/3","172/5","202/0","203/0","204/0","243/0","246/0","247/0","248/0","249/0","268/1","273/2","284/0","285/1","293/0","295/1","296/0","296/2","304/0","304/1","317/0","401/1","687/2","860/1","861/1","861/2","876/2","883/0"],"_deserialize":["59/1"],"_their":["59/1","61/1","162/0","162/1","196/2","336/1","462/0","503/0","556/1","566/0","567/0","568/0","673/0","730/1","730/4","730/5","735/0","771/0","773/0","775/2","786/2","786/4","801/2","848/1","876/0"],"_emitted":["59/1","227/1","257/0","290/0","386/1"],"_logs":["59/1","208/0","252/0","253/0","254/0","264/0","287/0","290/0","634/0","778/0","835/0"],"_facilitates":["59/2"],"_deploying":["59/2","128/2","882/1"],"_interaction":["59/0","732/1","862/1"],"_experimental":["60/0","132/0","313/0","557/0","748/0","749/0"],"_package":["60/0","720/1","790/1","830/0","842/2","849/0","854/0","868/1"],"_features":["60/0","157/4","789/3","844/0","848/0","848/1","867/6"],"_ready":["60/0","844/1"],"_included":["60/0","171/1","246/0","260/0","284/0","285/1","287/0","288/0","291/0","293/0","295/1","304/1","463/1","587/1","594/1","594/2","772/1","799/2","815/5","839/2","847/2","866/3"],"_base":["60/0","375/0","421/1","457/0","458/0","509/0","510/0","511/0","512/0","518/0","536/0"],"_library":["60/0","71/0","154/1","189/0","336/0","338/0","430/0","462/0","462/3","462/5","462/6","463/0","463/1","463/2","464/0","464/3","593/0","594/0","594/1","594/2","720/1","730/2","750/0","789/0","789/3","790/1","793/0","831/0","843/0","843/1","845/0","846/0","866/0"],"_api":["60/1","71/0","136/0","138/2","138/3","138/0","139/0","139/1","143/2","143/0","144/0","145/0","145/1","148/0","149/0","149/1","157/0","157/1","157/2","157/4","158/1","160/0","161/0","171/0","182/0","185/0","186/0","187/0","188/0","193/0","196/1","205/2","328/1","730/0","730/1","730/2","730/3","730/4","730/5","731/1","731/2","733/2","734/0","735/1","735/2","780/0","787/1","834/0","836/3","853/3","869/0"],"_considered":["60/1","132/0","285/3","661/0","789/3"],"_stable":["60/1","655/0"],"_follow":["60/1","316/1","769/2","793/0"],"_semver":["60/1"],"_versioning":["60/1"],"_applications":["60/1","321/2","610/1","731/0","735/2","831/1","848/1"],"_requiring":["60/1"],"_specify":["60/1","143/2","157/0","158/1","159/0","193/1","194/1","225/2","313/1","384/0","464/0","501/1","557/1","628/0","629/2","692/3","697/3"],"_exact":["60/1","313/1","557/1","794/0"],"_version":["60/1","313/1","557/1","565/0","595/0","789/3","845/1","854/0","859/0","867/5","876/1"],"_needed":["60/1","119/2","135/0","184/1","246/0","248/0","315/0","315/1","316/0","316/2","336/1","601/1","618/0","798/0"],"_removed":["61/0","218/0","220/1","221/1","257/0","480/0","485/0","588/0"],"_support":["61/0","172/4","195/1","229/1","421/1","435/0","751/1","764/1","792/2","801/2","803/2","804/1","805/1","806/1","809/1","811/1","842/1","842/2","867/5"],"_brainwallets":["61/0"],"_v4":["61/0","848/0"],"_unsafe":["61/0","525/0","526/0","527/0","528/0","534/0","667/2"],"_easily":["61/0","75/0","386/2","594/1"],"_guessed":["61/0"],"_attackers":["61/0"],"_steal":["61/0"],"_funds":["61/0","61/1","625/0","775/1","799/1"],"_offered":["61/1"],"_ensure":["61/1","119/2","187/0","462/6","594/4","604/0","607/1","794/0","866/3"],"_older":["61/1","845/0","848/1","858/0"],"_systems":["61/1","642/2"],"_brain":["61/1","61/0","62/0","63/0"],"_wallets":["61/1","133/0","299/1","319/2","844/0","880/0","885/0"],"_still":["61/1","132/0","313/0","349/1","557/0","588/1","642/2","742/2","749/0","793/2","876/0"],"_recover":["61/1","337/2","426/0","644/0"],"_assets":["61/1","314/1","799/1"],"_wallet":["61/0","62/0","63/0","134/0","296/4","297/1","301/0","302/0","308/1","311/1","317/0","318/0","319/0","320/0","321/0","322/0","323/0","324/0","325/0","326/0","327/0","331/0","501/1","569/0","570/0","769/2","785/1","786/2","788/0"],"_brainwallet":["61/0","62/0","63/0"],"_generates":["62/0"],"_slightly":["62/0","162/0"],"_improved":["62/0"],"_experience":["62/0","461/5","785/0","787/2","787/0","867/4"],"_generated":["62/0","259/0","319/0","426/0","741/2","792/0","793/2","866/5","878/0"],"_mnemonic":["62/0","84/1","84/0","86/0","319/2","322/0","334/1","334/2","334/0","571/0","572/0","573/0","574/0","582/0","583/1","587/1","590/0","591/0","592/0","716/0","717/0","747/0","747/2","748/0","844/0","857/0"],"_generate":["62/0","63/0","94/0","111/0","114/0","184/1","756/2","767/0","768/0","793/1"],"_username":["62/0","63/0","701/0"],"_password":["62/0","63/0","170/0","320/0","321/0","327/0","574/0","590/0","702/0","747/0","747/1","747/2","748/0","785/3","786/1","786/2","786/3"],"_progress":["62/0","63/0","320/1","320/0","327/1","327/0","787/1","787/2","787/3","876/0"],"_callback":["62/0","63/0","194/2","194/0","195/0","337/2","787/1"],"_progresscallback":["62/0","63/0"],"_compatible":["63/0","158/0","189/0","190/0","191/0","192/0","196/0","385/1","386/1","421/1","842/0"],"_v3":["63/0"],"_earlier":["63/0"],"_legacy":["63/0","682/1","697/2","845/0"],"_generatelegacy":["63/0"],"_eip1193bridge":["64/0"],"_exposed":["64/0","182/0","462/6","464/4","745/1"],"_standard":["64/0","154/0","189/1","193/1","194/1","317/0","421/1","556/2","560/0","565/0","566/0","567/0","568/0","600/0","717/0","732/1","733/1","775/2","795/0","882/0"],"_eip":["64/0","189/1","190/0","192/0","193/0","273/0","273/1","312/0","554/0","556/0","559/0","561/0","562/0","563/0","642/2","643/0","682/1","692/1","695/1","697/2","697/4","883/0"],"_interacting":["64/0","69/1","70/1","160/0","733/1","834/0","843/0"],"_libraries":["64/0","135/0","314/1","335/0","337/2","462/1","462/2","463/1","463/2","464/1","464/3","667/1","790/1","800/0","858/0","866/4"],"_i":["64/0","136/0","139/0","145/0","149/0","157/0","341/0","342/0","343/0","345/0","346/0","421/0","613/0","615/0","617/0","619/0","620/0","621/0","622/0","624/0","625/0","627/0","628/0","629/0","631/0","632/0","664/0","665/0","669/0","730/0","732/0","751/0","802/0","803/0","804/0","806/0","809/0","840/0","847/0","869/0","880/0"],"_p1193":["64/0"],"_bridge":["64/0"],"_noncemanager":["65/0","65/1","65/3","66/0","67/0","68/0","69/0","70/0"],"_designed":["65/0","299/1","751/1","788/1","800/0","843/1"],"_manage":["65/0","196/1"],"_nonce":["65/0","66/0","67/0","68/0","69/0","70/0","171/1","202/1","214/2","240/0","268/0","283/1","304/1","316/3","627/0","628/0","677/0","687/0","762/0"],"_increasing":["65/0","786/1"],"_sends":["65/0","169/0"],"_currently":["65/1","200/1","229/1","663/0","866/1","867/1"],"_handle":["65/1","662/1","753/0","840/2","853/7"],"_re":["65/1","257/0","352/0","795/1"],"_broadcast":["65/1"],"_attempt":["65/2","421/0","624/0","667/1","786/5"],"_send":["65/2","165/0","169/0","172/3","194/0","195/0","214/0","296/0","296/2","306/0","311/0","629/3","860/1","861/1"],"_lot":["65/2","464/2","800/1"],"_control":["65/2","741/0","821/0","872/2"],"_pool":["65/2","628/1"],"_drop":["65/2","673/0","867/5","867/7"],"_your":["65/2","136/1","138/3","139/1","143/2","145/1","149/1","155/5","196/1","461/6","464/1","594/4","730/0","730/6","735/2","747/2","750/0","775/1","775/5","783/0","789/3","790/0","791/0","798/1","798/2","831/0","831/1","833/1","834/4","844/0","844/1"],"_future":["65/3","65/4","257/0","743/1","764/1","789/3","792/2","866/3"],"_nice":["65/3"],"_remembered":["65/3"],"_watched":["65/3"],"_rebroadcasting":["65/3"],"_appear":["65/3"],"_been":["65/3","155/4","155/6","174/3","257/0","274/0","275/1","276/1","277/1","278/0","280/1","292/0","313/2","376/0","557/2","564/0","627/0","628/0","675/0","732/0","733/0","752/1","848/1","849/0","850/1","854/0","854/1","857/0","866/2","867/3"],"_dropped":["65/3","155/6","208/1"],"_feature":["65/4","313/0","557/0","749/0","789/4"],"_sort":["65/4"],"_failure":["65/4","775/1"],"_mode":["65/4"],"_often":["65/5","246/0","418/5","822/0","836/6","867/4","872/0"],"_dependent":["65/5"],"_being":["65/5","67/0","157/3","213/1","229/1","305/0","306/0","556/3","594/2","605/1","610/0","622/0","627/0","786/7","787/3","866/5"],"_first":["65/5","163/1","174/2","192/1","194/2","309/5","406/3","421/1","461/0","644/1","663/0","748/0","751/1","752/1","793/0","844/1"],"_manager":["65/0","66/0","67/0","68/0","69/0","70/0"],"_create":["66/0","77/0","84/0","138/0","143/0","144/0","148/0","152/0","190/0","191/0","318/0","319/0","320/0","321/0","322/0","325/0","329/0","336/0","337/0","350/0","352/0","386/0","536/1","595/0","600/0","601/0","635/0","750/0","844/0"],"_whose":["67/0","94/1","421/1"],"_managed":["67/0","163/0","164/0"],"_associated":["68/0","307/0","752/1","847/1"],"_set":["69/0","123/2","171/4","205/0","225/0","226/0","257/0","268/1","331/0","385/3","446/0","461/5","464/0","601/0","602/0","610/0","611/0","716/0","734/2","753/0","779/2","779/4","779/5","779/6","790/1","793/2","825/0","840/0"],"_outside":["69/1","70/1","429/0","666/0"],"_settransactioncount":["69/0"],"_void":["69/0","70/0","194/0","195/0","328/0","329/0","330/0","597/0","598/0","599/0","605/0","606/0","607/0","608/0","609/0","610/0","611/0","719/0","752/0","753/0","755/0","759/0","764/0"],"_bump":["70/0"],"_increase":["70/0","136/2","788/2"],"_increasetransactioncount":["70/0"],"_application":["71/0","155/5","189/0","384/0","501/0","593/0","730/0","775/1","775/3","798/1","836/3"],"_programming":["71/0","738/2"],"_formal":["71/0"],"_specification":["71/0","312/0"],"_assembler":["72/0","123/4","127/1","128/6","736/0","738/0","739/0"],"_utilities":["72/0","75/0","384/3","544/0","593/0","594/0","745/0","745/1","750/0"],"_allow":["72/0","136/1","464/0","655/0","667/0","703/0","707/0","708/0","763/0"],"_parsing":["72/0","94/0","403/0","751/0"],"_assembling":["72/0"],"_asm":["72/0","73/0","74/0","76/0","77/0","84/0","94/0","123/0","123/1","123/4","127/0","128/8","736/0","738/0"],"_dialect":["72/0","94/0","123/0","123/4","127/0","128/8","736/0","738/0"],"_source":["72/0","95/0","96/0","97/0","100/0","225/0","299/1","319/1","386/2","790/0","792/2","799/0","823/0","840/0","844/1","866/5"],"_file":["72/0","73/0","94/0","94/2","123/4","182/0","182/1","386/2","737/0","789/3","815/0","823/0","828/1","842/2","866/5"],"_parse":["73/0","94/2","386/1","404/0","405/0","501/2","507/0","508/0","649/0","696/0","698/0","769/0"],"_format":["73/0","77/0","336/1","345/0","347/0","351/0","352/0","381/0","386/2","391/1","391/0","421/0","421/1","421/2","421/3","422/2","424/0","471/0","487/0","488/0","501/3","505/0","506/0","520/0","521/0","522/0","522/1","523/0","524/0","531/0","536/1","536/0","537/0","537/1","538/1","538/0","539/0","540/0","541/0","542/0","650/0","743/1","764/1","885/0"],"_assembly":["73/0","74/0","111/0","114/0","119/0","123/1","123/2","132/0"],"_abstract":["73/0","74/0","94/0","94/2","297/0","605/1","605/0"],"_syntax":["73/0","74/0","94/0","94/2","111/0","114/0","124/0","124/1","737/0","825/0","863/1"],"_tree":["73/0","74/0","94/0","94/2"],"_resulting":["74/0"],"_representation":["74/0","309/0","468/0","470/0","484/0","485/0","486/0","505/0","507/0","509/0","511/0","514/0","532/0","533/0","536/0","587/0","650/0","659/1","684/1"],"_assemble":["74/0","123/4","736/0","738/0"],"_data":["74/0","79/1","83/0","106/0","119/0","119/2","120/0","126/0","128/3","128/4","128/7","129/0","129/1","130/0","130/3","130/4","169/0","200/0","201/0","212/0","236/0","237/0","240/0","245/0","246/0","247/0","251/0","254/0","256/0","260/0","261/0","262/0","271/0","276/0","279/0","287/0","288/0","289/0","305/0","309/1","310/0","312/0","314/1","326/0","333/0","335/0","337/2","339/0","340/0","384/2","385/3","394/0","395/0","396/0","398/0","399/0","400/0","401/0","402/0","405/0","412/0","413/0","415/0","458/0","468/0","476/0","477/0","481/0","482/0","483/0","484/0","486/0","493/0","509/0","511/0","513/0","514/0","514/1","515/0","515/1","516/0","516/1","516/2","536/0","546/0","547/0","548/0","549/0","550/0","551/0","554/0","555/0","556/0","556/1","558/0","559/0","560/0","561/0","562/0","563/0","564/0","566/0","567/0","568/0","577/0","578/0","579/0","580/0","584/0","590/0","591/0","618/0","620/2","625/1","625/2","636/0","637/0","638/0","640/0","642/2","643/0","644/0","645/0","649/0","650/0","655/0","680/0","684/0","690/0","690/1","693/0","694/0","697/0","718/0","730/6","732/4","742/1","775/1","817/2","818/0","819/0","836/1","836/3","840/2","872/0","874/0"],"_hex":["74/0","83/0","169/0","200/0","201/0","212/0","236/0","237/0","240/0","247/0","251/0","254/0","256/0","260/0","261/0","262/0","271/0","276/0","279/0","287/0","288/0","289/0","305/0","310/0","326/0","333/0","339/0","394/0","395/0","396/0","398/0","399/0","458/0","468/0","469/0","475/0","476/0","477/0","478/0","482/0","483/0","484/0","485/0","486/0","493/0","514/0","532/0","546/0","547/0","548/0","549/0","550/0","551/0","554/0","555/0","562/0","563/0","566/0","567/0","568/0","577/0","578/0","579/0","580/0","584/0","590/0","591/0","636/0","637/0","638/0","640/0","644/0","645/0","650/0","684/0","693/0","694/0","697/0","718/0","874/0"],"_disassembler":["75/0","743/0"],"_easy":["75/0","205/0","462/3","750/0","862/1","868/0"],"_convert":["75/0","421/3","461/8","501/0","590/0","591/0","864/0"],"_examined":["75/0"],"_program":["75/0","123/1","125/0","128/0","128/2","128/4","128/5","128/7","128/8","129/0","741/0","741/1","741/2","742/2","743/0","836/0"],"_structure":["75/0","312/0","516/0","556/3","556/4"],"_operations":["76/0","77/0","78/0","123/2","123/3","205/3","229/1","296/0","296/1","296/4","316/3","328/1","331/0","335/1","429/0","429/1","429/2","438/0","447/0","461/8","462/3","544/0","605/0","731/1","797/2","855/1"],"_given":["76/0","79/0","84/0","181/1","227/1","251/2","397/0","398/0","399/0","400/0","401/0","402/0","420/1","428/0","695/1","741/0","743/0","745/1","756/6","785/3","870/0","873/0","875/0"],"_disassemble":["76/0","123/4","736/0"],"_formatted":["77/0","391/0","421/1","505/0","764/0","806/0"],"_output":["77/0","111/0","114/0","119/0","125/1","345/0","347/0","351/0","369/0","381/0","611/0","630/0","631/0","632/0","633/0","634/0","663/0","742/2","764/1","793/1","794/0","809/1","815/5"],"_formatbytecode":["77/0"],"_index":["78/0","105/0","163/0","258/0","263/0","264/0","284/0","579/0","585/0","663/0","665/1","714/0","715/0"],"_collapsing":["78/0"],"_multi":["78/0","771/0"],"_byte":["78/0","79/1","126/1","130/1","397/1","421/1","465/0","466/0","466/1","471/0","625/2","644/1","647/0","647/2","662/0","664/0","665/1","667/0","669/0","737/0","741/0"],"_push":["78/1","79/1","83/0","88/0","93/0","103/0","112/0","119/2","126/0"],"_offset":["79/0","79/1","82/0","95/0","108/0","118/1","121/0","128/7","130/1","484/0","663/0","663/1","741/3"],"_ensures":["79/1","155/6","588/1","687/1"],"_contained":["79/1","814/0"],"_within":["79/1","100/0","123/3","128/1","130/2","386/2","418/1","420/1","434/0","593/0","600/0","715/0","786/6","790/1","813/1","822/0","822/1"],"_case":["79/1","103/0","112/0","128/0","171/1","283/0","309/2","309/4","309/5","420/0","420/1","422/1","469/1","503/0","594/3","642/2","751/1","853/7","870/1","870/0","871/0","872/0","876/2"],"_getoperation":["79/0"],"_command":["80/0","123/4","162/0","736/0","745/1","746/0","750/0","751/0","751/1","752/0","753/1","756/0","769/0","769/2","769/3","769/4"],"_disassembled":["80/0","743/0"],"_stream":["80/0"],"_opcode":["81/0","83/0","84/0","85/0","86/0","87/0","88/0","89/0","90/0","91/0","92/0","93/0","109/0","110/0","124/0"],"_pushvalue":["83/0"],"_numeric":["84/0","461/4","609/0","619/0","619/1"],"_x60":["84/1"],"_push1":["84/1","84/2"],"_valueormnemonic":["84/0"],"_items":["87/0","88/0","853/6"],"_consume":["87/0","104/3","756/5","770/0","771/0","772/0","773/0","868/0"],"_stack":["87/0","88/0","101/0","104/0","104/3","126/0","130/5","131/0"],"_delta":["87/0"],"_onto":["88/0","735/1"],"_alpha":["88/0"],"_short":["89/0","205/0","647/0","647/1","786/6","850/0"],"_description":["89/0","403/1","404/0","405/0","407/0","408/0","409/0","410/0","411/0","412/0","413/0","414/0","415/0","416/0","417/0","824/0"],"_doc":["89/0"],"_true":["90/0","91/0","92/0","103/0","112/0","228/0","257/0","294/0","300/0","367/2","424/0","450/0","451/0","452/0","453/0","454/0","455/0","459/0","473/0","474/0","475/0","530/0","535/0","539/0","592/0","641/0","739/0","763/1","769/1","770/0"],"_accesses":["90/0"],"_memory":["90/0","748/0","785/3","786/0"],"_ismemory":["90/0"],"_full":["90/0","248/0","285/3","348/0","349/0","374/0","421/1","488/0","793/2","844/1"],"_isstatic":["91/0"],"_jumper":["92/0"],"_jump":["92/0","118/0","123/3","128/5","738/2"],"_isjump":["92/0"],"_ispush":["93/0"],"_root":["94/1","159/0","285/0","561/0","742/0","842/2","853/1","853/3","853/5"],"_scopenode":["94/1","121/0","122/0"],"_start":["95/0","789/4","822/5"],"_characters":["96/0","309/2","421/1","469/1","648/0","659/1","661/0","668/0","792/2","840/2","840/0"],"_end":["96/0","253/0","484/0","618/0","688/2","818/0","820/0"],"_place":["98/0","104/0","104/1","104/2","105/1","118/0","462/3"],"_diagram":["98/0"],"_showing":["98/0"],"_hierarchy":["98/0"],"_nodes":["98/0","120/0","122/0","136/1","172/4","182/0","579/0","584/0","734/2","844/0"],"_unique":["99/0","418/1"],"_tag":["99/0","199/0","200/0","201/0","202/0","212/0","229/0","252/0","253/0","301/0","304/0","870/0","870/1"],"_lifetime":["99/0"],"_process":["99/0","123/2","669/0","698/0","751/0","755/0","785/3","786/2","811/1"],"_location":["100/0","129/1","229/0","741/1"],"_valuenode":["101/0","110/0","120/0"],"_manipulate":["101/0"],"_literal":["102/0","103/0","105/0","112/0","113/0","126/0","126/1","130/5"],"_literalnode":["102/0","103/0","105/0","112/0"],"_datanode":["103/0","112/0","119/0","120/0"],"_context":["103/0","112/0"],"_verbatim":["103/0","112/0","120/0"],"_popnode":["104/0","105/0"],"_store":["104/0","647/2"],"_holder":["104/0","104/1","104/2","105/1"],"_implicit":["104/0","104/1","105/1"],"_pop":["104/0"],"_explicit":["104/2"],"_indicates":["104/3","244/0","355/0","502/0","658/2","663/0","820/0"],"_expected":["104/3","606/0","621/0","629/3","665/1","756/8","789/3"],"_position":["104/3","125/0","201/0","741/0","741/2","779/2","779/4","779/5","779/6","779/7"],"_representing":["105/0","225/0","386/0","495/0","496/0","497/0","498/0","499/0","500/0","501/2","818/0"],"_linknode":["106/0","107/0","108/0","116/0","121/0"],"_link":["106/0","107/0","108/0","130/0","130/4","130/5","189/1","594/3","778/1","790/1","792/2","801/1","828/0"],"_foo":["106/0","853/1"],"_bar":["106/0","787/1","787/2","787/3"],"_label":["107/0","118/0","125/0","742/0"],"_whether":["108/0","360/0","364/0","367/0","376/0","847/4"],"_opcodenode":["109/0","110/0"],"_operands":["110/0"],"_evaluationnode":["111/0","113/0","115/0"],"_insert":["111/0","120/0"],"_evaluation":["111/0","113/0","115/0","794/1","794/0","809/1","815/0"],"_evaluate":["113/0"],"_produce":["113/0","643/0"],"_script":["113/0","115/0","746/0","815/0"],"_executionnode":["114/0"],"_execution":["114/0","172/5","328/2","688/2","765/0","766/0","783/0"],"_ignored":["115/1","127/1","737/1","817/3","827/2"],"_labellednode":["116/0","117/0"],"_targeted":["116/0"],"_labelled":["116/0","117/0","129/1","130/1","742/1"],"_labelnode":["118/0"],"_referencing":["118/0"],"_mylabel":["118/0"],"_jumpdest":["118/1","125/1","129/1"],"_inserted":["118/1","119/0","400/1"],"_directly":["119/0","123/1","130/2","184/0","297/0","335/1","436/0","519/0","536/1","558/1","769/3","794/1","856/0","869/0","877/1"],"_mydata":["119/0"],"_padded":["119/2","486/0"],"_regarded":["119/2"],"_impact":["119/2","610/2","667/0","741/2"],"_anything":["119/2","251/1","789/3"],"_past":["119/2","618/0","663/1"],"_child":["120/0","122/0","128/5","128/7","130/3","556/4","584/0","589/0"],"_represent":["120/0","372/0","461/4","518/0","542/0","657/1","683/0"],"_piece":["120/0"],"_frame":["121/0"],"_reference":["121/0"],"_resolving":["121/0"],"_locations":["121/0"],"_myscope":["121/0"],"_scope":["121/0","122/0","128/5","128/7","128/8","130/2","130/3","742/0"],"_statements":["122/0"],"_provides":["123/0","130/4","154/1","171/0","181/0","384/1","384/2","462/4","745/0","785/2","833/0","834/3","836/3","860/0"],"_quick":["123/0","831/1"],"_high":["123/0","735/0"],"_overview":["123/0","784/0"],"_grammar":["123/0"],"_compiled":["123/1","866/5"],"_higher":["123/1","174/2","179/1","335/0","337/2","628/0","730/6","731/4","732/4","733/4"],"_language":["123/1","385/1","542/0","573/0","720/1","787/3","816/0","825/0"],"_hand":["123/1"],"_coded":["123/1"],"_needs":["123/1","336/1","793/2","832/0","836/3","844/1"],"_assembled":["123/1","125/1","741/0","742/0","742/1","742/2"],"_very":["123/2","314/0","314/1","461/1","462/2","594/1","692/3","732/0","733/0","786/0","800/0"],"_intentionally":["123/2","594/1","748/0"],"_closely":["123/2","738/0"],"_related":["123/2","182/2","316/3","854/0","857/0"],"_underlying":["123/2","337/1","462/5"],"_include":["123/3","172/2","245/0","463/2","556/4","595/0","620/1","620/2","667/1","705/0","720/1","738/2","854/0"],"_embedding":["123/3","128/1"],"_programs":["123/3","742/0"],"_bootstrap":["123/3"],"_runtime":["123/3","128/1","836/4"],"_embedded":["123/3","128/0","128/5","129/0"],"_computing":["123/3","351/0","799/0","865/0","877/0"],"_necessary":["123/3","154/1","658/1","697/1","800/0"],"_offsets":["123/3","741/2","743/0"],"_line":["123/4","162/0","736/0","746/0","750/0","751/0","769/0","769/2","769/3","769/4","802/1","803/1","809/2","811/0","815/1","817/2","818/0","822/4"],"_human":["123/4","233/0","342/0","346/0","348/0","348/1","386/2","391/1","736/0","743/1","836/6","844/0"],"_readable":["123/4","233/0","342/0","346/0","348/0","386/2","391/1","501/0","736/0","743/1","836/6","844/0"],"_ish":["123/4"],"_opcodes":["123/4","124/1","124/0"],"_literals":["123/4","126/0"],"_s":["123/0","159/0","205/0","343/0","345/0","614/0","617/0","621/0","622/0","625/0","629/0","665/0","670/0","806/0","840/0","851/0","871/0","881/0"],"_either":["124/0","159/0","175/2","192/0","431/0","467/0","516/1","638/1","640/1","742/1","798/0","823/0","840/2"],"_functional":["124/0","124/1","848/1"],"_instructional":["124/0","124/1"],"_recommended":["124/1","136/3","138/3","139/1","145/1","149/1","157/0","692/3","697/3","730/5","732/0","735/2","788/0","798/1","799/2","823/0"],"_raise":["124/1"],"_warning":["124/1","632/0","740/0","799/3","808/0"],"_examples":["124/2","125/2","126/2","372/0","502/1","517/0","738/0","743/0","744/0","774/0","836/6"],"_jumped":["125/0","741/0"],"_point":["125/1","461/4","534/0","536/0","693/1"],"_labels":["125/0","129/1","130/0","130/2","130/4","741/0"],"_puts":["126/0"],"_executed":["126/0","128/4","692/2","756/0","815/0","866/5"],"_enter":["127/0","745/1","840/2"],"_comment":["127/0","464/0"],"_text":["127/0","509/0","511/0","546/0","650/0","650/1","651/0","652/0","805/0","813/0","817/1","825/0","826/0","829/0"],"_semi":["127/0"],"_colon":["127/0"],"_comments":["127/0"],"_common":["128/0","128/1","138/1","143/1","148/1","158/0","158/1","159/0","172/0","172/4","205/1","227/2","231/1","231/2","296/3","309/4","310/2","461/1","462/6","471/0","503/0","544/0","619/1","671/0","745/0","796/0","797/1","832/0","842/0"],"_one":["128/0","159/0","192/0","192/1","205/1","297/1","334/1","336/0","355/1","462/0","462/2","495/0","497/0","586/1","594/2","612/0","628/1","663/0","667/2","746/0","751/1","779/6","793/2","802/3","876/2"],"_init":["128/1","128/2","128/3","281/1","283/0","428/0"],"_contains":["128/3","246/0","331/0","422/1","491/0","820/1"],"_installed":["128/4","741/1","840/2"],"_important":["128/5","314/0","462/2","785/2","788/2","789/3","842/1","848/0"],"_jumps":["128/5"],"_relative":["128/5","741/2","787/2"],"_itself":["128/5","128/7","385/2","556/1","588/1","853/1"],"_own":["128/5","136/1","138/3","139/1","145/1","149/1","196/1","462/0","730/0","730/4","750/0","786/2","831/0"],"_parent":["128/5","237/0","579/0","580/0"],"_scopes":["128/5","128/7","128/0","130/0","130/3","742/1"],"_enforced":["128/6"],"_segment":["128/7","129/0","129/1","130/0","130/3","130/4","742/1"],"_respect":["128/7"],"_anywhere":["128/7","205/2","844/1"],"_top":["128/8","823/0","849/0"],"_named":["128/8","227/3","406/1","406/2","503/0","742/0"],"_arbitrary":["129/0"],"_lookup":["129/0","206/0","206/1"],"_tables":["129/0","817/0"],"_constants":["129/0","419/1","491/0","492/0","493/0","494/0","495/0","496/0","497/0","498/0","499/0","500/0"],"_empty":["129/1","747/0"],"_adds":["129/1","315/3","316/3","824/0","827/0"],"_item":["130/1","853/4"],"_foobar":["130/1","130/5","372/1","373/2","374/2"],"_must":["130/2","159/0","177/0","192/1","196/1","214/1","251/1","285/3","298/0","299/2","308/1","309/5","310/2","311/1","314/2","315/4","463/1","501/1","522/1","537/2","537/3","625/1","628/0","687/2","688/1","737/0","741/1","756/4","779/2","779/5","779/6","786/3","790/1","792/2","798/0","799/2","818/0","822/2","822/5","839/1"],"_reachable":["130/2"],"_inside":["130/3"],"_respectively":["130/4"],"_accessed":["130/5","337/2","406/0","406/1","739/0","769/3"],"_pushed":["130/5"],"_exampl":["131/0"],"_placeholders":["131/0","400/1"],"_module":["132/0","172/5","797/3"],"_ledger":["133/0","134/0"],"_hardware":["133/0","134/0","299/1"],"_popular":["133/0","142/0","160/0","421/0","797/0","834/0"],"_brand":["133/0"],"_ledgersigner":["133/0","134/0"],"_connects":["134/0","174/1","196/0","735/0"],"_left":["134/1","134/2","756/5"],"_unspecified":["134/1","134/2","197/1","197/2","225/1","760/1","761/1"],"_environment":["134/1","319/1","608/0","746/0","790/0","797/2","799/0","867/1","867/3"],"_default":["134/1","134/2","136/3","139/0","145/0","149/0","154/2","155/0","156/0","157/1","161/1","174/4","177/1","197/1","231/2","246/0","315/3","316/3","322/1","336/0","338/0","570/0","701/1","702/1","703/1","707/1","708/1","709/1","720/1","730/2","735/0","735/1","740/0","742/0","747/0","751/1","775/3"],"_hid":["134/1"],"_browser":["134/1","720/1","795/1","831/0","833/0"],"_u2f":["134/1"],"_path":["134/2","134/0","183/0","322/1","322/0","570/0","572/0","583/0","583/1","585/1","586/1","587/1","589/0"],"_now":["135/0","622/0","842/2","853/3","854/0","855/1","856/0","857/0"],"_more":["135/0","154/1","168/1","174/5","180/2","181/1","196/0","196/1","225/2","227/2","384/2","462/4","522/1","544/0","580/1","610/2","618/0","625/0","628/2","660/1","693/1","730/4","730/6","738/0","738/2","743/1","748/0","787/2","791/0","792/1","793/2","843/1","844/0","863/3","876/0","876/1"],"_modular":["135/0"],"_ancillary":["135/0"],"_packages":["135/0","594/3","790/1","798/1","798/2","830/0"],"_part":["135/0","180/1","227/1","240/0","336/0","376/1","406/2","462/0","667/1","692/1","742/2","797/1","866/0"],"_core":["135/0"],"_functionality":["135/0","154/0","384/1","462/4","462/6","463/1","594/2","594/4","798/0","844/1"],"_situations":["135/0","662/1","671/0","692/3","788/2","792/2"],"_services":["136/0","136/2","155/1","156/0","157/0","157/1","157/2","157/4","160/1","172/2","196/2","730/3","735/0","834/1"],"_offer":["136/0","192/1","731/1","732/1","733/1"],"_web":["136/0","144/0","160/1","195/1","196/0","197/0","795/0","795/1","797/1","797/2","831/1","831/0","834/1","867/0","867/2"],"_accessing":["136/0"],"_these":["136/1","136/3","172/2","172/3","335/1","384/3","430/1","447/1","472/2","544/0","565/1","593/0","594/0","600/0","692/3","730/3","730/4","853/1","867/6","882/1"],"_providers":["136/1","136/0","138/0","143/0","148/0","152/0","154/0","161/0","173/0","174/1","175/0","175/2","179/2","185/0","190/0","192/0","298/0","860/0"],"_connecting":["136/1","162/0","833/0","834/0"],"_development":["136/1","795/1"],"_cluster":["136/1"],"_however":["136/2","298/0","308/1","310/2","311/1","406/2","421/1","421/2","461/3","579/0","669/1","692/3","748/0","786/5","794/1","872/0"],"_reliance":["136/2"],"_third":["136/2","160/1","735/0","834/1"],"_party":["136/2","160/1","640/1","640/2","735/0","834/1"],"_reduce":["136/2","180/2","420/1","788/0"],"_resilience":["136/2"],"_security":["136/2","310/2","661/0","667/0","667/1","785/2","787/0","788/0","788/2","789/3","798/1","799/0","831/0"],"_trust":["136/2","735/0"],"_mitigate":["136/3"],"_issues":["136/3","314/1","420/1","775/3","789/3","866/3"],"_p":["136/0","139/0","145/0","149/0","157/0","421/0","514/0","515/0","613/0","617/0","623/0","624/0","627/0","628/0","629/0","664/0","669/0","730/0","809/0","834/0","869/0","880/0"],"_vaporscanprovider":["137/0","138/0"],"_backed":["137/0","142/0","147/0","151/0","156/0","166/0","730/1"],"_combination":["137/0","756/6"],"_various":["137/0","345/1","384/0","385/3","463/2","556/0","560/0","604/0","830/0","866/4","877/0"],"_vaporscan":["137/0","138/3","138/0","139/1","730/1","731/0","731/2","844/0"],"_apis":["137/0","162/0","730/6","733/1","733/4","797/1"],"_optional":["138/0","143/0","144/0","148/0","225/0","265/1","334/0","348/0","400/0","420/0","574/0","601/0","602/0","698/0","735/1","765/0","801/1","818/0","823/0"],"_apikey":["138/0","138/2","139/0","143/0","143/2","144/0","144/1","145/0","148/0","149/0","185/0","186/0","187/0","188/0"],"_specified":["138/1","143/1","144/1","148/1","157/2","161/1","161/2","175/1","273/0","315/2","322/1","322/3","400/1","403/1","421/0","430/1","472/1","475/1","501/1","502/0","505/0","507/0","571/1","621/0","627/0","654/1","661/0","688/1","711/0","712/0","735/1","816/0","873/0"],"_id":["138/1","143/1","143/2","148/1","231/2","234/0","273/0","273/1","302/0","546/0","626/0","682/0","682/1","692/0","692/3","695/1","697/4","697/5","732/2"],"_shared":["138/2","139/0","145/0","149/0","157/1","640/0","730/4","731/4"],"_key":["138/2","138/3","138/0","139/0","139/1","143/0","144/0","145/0","145/1","148/0","149/0","149/1","157/0","157/2","157/4","185/0","186/0","187/0","188/0","296/4","315/2","317/0","318/0","319/0","326/0","333/0","406/2","406/3","421/1","425/1","425/0","426/0","551/0","576/0","577/0","578/0","584/0","587/0","588/0","588/1","620/2","635/0","636/0","637/0","638/0","639/0","640/1","640/2","640/0","641/0","644/0","644/1","645/0","645/1","705/0","730/1","730/4","730/5","731/2","733/2","734/0","735/1","739/0","748/0","785/3","785/0","828/0","833/1","834/4","877/0"],"_reduced":["138/2","139/0","145/0","149/0","587/1"],"_performance":["138/2","139/0","145/0","149/0","730/0","730/6","735/2"],"_throttled":["138/2","139/0","145/0","149/0","730/4"],"_requests":["138/2","139/0","145/0","149/0","157/3","180/2","196/0","208/1","789/2","842/0"],"_highly":["138/3","139/1","145/1","149/1","157/0","697/3","730/5","732/0","734/2","735/2","798/1","799/2","823/0"],"_production":["138/3","139/1","145/1","149/1","155/0","157/0","610/1"],"_register":["138/3","139/1","145/1","149/1","719/0"],"_homestead":["138/0","140/0","143/0","146/0","148/0","150/0","152/1","153/0","156/1","231/2","233/0","692/2"],"_keys":["139/0","145/0","149/0","157/1","157/0","205/0","334/2","576/1","730/0","730/2","730/3","730/4","735/1","799/0","799/1","844/0"],"_mainnet":["140/0","146/0","150/0","152/0","153/0","156/2","158/1","775/1"],"_ropsten":["140/0","146/0","150/0","158/1","692/2","775/1"],"_proof":["140/0","146/0","150/0","240/0","285/3"],"_work":["140/0","146/0","150/0","205/3","240/0","384/1","764/1","776/0","788/0","793/2","832/0","867/1","876/0"],"_testnet":["140/0","146/0","150/0"],"_rinkeby":["140/0","146/0","150/0"],"_authority":["140/0","146/0","150/0"],"_ouml":["140/0","146/0","150/0"],"_rli":["140/0","146/0","150/0"],"_clique":["140/0","146/0","150/0"],"_kovan":["140/0","146/0","150/0"],"_supported":["140/0","146/0","150/0","153/0","298/0","308/1","310/2","311/1","421/2","422/2","424/0","539/0","552/0","553/0","617/0","789/3","840/2","867/0"],"_networks":["140/0","146/0","150/0","153/0","158/0","159/0","273/2","692/1","775/2"],"_history":["141/0"],"_gethistory":["141/0"],"_infuraprovider":["142/0","143/0","144/0"],"_infura":["142/0","143/0","144/0","145/1","160/2","730/1","732/0","732/2","834/2","844/0"],"_service":["142/0","157/0","205/0","730/1","730/2","730/5","732/0","733/0","735/1","735/2"],"_project":["143/2","732/2","800/1"],"_projectid":["143/2"],"_projectsecret":["143/2"],"_secret":["143/2","584/0","640/0"],"_public":["143/2","326/0","348/1","425/1","425/0","426/0","464/2","578/0","637/0","638/0","640/1","644/0","645/0","645/1","789/4","839/1"],"_sources":["143/2","319/0","334/2","799/3","866/4"],"_like":["143/2","171/4","244/0","432/0","462/0","467/0","472/0","474/0","479/0","480/0","481/0","482/0","483/0","484/0","485/0","486/0","487/0","488/0","510/0","512/0","515/0","521/0","547/0","548/0","549/0","550/0","575/0","649/0","654/0","680/0","690/0","696/0","740/0","783/0","786/5","787/3","867/4"],"_server":["143/2","196/1","614/0","795/0"],"_further":["143/2","839/1"],"_secure":["143/2","319/0","319/1","703/0","786/6","799/0","799/3","866/0"],"_quotas":["143/2"],"_websocketprovider":["144/0","196/0","197/0"],"_socket":["144/0","196/0","197/0"],"_endpoint":["144/0"],"_getwebsocketprovider":["144/0"],"_alchemyprovider":["147/0","148/0"],"_alchemy":["147/0","148/0","149/1","730/1","733/0","733/2","844/0"],"_cloudflareprovider":["151/0","152/0"],"_cloudflare":["151/0","152/0","844/0"],"_gateway":["151/0","734/0"],"_connection":["154/0","196/0","698/0","700/0","701/0","702/0","703/0","704/0","705/0","833/1","834/4","835/0","847/4","860/0"],"_providing":["154/0","836/5"],"_concise":["154/0"],"_js":["154/1","182/1","189/0","193/2","194/0","462/6","462/0","463/0","789/0","789/3","792/2","797/1","797/2","798/0","823/0","823/1","828/1","843/0","859/0","867/2"],"_cover":["154/1","688/1","848/1"],"_vast":["154/1","775/3"],"_majority":["154/1","155/6"],"_includes":["154/1","227/1","247/0","248/0","249/0","274/0","287/0","516/3","687/1","697/4","730/5","857/0"],"_classes":["154/1","185/0","297/1","298/0","299/2","308/1","310/2","311/1","314/1","314/0","315/0","316/0","384/3","605/1","718/1","830/0","844/0"],"_sub":["154/1","184/0","185/0","196/0","296/1","296/4","297/1","298/0","299/2","308/1","310/2","311/1","314/2","314/0","315/0","316/0","440/0","526/0","718/1","830/0"],"_classing":["154/1"],"_custom":["154/1","158/0","158/1","159/0","172/5","315/0","316/0","654/1","662/1","662/0","666/2","667/2","670/1","877/1"],"_configuration":["154/1","162/0","172/5","178/0","823/0","828/0","828/1"],"_users":["154/2","157/1","447/1","730/4","775/2","775/5","853/3"],"_safest":["155/0"],"_easiest":["155/0","830/0","833/0"],"_begin":["155/0","461/5","664/0","669/0","737/0","817/1","818/0","822/2","833/0"],"_developing":["155/0","833/0","869/0"],"_robust":["155/0","732/0","733/0"],"_enough":["155/0","155/5","421/1","625/1","665/0","668/0","688/1","800/0"],"_creates":["155/1","175/0","558/0","809/0","810/0","814/0"],"_fallbackprovider":["155/1","174/0","175/0"],"_backend":["155/1","155/3","155/6","165/1","174/5","177/0","196/0","730/3"],"_request":["155/2","170/0","174/2","193/1","193/0","194/1","194/0","195/1","195/0","265/0","266/0","267/0","268/0","269/0","270/0","271/0","272/0","273/0","305/0","306/0","310/0","311/0","315/0","316/0","730/6","789/4"],"_backends":["155/2","155/5","171/3","174/1","174/2","174/4","176/0","208/1","229/1","735/0"],"_simultaneously":["155/2"],"_responses":["155/3","155/6","177/0","730/4","730/6"],"_checked":["155/3"],"_agree":["155/3","155/5","174/4","177/0"],"_quorum":["155/4","174/1","174/3","174/4","175/1","175/0","177/0","180/1"],"_reached":["155/4","174/3"],"_become":["155/6","797/0"],"_out":["155/6","462/5","666/0","688/2","730/2","789/0","789/4","798/1","847/4","867/3"],"_sync":["155/6","321/0","794/0"],"_compromised":["155/6"],"_favor":["155/6"],"_url":["156/3","161/0","161/1","184/1","184/0","185/0","186/0","188/0","197/0","197/1","698/0","700/0","828/0"],"_http":["156/3","161/2","703/0","840/2"],"_localhost":["156/3","161/2","197/1"],"_wss":["156/3"],"_com":["156/3","877/1"],"_getdefaultprovider":["156/0"],"_acquire":["157/0"],"_across":["157/1","264/0","594/0","793/2","872/0"],"_throttle":["157/1"],"_periods":["157/1"],"_load":["157/1","831/1","870/0"],"_realizing":["157/1"],"_monitoring":["157/2"],"_usage":["157/2","604/0","730/1","731/4","732/4","733/4","734/2","754/0","756/1","765/0"],"_metrics":["157/2","731/4","732/4","733/4","734/2"],"_tracking":["157/3","730/6"],"_specifying":["157/4","392/0","393/0","394/0","395/0","397/0","398/0","399/0","400/0","401/0","402/0","418/0","741/2"],"_official":["158/0","718/1","720/0"],"_projects":["158/0","730/1","730/3","830/0","866/1"],"_accept":["158/1","429/2","753/1"],"_networkish":["158/1","161/0","231/0"],"_definition":["158/1","373/2","805/0","812/1","844/1"],"_override":["159/0","185/0","185/1","336/1"],"_registry":["159/0","235/0"],"_intercept":["159/0"],"_dev":["159/0"],"_manually":["159/0","336/0","386/2","629/2","830/0"],"_json":["160/0","161/0","162/0","163/0","164/0","165/0","166/0","167/0","168/0","171/0","172/4","182/0","184/1","184/0","185/0","186/0","193/1","193/2","194/1","194/2","196/0","320/0","321/0","327/0","331/0","343/0","345/0","345/1","345/2","350/0","386/0","386/1","391/1","560/0","698/0","732/1","733/1","764/1","769/2","788/0","823/0","823/1","834/0","844/0","866/1","868/0","877/2","885/0"],"_rpc":["160/0","161/0","162/0","163/0","164/0","165/0","166/0","167/0","168/0","171/0","172/4","182/0","184/1","184/0","185/0","186/0","193/1","193/2","194/1","194/2","196/0","560/0","732/1","733/1","759/0","834/0","844/0"],"_major":["160/0","789/3","834/0","867/5","876/1"],"_implementations":["160/0","172/0","834/0","866/4","877/1"],"_geth":["160/1","172/1","172/5","172/6","182/0","834/1","844/0","866/4","877/1"],"_parity":["160/1","172/1","172/5","172/6","182/0","470/0","834/1","844/0","848/1","866/5","882/1"],"_jsonrpcprovider":["160/0","161/0","163/0","164/0","165/0","166/0","167/0","172/3","184/1","188/0","296/4"],"_located":["161/0"],"_anetworkish":["161/0"],"_querying":["161/2","835/0"],"_implementation":["162/0","182/2","315/3","316/3"],"_different":["162/0","463/1","659/1","667/0","692/1","863/0","863/1","866/4"],"_specific":["162/0","165/1","172/0","229/0","254/0","336/1","420/1","545/0","662/1","741/1","785/0","789/3"],"_flags":["162/0","739/0","751/0","752/1","756/5","756/6","769/0","769/1","769/4"],"_settings":["162/0"],"_enable":["162/0"],"_unlock":["162/0","170/0","786/2"],"_accounts":["162/0","164/0","331/0","759/0","876/2","877/2","877/0"],"_expose":["162/0"],"_please":["162/1","313/1","557/1","788/0","789/2","789/4","844/1","848/2","867/3"],"_consult":["162/1"],"_documentation":["162/1","182/2","789/3","792/0","792/2","793/0","793/2","794/0","794/1","840/0","844/1","845/0","847/1"],"_local":["162/0","182/0","373/0","793/2"],"_jsonrpcsigner":["163/0","166/0","171/2","296/4","297/1"],"_addressorindex":["163/0","163/1"],"_getsigner":["163/0","296/4"],"_addresses":["164/0","287/0","419/0","421/0","421/1","576/1","584/0","588/1","844/1"],"_listaccounts":["164/0"],"_raw":["165/0","279/0","308/0","312/0","471/0","472/0","487/0","488/0"],"_messages":["165/0","296/0","296/2","317/0","554/1","861/1","861/2"],"_debugging":["165/1","172/2","205/2","401/1","597/0","610/2","630/0","731/0","733/1","733/4","745/0"],"_management":["165/1","172/2"],"_params":["165/0","193/1","194/1","601/0","602/0"],"_established":["167/0"],"_checks":["168/0","315/3","605/0","718/0"],"_getuncheckedsigner":["168/1"],"_details":["168/1","171/0","171/2","171/3","248/0","580/1","863/3"],"_unchecked":["168/0","169/0","171/0"],"_connectunchecked":["168/0"],"_jsonrpcuncheckedsigner":["168/0","171/0"],"_resolves":["169/0","265/1","299/0","308/0","310/0","311/0","316/3","327/0"],"_opaque":["169/0","171/1"],"_senduncheckedtransaction":["169/0"],"_locked":["170/0"],"_populating":["171/0"],"_before":["171/0","177/0","285/1","640/2","698/0","704/0","706/0","711/0","712/0","789/3","789/4","799/2","851/1"],"_returning":["171/0","327/0","698/0","771/0"],"_price":["171/1","211/0","270/0","303/0","625/1","628/0","628/1","628/2","679/0","689/0","761/0","783/0"],"_limit":["171/1","242/0","269/0","359/0","625/1","629/2","629/0","678/0","688/0","707/0","708/0","710/0","730/6","731/4","732/4","733/4","760/0"],"_adjusted":["171/1"],"_discarded":["171/1"],"_remedy":["171/2","461/7","629/2"],"_immediately":["171/2","171/3","171/4"],"_queries":["171/2","730/6","860/1"],"_respond":["171/3"],"_instead":["171/3","185/1","205/2","248/0","297/1","321/2","436/1","464/3","601/1","620/2","647/1","653/1","742/1","827/2","874/0"],"_defer":["171/3"],"_releasing":["171/3"],"_responsible":["171/3"],"_uncheckedsigner":["171/4"],"_information":["171/4","225/2","246/0","587/1","597/0","598/0","610/1","630/0","791/0","877/0"],"_mock":["171/4","399/1"],"_quickly":["171/4","579/0"],"_vs":["172/1","462/0","470/0","472/1","697/4","775/1"],"_admin":["172/2"],"_deeper":["172/2"],"_exploration":["172/2"],"_swarm":["172/2"],"_whisper":["172/2"],"_trace":["172/5","733/4"],"_debug":["172/5","597/0","630/0"],"_internal":["172/5","516/0","518/0"],"_cache":["172/5"],"_etc":["172/5","348/1","352/0","375/2","462/0"],"_others":["173/0","174/2","720/1","799/1"],"_advanced":["174/0","384/3","462/4","730/6","733/1","733/4","738/2","828/1"],"_configured":["174/1","207/1","594/4"],"_priority":["174/1","174/2","175/3","179/0","179/2"],"_weight":["174/1","174/5","175/3","181/0"],"_dispatched":["174/2"],"_randomly":["174/2"],"_chosen":["174/2","179/2","462/0"],"_selected":["174/2","751/1"],"_compared":["174/2","655/0"],"_accepted":["174/3","789/3"],"_caller":["174/3"],"_rounded":["174/4","529/0"],"_give":["174/5"],"_influence":["174/5"],"_fallback":["174/0","175/0","176/0","178/0","179/0","180/0","181/0","735/1"],"_half":["175/1","177/1","670/1","793/2"],"_sum":["175/1","177/1","293/0"],"_weights":["175/1","177/1"],"_fallbackproviderconfig":["175/2","176/0","178/0","179/0","180/0","181/0"],"_defaults":["175/3","654/1"],"_configurations":["176/0"],"_configs":["176/0"],"_providerconfigs":["176/0"],"_config":["176/0","178/0","179/0","180/0","181/0","792/2","823/0","828/1"],"_upon":["177/0","385/3"],"_priorities":["179/1"],"_favoured":["179/1"],"_over":["179/1","182/0","461/5","462/1","463/2","628/1","703/0","756/5","789/0","796/0","840/2","844/0","850/0","866/1"],"_lower":["179/1","180/2","873/0","873/1","874/0","875/0"],"_share":["179/2"],"_random":["179/2","319/0","489/0","785/3","799/0","799/2","799/3","866/5","872/0","872/2","873/0","874/0","875/0","882/1"],"_timeout":["180/0","215/0","615/0","704/0","706/0"],"_ms":["180/0","709/1"],"_affect":["180/1","798/1"],"_counted":["180/1"],"_traffic":["180/2","730/3"],"_stall":["180/0"],"_stalltimeout":["180/0"],"_trusted":["181/1"],"_ipcprovider":["182/0","183/0"],"_filename":["182/0","811/0"],"_system":["182/0","182/1"],"_complications":["182/1"],"_due":["182/1","421/1","534/1","667/0"],"_permissions":["182/1","730/1"],"_notes":["182/2","460/0"],"_websites":["182/2"],"_ipc":["182/0","183/0"],"_intended":["184/0","273/2","853/3"],"_classed":["184/0"],"_suffice":["184/1"],"_little":["184/1","240/1","241/1","242/2","245/1","285/2","293/1","461/1"],"_extra":["184/1","245/0"],"_effort":["184/1"],"_urljsonrpcprovider":["184/0","185/0","186/0"],"_geturl":["185/1","187/0","188/0"],"_getapikey":["185/1","186/0","187/0"],"_inheritedclass":["186/0"],"_examine":["187/0"],"_valid":["187/0","214/1","273/1","315/3","424/0","466/0","466/1","468/0","473/0","475/0","475/1","514/1","538/1","592/0","607/0","666/0","667/2","669/0","716/0","866/5"],"_modified":["187/0","663/0"],"_inheriting":["187/0","188/0"],"_inheritingclass":["187/0","188/0"],"_web3provider":["189/0","190/0","191/0"],"_meant":["189/0","579/0","750/0"],"_ease":["189/0"],"_moving":["189/0"],"_web3":["189/0","190/0","191/0","192/0","193/2","194/0","859/0","861/2","863/2","865/0","867/0"],"_based":["189/0","308/1","316/3","748/0","797/1"],"_wrapping":["189/0"],"_existing":["189/0","385/1","433/0","792/2"],"_web3httpprovider":["189/0"],"_web3ipcprovider":["189/0"],"_web3wsprovider":["189/0"],"_exposing":["189/0","462/4"],"_rest":["189/0"],"_wrap":["189/1"],"_wraps":["190/0"],"_external":["190/0","192/0","193/0","194/0","195/0","792/2"],"_externalprovider":["190/0","192/0","192/1","193/0","194/0","195/0"],"_web3compatibleprovider":["191/0"],"_mentioned":["192/0"],"_signatures":["192/1","693/0","694/0","695/0","879/0","882/1"],"_matching":["192/1","208/0","252/0","253/0","254/0","403/1","579/0"],"_follows":["193/0","194/0"],"_signature":["193/0","194/0","308/0","312/0","337/1","351/0","410/0","416/0","418/2","418/3","426/0","470/0","471/0","472/0","487/0","488/0","639/0","642/0","642/1","643/0","644/1","644/0","662/1","682/1","697/0","697/1","697/4","697/5","806/0","806/1"],"_payload":["193/1","194/1","560/0"],"_minimum":["193/1","194/1","707/0"],"_differs":["193/2"],"_wrapped":["193/2","194/2"],"_semantics":["194/2"],"_async":["194/0","462/3"],"_sendasync":["194/0","195/0"],"_historically":["195/1","853/1"],"_synchronous":["195/1"],"_browsers":["195/1","867/2"],"_deprecated":["195/1"],"_quite":["195/1","593/0","732/0","785/1","797/0","849/0","867/0","868/0"],"_long":["195/1","309/2","309/3","481/0","481/1","486/1","487/0","571/1","647/2","648/0","675/0","704/0","786/0"],"_ago":["195/1","229/1"],"_websocket":["196/0","196/1","196/2","732/1","733/1"],"_persistent":["196/0"],"_multiplexing":["196/0"],"_pub":["196/0"],"_immediate":["196/0"],"_dispatching":["196/0"],"_newer":["196/1"],"_running":["196/1","738/0","757/0","758/0","866/5"],"_infrastructure":["196/1","734/2"],"_websockets":["196/1"],"_much":["196/1","205/2","227/2","730/6","785/2","786/0","787/2","792/1"],"_intensive":["196/1","785/3"],"_resources":["196/1","208/1"],"_maintain":["196/1","656/0","822/0"],"_client":["196/1","844/0"],"_charge":["196/2","847/1"],"_fees":["196/2","464/3"],"_endpoints":["196/2","731/1"],"_ws":["197/1"],"_blocktag":["199/0","200/0","201/0","202/0","212/0","229/0","229/1","252/0","253/0","301/0","304/0"],"_height":["199/0","200/0","210/0","229/1","238/0","255/0","275/0","291/0"],"_latest":["199/0","200/0","201/0","202/0","212/0","229/1","301/0","304/0"],"_getcode":["200/0"],"_bytes32":["201/0","647/0","649/0","650/0"],"_pos":["201/0"],"_addr":["201/0"],"_storage":["201/0","647/0"],"_getstorageat":["201/0"],"_ever":["202/0","268/1","304/0","687/2"],"_next":["202/1","218/0","789/3","817/0","822/4","828/0","867/5","876/1"],"_gettransactioncount":["202/0","304/0"],"_hashes":["203/0","246/0","247/0","667/0","870/2","882/0"],"_getblock":["203/0"],"_objects":["204/0","345/1","462/3","516/2","844/0","850/0"],"_getblockwithtransactions":["204/0"],"_blockwithtransactions":["204/0","248/0"],"_naming":["205/0"],"_remember":["205/0","842/1"],"_refer":["205/1"],"_nearly":["205/2","788/0"],"_accepts":["205/2","345/2","421/2","620/2"],"_simplify":["205/2","386/2","594/0","780/0","855/1"],"_reading":["205/2"],"_simpler":["205/2"],"_offers":["205/3","730/2"],"_basic":["205/3","701/0","701/2","702/0","702/2","703/0","756/4","877/0"],"_help":["205/3","600/0","754/0","756/2","765/0","767/0","768/0","848/1","853/2","853/3"],"_names":["205/3","348/0","349/0","564/0","771/0","844/1","853/2","870/1"],"_reverse":["206/0"],"_registrar":["206/0"],"_exist":["206/1","315/3"],"_lookupaddress":["206/0"],"_looks":["207/0"],"_owned":["207/1","317/0","331/0"],"_resolver":["207/1"],"_resolvename":["207/0","307/0","564/0"],"_keep":["208/1","257/0","788/0","789/2","789/3","792/2","794/0","837/0","844/0","867/0"],"_mind":["208/1","257/0","663/1","788/0","789/1","789/2","837/0"],"_discard":["208/1"],"_old":["208/1","628/1"],"_too":["208/1","623/0","756/8"],"_broad":["208/1"],"_getlogs":["208/0","397/0","778/1"],"_getnetwork":["209/0"],"_recently":["210/0","229/1"],"_getblocknumber":["210/0"],"_guess":["211/0","629/0","786/1","786/3","799/1"],"_getgasprice":["211/0","303/0"],"_getters":["212/2"],"_submit":["213/0"],"_accurate":["213/1"],"_accounted":["213/1"],"_affected":["213/1"],"_relevant":["213/1"],"_submits":["214/0"],"_correct":["214/2","718/1","786/2","866/4"],"_sufficient":["214/2","462/4"],"_pay":["214/2","270/0","625/1","783/0"],"_sendtransaction":["214/0","311/0","315/1"],"_transactionhash":["215/0","262/0","289/0"],"_wait":["215/0","280/0","704/0","711/0"],"_waitfortransaction":["215/0"],"_confirms":["215/0"],"_txreceipt":["215/0"],"_emitter":["216/0"],"_triggered":["217/0","218/0","257/0"],"_eventname":["217/0","218/0","219/0","220/0","220/1","221/0","221/1","222/0","222/1","223/0","224/0"],"_notify":["219/0"],"_generally":["219/1","240/1","241/1","242/2","245/1","285/2","293/1","315/0","316/0","403/0","429/2","462/4","620/1","628/2","640/1","667/1","831/0"],"_internally":["219/1","421/2","462/4","463/0","464/2","464/3","735/0","735/1"],"_emit":["219/0"],"_topic":["225/0","225/2","226/0","351/0","364/1","395/0","397/0","397/1","404/0","408/0","411/0","777/0","779/2","779/4","779/5","779/6","779/7"],"_sets":["225/2","226/0","779/2","826/0"],"_omitted":["226/1","472/0","472/1","472/2","484/1","735/1","815/5","873/1"],"_isprovider":["228/0"],"_specifies":["229/0","353/0"],"_earliest":["229/1"],"_pending":["229/1"],"_prepared":["229/1"],"_mining":["229/1","245/0"],"_negative":["229/1","431/0","495/0","539/0"],"_blocks":["229/1","278/0","285/1","292/0","295/1","711/0","737/0","739/0","813/1"],"_eventtype":["230/0"],"_eventfilter":["230/3"],"_ensaddress":["231/2","235/0"],"_populated":["231/2"],"_unknown":["231/2","233/1","315/2","601/0","602/0","616/0","756/5"],"_chainid":["234/0","273/0","316/3","682/0","692/0","697/2","697/3"],"_previous":["237/0","658/2"],"_parenthash":["237/0"],"_timestamp":["239/0","277/0"],"_mine":["240/0"],"_property":["240/1","241/1","242/2","245/1","285/1","285/2","295/1","337/2","466/1","556/3","556/4","806/0","851/2","871/0"],"_interest":["240/1","241/1","242/2","245/1","293/1"],"_difficulty":["241/0","788/2"],"_met":["241/0"],"_maximum":["242/0","269/0","500/0","708/0"],"_permitted":["242/0","269/0"],"_voted":["242/1"],"_down":["242/1","461/1","788/2"],"_miners":["242/1"],"_adjust":["242/1"],"_bandwidth":["242/1"],"_requirements":["242/1"],"_gaslimit":["242/0","269/0","316/3","678/0","688/0","760/0"],"_gasused":["243/0","286/0"],"_coinbase":["244/0"],"_subsidy":["244/0"],"_reward":["244/0"],"_go":["244/0"],"_choose":["245/0"],"_extradata":["245/0"],"_substantially":["246/0","610/2"],"_entry":["251/1","251/2","257/0"],"_condition":["251/1","779/2","779/3"],"_treated":["251/2","309/0","309/1","740/0"],"_starting":["252/0","822/4"],"_inclusive":["252/0","253/0","466/1","867/7"],"_search":["252/0","253/0","254/0","403/1","404/0","405/0"],"_criteria":["252/0","253/0","254/0"],"_fromblock":["252/0"],"_blockhash":["254/0","256/0","276/0","288/0"],"_blocknumber":["255/0","275/0","291/0"],"_org":["257/0"],"_orphaned":["257/0"],"_indicate":["257/0","629/3"],"_likely":["257/0","336/1","384/2","464/3","692/2","775/2","786/6","867/5","876/1"],"_again":["257/0","711/0","712/0"],"_near":["257/0"],"_transactionlogindex":["258/0"],"_transactionindex":["263/0","284/0"],"_logindex":["264/0"],"_describes":["265/0"],"_processed":["265/0","337/1","663/0","756/4","783/0"],"_fields":["265/1","310/1","311/0"],"_transactionrequest":["265/0","266/0","267/0","268/0","269/0","270/0","271/0","272/0","273/0","305/0","306/0","310/0","311/0","315/1","315/3","315/0","316/1","316/0"],"_wei":["270/0","272/0","461/3","461/5","461/8","499/0","501/0","501/1","501/2","502/2","502/3","628/2","681/0","689/0","691/0"],"_per":["270/0","499/0","689/0","737/0","741/3","742/2","783/0","802/3","854/0"],"_unit":["270/0","502/0","505/0","507/0","689/0","783/0","884/0"],"_gasprice":["270/0","316/3","679/0","688/1","689/0","761/0"],"_authorized":["273/0"],"_disable":["273/1"],"_dangerous":["273/2"],"_care":["273/2"],"_replayed":["273/2"],"_were":["273/2","412/0","853/2","866/4","866/5","866/6","877/1","882/1"],"_possibly":["273/2","321/1","731/0","799/1"],"_initial":["278/0","762/0","790/1"],"_confirmations":["278/0","280/0","292/0"],"_serialized":["279/0","345/1","587/0","684/1","695/1","696/0","697/0","697/1","883/0"],"_transactionreceipt":["280/0"],"_created":["283/0","319/2","336/0","338/0","386/2","735/1","866/4","866/6","877/1","882/1"],"_getcontractaddress":["283/1","427/0"],"_utility":["283/1","309/5","316/2","736/0","745/0"],"_sender":["283/1"],"_contractaddress":["283/0"],"_intermediate":["285/0"],"_byzantium":["285/1","294/0","295/1"],"_hard":["285/1","294/0","295/1","748/0"],"_fork":["285/1","294/0","295/1"],"_replaced":["285/1","815/1","815/3"],"_status":["285/1","295/0","754/0"],"_verify":["285/3","579/0","642/0","643/0"],"_transition":["285/3"],"_fraud":["285/3"],"_considering":["285/3"],"_logsbloom":["287/0"],"_ordered":["293/0"],"_cumulative":["293/0"],"_cumulativegasused":["293/0"],"_post":["294/0","295/1"],"_reverted":["295/0","688/2"],"_sign":["296/0","296/2","308/0","309/4","310/0","312/0","317/0","328/0","639/0","644/1","697/1","730/0","730/5","731/2","732/2","733/2","734/0","833/1","834/4","861/1","861/2"],"_largely":["296/1"],"_metamask":["296/2","833/0","844/0"],"_broadcasting":["296/2"],"_signers":["296/3","296/0","861/0"],"_encounter":["296/3","461/0","848/2","867/4"],"_knows":["296/4","786/2"],"_private":["296/4","317/0","318/0","319/0","333/0","421/1","425/1","425/0","576/1","577/0","584/0","588/0","588/1","620/2","635/0","636/0","640/1","644/1","645/1","775/1","799/0","799/1","833/1","834/4","844/0","877/0"],"_acquired":["296/4","730/4"],"_instantiated":["297/0","605/1","752/1","756/3"],"_concrete":["297/1"],"_voidsigner":["297/1","311/1","328/0","329/0","330/0"],"_implement":["298/0","299/2","308/1","310/2","311/1","565/1","767/0","768/0"],"_simply":["298/0","385/3","775/4"],"_around":["299/1","461/5","732/0","733/0","786/4","792/2"],"_asynchronous":["299/1","314/1","321/2","462/2"],"_getaddress":["299/0","422/0","423/1","763/0"],"_issigner":["300/0"],"_getchainid":["302/0"],"_cost":["306/0","625/1","625/2","629/1","741/3","786/1"],"_ensname":["307/0"],"_message":["308/0","308/1","309/0","309/1","554/0","554/1","601/0","602/0","603/0","606/0","608/0","609/0","610/1","642/0","754/0","763/0","765/0","766/0"],"_signmessage":["308/0"],"_rawsignature":["308/0","312/0","487/0"],"_converted":["309/0","309/5","421/2","425/1","430/0","448/0","449/0","554/1","673/0","866/5"],"_utf8":["309/0","651/0","652/0","654/0","664/0","665/0","666/0","667/0","668/0","669/0","670/0","672/0","673/0","674/0"],"_binary":["309/1","335/0","336/1","384/0","384/2","461/4","468/0","516/2","769/1","836/3"],"_x1234":["309/2","517/0"],"_equivalent":["309/3","418/3","506/0","508/0","673/0","882/1"],"_x12":["309/3"],"_x34":["309/3"],"_arrayify":["309/5","476/0"],"_missing":["310/1","311/0","472/2","488/1","606/0","607/0","621/0","622/0","665/0","797/2","798/0","799/3","848/2"],"_reasons":["310/2","663/0","789/1","831/0","840/1"],"_clients":["310/2","775/3"],"_signtransaction":["310/0"],"_populates":["311/0"],"_offline":["311/1"],"_signs":["312/0"],"_typed":["312/0","509/0","511/0","556/0","558/0","559/0","560/0","561/0","562/0","563/0","564/0","643/0"],"_domain":["312/0","556/1","556/2","559/0","560/1","560/0","562/0","563/0","564/0","643/0","839/1"],"_signtypeddata":["312/0","313/2","560/0"],"_spcify":["313/2","557/2"],"_renamed":["313/2","406/2","557/2"],"_bit":["313/2","537/0","557/2","647/0","794/1","840/0"],"_immutable":["314/0","325/0","438/0","462/2","850/0"],"_deals":["314/1"],"_critical":["314/1","866/0"],"_potentially":["314/1"],"_valuable":["314/1"],"_crypto":["314/1"],"_keeping":["314/1","663/1","842/2"],"_throughout":["314/1","513/0","544/0","792/2","822/3"],"_life":["314/1","780/0"],"_cycle":["314/1","712/0"],"_helps":["314/1","384/1","853/7"],"_prevent":["314/1","692/1","866/3"],"_serious":["314/1"],"_assumption":["314/1"],"_extend":["314/2","820/0"],"_super":["314/2","756/4"],"_overridden":["315/0","316/0","682/1"],"_behaviour":["315/0","316/0","730/6","775/3"],"_copy":["315/1","316/1","490/0","564/0","831/0","847/0","847/1"],"_checktransaction":["315/0","316/1","316/3"],"_procedure":["316/1"],"_promises":["316/2"],"_resolveproperties":["316/2"],"_inherits":["317/0","824/0"],"_externally":["317/0","331/0"],"_eoa":["317/0","332/0","333/0","334/0"],"_privatekey":["318/0","333/0","577/0","635/0","636/0"],"_cryptographically":["319/0"],"_entropy":["319/0","319/1","591/0"],"_thrown":["319/1","422/1","475/1","481/1","486/1","595/0","601/1","608/1","697/5","815/2","815/4"],"_createrandom":["319/0"],"_encrypted":["320/0","321/0"],"_called":["320/1","327/1","436/0","519/0","622/0","756/3","756/7","756/9","787/1"],"_decryption":["320/1","327/1","787/1"],"_between":["320/1","327/1","335/0","461/8","462/2","466/1","501/0","653/1","697/5","787/1","815/5","853/1","863/2"],"_indicating":["320/1","327/1","783/0"],"_towards":["320/1","327/1"],"_completion":["320/1","327/1","787/1"],"_fromencryptedjson":["320/0","321/2"],"_operate":["321/1"],"_synchronously":["321/1"],"_lock":["321/1"],"_trivial":["321/1","839/0"],"_duration":["321/1"],"_fromencryptedjsonsync":["321/0"],"_phrase":["322/0","571/0","574/0","590/0","591/0","592/0","857/0"],"_wordlist":["322/3","322/0","573/0","574/0","591/0","592/0","713/0","714/0","715/0","716/0","717/0","718/1","718/0","719/0","721/0","722/0","723/0","724/0","725/0","726/0","727/0","728/0","729/0"],"_english":["322/3","720/1","722/0","844/0"],"_frommnemonic":["322/0","574/0"],"_desired":["325/0","692/3"],"_uncompressed":["326/0","425/1","637/0","644/0","645/1","844/1"],"_publickey":["326/0","578/0","637/0"],"_encrypt":["327/0"],"_carried":["328/1"],"_along":["328/2","385/1","464/1","693/1","739/0"],"_minimal":["331/0","349/1","349/0","351/0"],"_performed":["331/0","775/1"],"_encoding":["331/0","384/2","385/0","509/0","510/0","511/0","512/0","513/0","565/0","836/1"],"_externallyownedaccount":["331/0"],"_hd":["334/1","334/2","569/0","570/0","572/0","577/0","578/0","579/0","580/0","581/0","582/0","583/0","584/0","585/0","586/0","587/0","588/0","589/0","844/0","880/0"],"_encode":["334/2","335/0","339/0","384/1","385/3","396/0","397/0","398/0","399/0","447/0","510/0","512/0","514/0","559/0","642/2","648/0","667/1","695/1","836/3"],"_extended":["334/2","576/0","587/0","820/1","828/1"],"_abicoder":["335/0","336/0","337/0","338/0","339/0","340/0"],"_collection":["335/0","353/0","384/0","731/1","733/1","796/0","844/1","876/2"],"_coders":["335/0"],"_decode":["335/0","337/0","340/0","384/1","400/0","401/0","402/0","403/1","447/0","509/0","511/0","515/0","836/3"],"_formats":["335/0","341/0","347/0","385/3","419/0"],"_interoperate":["335/0","385/3"],"_never":["335/1","336/0","602/0","603/0","754/0","765/0","766/0","775/2"],"_greatly":["335/1"],"_coder":["335/0","337/1","337/0","338/0","339/0","340/0"],"_coercion":["336/0"],"_loaded":["336/0"],"_universally":["336/0"],"_those":["336/1","848/1","867/4","869/0","882/1"],"_coerced":["336/1"],"_decoded":["336/1","400/0","401/0","402/0","412/0","509/0","511/0","649/0"],"_coercefunc":["337/0"],"_describing":["337/1","345/1"],"_throws":["337/2","606/0","609/0","654/1"],"_contain":["337/2","522/1","648/0","799/0","822/2","824/1","827/1"],"_errors":["337/2","420/1","461/5","595/0","600/0","610/0","610/1","612/0","613/0","614/0","615/0","616/0","617/0","618/0","619/0","620/0","621/0","622/0","623/0","624/0","625/0","626/0","627/0","628/0","629/0","631/0","632/0","633/0","662/1","854/0"],"_coerce":["337/0"],"_func":["337/0","698/0","699/0"],"_imported":["338/0"],"_defaultabicoder":["338/0"],"_according":["339/0","340/0","566/0","567/0","568/0","590/0","591/0","716/0","810/0"],"_paramtype":["339/0","340/0","347/0","356/0","369/0","372/0","373/0","374/0","375/0","376/0","377/0","378/0","379/0","381/0","382/0","383/0"],"_expand":["341/0"],"_section":["341/0","460/0","784/1","792/1","792/2","798/1","802/0","802/3","832/0","845/0","863/2","876/0"],"_b":["341/0","342/0","343/0","345/0","346/0","462/0","463/0","618/0","629/0","630/0","664/0","742/0","807/0","808/0","880/0"],"_compiler":["343/0","345/0","386/1","836/6"],"_j":["343/0","345/0"],"_fragments":["344/0","353/0","384/0","384/1","387/0","388/0","389/0","390/0","392/0","393/0","394/0","395/0","397/0","398/0","399/0","400/0","401/0","402/0","418/0","801/0"],"_fragment":["345/1","347/0","348/0","349/1","349/0","350/0","351/0","352/0","353/0","354/0","355/0","356/0","357/0","358/0","359/0","360/0","361/0","362/0","363/0","364/0","365/0","366/0","367/0","368/0","369/0","370/0","371/0","387/0","388/0","389/0","390/0","392/0","393/0","394/0","395/0","397/0","398/0","399/0","400/0","401/0","402/0","408/0","413/0","418/0","418/6","801/1","801/3","853/7","856/0"],"_deserialized":["345/2"],"_article":["346/1"],"_humanb":["346/0"],"_modifiers":["348/0","352/0"],"_white":["348/1"],"_space":["348/1","544/0"],"_aid":["348/1"],"_readability":["348/1"],"_fragmenttypes":["348/0","349/0","350/0","351/0"],"_except":["349/0","468/0","472/0","874/0"],"_unnecessary":["349/0","478/0","536/1"],"_whitespace":["349/0","571/1","716/0","717/0","737/1","819/0"],"_storing":["349/1"],"_fully":["349/1","403/1","421/1","657/1","688/2","844/1"],"_reconstruct":["349/1"],"_original":["349/1","352/0","853/2"],"_thinsp":["349/1"],"_stringify":["350/0"],"_sighash":["351/0","352/0","381/0","394/0","405/0","413/0","415/0","418/4","418/5"],"_insufficient":["352/0","625/0","628/1","688/2"],"_discards":["352/0","788/0"],"_anonymous":["352/0","364/0","364/1"],"_statemutability":["352/0","361/0","368/0"],"_constructorfragment":["354/1","362/0","363/0","390/0"],"_inputs":["356/0"],"_param":["356/0","369/0","372/0","373/0","374/0","375/0","376/0","377/0","378/0","379/0","381/0","382/0","383/0"],"_objectorstring":["357/0","362/0","365/0","370/0","382/0"],"_tra":["358/0","362/0","363/0","365/0","366/0","370/0","371/0","380/0","381/0","382/0","383/0","465/0","646/0"],"_lal":["358/0","363/0","366/0","371/0"],"_al":["358/0","363/0","366/0","371/0"],"_isfragment":["358/0"],"_receive":["360/0","421/2","799/3"],"_endowment":["360/0"],"_msg":["360/1"],"_payable":["360/0","361/2","368/2"],"_mutability":["361/0","367/2","368/0"],"_nonpayable":["361/2","368/2"],"_la":["362/0","365/0","370/0","380/0","381/0","382/0","383/0","465/0","646/0"],"_isconstructorfragment":["363/0"],"_inject":["364/1","794/1"],"_topic0":["364/1"],"_eventfragment":["365/0","366/0","376/1","388/0","393/0","408/0"],"_iseventfragment":["366/0"],"_pure":["367/2","368/2"],"_view":["367/2","368/2"],"_outputs":["369/0","853/7","866/5"],"_functionfragment":["370/0","371/0","389/0","392/0","413/0"],"_isfunctionfragment":["371/0"],"_unnamed":["373/1","374/1"],"_tuple":["374/0","375/3","379/0","379/1"],"_symbols":["374/0"],"_primitive":["375/1"],"_uint256":["375/2","410/2","416/2","418/3","500/0"],"_arrays":["375/3","378/0","378/1","513/0"],"_basetype":["375/0"],"_marked":["376/0"],"_applies":["376/1"],"_children":["377/0","579/0","588/1"],"_arraychildren":["377/0"],"_arraylength":["378/0"],"_components":["379/0","384/0","403/1","515/1","537/0","586/1","775/5","853/7"],"_outputtype":["381/0"],"_isparamtype":["383/0"],"_organize":["384/1"],"_component":["384/1","514/1","518/0","585/1"],"_decoding":["384/2","385/0","836/1"],"_convenient":["384/2"],"_framework":["384/3","797/0","853/7"],"_tool":["384/3","731/0","792/0","793/2"],"_find":["384/3","558/2"],"_abstracts":["385/0"],"_standards":["385/1"],"_organically":["385/1","789/0"],"_evolved":["385/1"],"_side":["385/1","464/1"],"_languages":["385/1","386/1","720/0","816/0","866/4","868/0"],"_adopted":["385/1"],"_remain":["385/1","866/0"],"_understand":["385/2","775/3","785/0","785/2"],"_agreed":["385/3"],"_expect":["385/3"],"_parsed":["386/1","507/0"],"_typing":["386/2","420/1"],"_referenced":["386/2"],"_getfunction":["392/0"],"_getevent":["393/0"],"_selector":["394/0","415/0","418/5","866/6","879/0"],"_getsighash":["394/0"],"_geteventtopic":["395/0"],"_encoded":["396/0","397/0","398/0","399/0","510/0","512/0","514/0","515/0","556/0","566/0","567/0","568/0","649/0","684/1"],"_concatenated":["396/0","471/0"],"_pass":["396/0","666/2","667/2","670/1","738/0","836/4"],"_encodedeploy":["396/0"],"_nibble":["397/1","422/1","471/0"],"_encodefiltertopics":["397/0"],"_encodefunctiondata":["398/0"],"_normally":["399/0"],"_authors":["399/1","847/4"],"_encodefunctionresult":["399/0"],"_decodeeventlog":["400/0"],"_inspecting":["401/1"],"_decodefunctiondata":["401/0"],"_decodefunctionresult":["402/0"],"_parselog":["404/0"],"_logdescription":["404/0","407/0","408/0","409/0","410/0","411/0"],"_parsetransaction":["405/0","696/0"],"_transactiondescription":["405/0","412/0","413/0","414/0","415/0","416/0","417/0"],"_positional":["406/0","406/1"],"_argument":["406/0","603/0","606/0","620/0","620/1","621/0","623/0","751/1","752/1","842/0"],"_additionally":["406/1","695/1","787/3"],"_reserved":["406/2","670/0"],"_collision":["406/3"],"_matched":["415/0"],"_ambiguous":["418/1","642/2","675/0"],"_normalized":["418/3","470/0","487/0","560/1","642/2","652/0"],"_uint":["418/3","418/4"],"_topichash":["418/4"],"_referred":["418/5"],"_xa9059cbb":["418/6"],"_checksumming":["419/0"],"_addresszero":["419/1","492/0"],"_nibbles":["420/0","468/0","469/0","487/0","492/0","493/0","637/1","638/1","737/0"],"_mixed":["420/0","420/1","422/1"],"_checksum":["420/1","420/2","421/0","422/0","422/1","592/0"],"_pattern":["420/1"],"_uppercase":["420/1"],"_lowercase":["420/1"],"_letters":["420/1","822/2","822/5"],"_risk":["420/1"],"_introduced":["420/1"],"_cut":["420/1"],"_paste":["420/1"],"_icap":["421/0","421/2","421/3","423/0"],"_early":["421/0","730/3","817/1"],"_introduce":["421/0"],"_banking":["421/0"],"_industry":["421/0"],"_iban":["421/0","421/1"],"_country":["421/0"],"_xe":["421/0"],"_encodes":["421/1","559/0"],"_fit":["421/1","647/1"],"_adapted":["421/1"],"_large":["421/1","461/7","594/3","844/1","866/4","876/2"],"_preferred":["421/1","850/0"],"_select":["421/1"],"_compatibly":["421/1"],"_general":["421/2","787/2","789/4","792/2","796/0","843/1"],"_longer":["421/2","481/1","486/1","792/2","855/1","876/2"],"_widely":["421/2"],"_anymore":["421/2"],"_geticapaddress":["421/3","423/0"],"_c":["421/0","619/0","623/0","624/0","625/0","627/0","628/0","629/0","657/0","659/0","665/0","669/0","751/0","809/0","834/0","840/0"],"_hexstring":["422/1","431/0","468/0","469/0","477/0","478/0","485/0","532/0"],"_invalidargument":["422/1","475/1","481/1","486/1"],"_supports":["423/1","462/3","768/0","802/2","806/1","807/1","808/1","810/1","812/2"],"_restrictions":["423/1"],"_icapaddress":["423/0"],"_isaddress":["424/0"],"_publicorprivatekey":["425/0"],"_compressed":["425/1","638/0","645/1","645/0","844/1"],"_derivation":["425/1","748/0","785/0"],"_computeaddress":["425/0"],"_ecdsa":["426/0"],"_digest":["426/0","547/0","548/0","549/0","550/0","554/0","639/0","644/1","644/0"],"_recoveraddress":["426/0"],"_create2":["428/0"],"_getcreate2address":["428/0"],"_salt":["428/0"],"_initcodehash":["428/0"],"_safely":["429/1","430/0","461/8","836/5"],"_mathematical":["429/1","447/0","461/8"],"_magnitude":["429/1"],"_take":["430/0","785/1","786/2","786/5","786/0"],"_ambiguously":["430/0"],"_numberish":["430/0","437/0","478/0","678/0","679/0","681/0"],"_bignumberish":["430/0","501/3","678/0","679/0","681/0"],"_byteslike":["432/0","467/0","479/0","482/0","514/1","680/0","690/0"],"_uint8array":["432/0","476/0","479/0","480/0","481/0","489/0","509/0","511/0","651/0","873/0","874/0"],"_bigint":["435/0"],"_environments":["435/0","867/6"],"_int":["435/0"],"_instances":["436/0","519/0","558/1","850/0","854/0"],"_abignumberish":["437/0","478/0"],"_othervalue":["439/0","440/0","441/0","450/0","451/0","452/0","453/0","454/0","525/0","526/0","527/0","528/0"],"_times":["441/0","527/0","710/0","772/1"],"_mul":["441/0","527/0"],"_div":["442/0","443/0","528/0"],"_divisor":["442/0","443/0","518/0"],"_remainder":["443/0"],"_mod":["443/0","537/2"],"_power":["444/0"],"_exponent":["444/0"],"_pow":["444/0"],"_absolute":["445/0","741/0"],"_abs":["445/0"],"_beyond":["446/0"],"_bitcount":["446/0"],"_least":["446/0","789/1","873/0","875/0"],"_significant":["446/0"],"_zero":["446/0","455/0","481/0","486/0","492/0","493/0","496/0","530/0","594/1","619/1","625/2","763/1","763/0"],"_mask":["446/0"],"_two":["447/0","463/1","498/0","658/2","695/1"],"_complement":["447/0","448/0","449/0"],"_elegant":["447/0"],"_width":["447/0","518/0","537/0","537/1","537/2","537/3","538/1","540/0"],"_while":["447/0","462/4","836/5","853/5","867/0"],"_efficiently":["447/0"],"_preserving":["447/0"],"_twos":["448/0","449/0"],"_bitwidth":["448/0","449/0"],"_fromtwos":["448/0"],"_totwos":["449/0"],"_eq":["450/0"],"_lt":["451/0"],"_le":["452/0"],"_lte":["452/0"],"_gt":["453/0"],"_ge":["454/0"],"_gte":["454/0"],"_iszero":["455/0","530/0"],"_greater":["456/1","666/1"],"_max":["456/1","500/0"],"_integer":["456/1","461/5"],"_min":["456/1","789/3"],"_tonumber":["456/0"],"_tostring":["457/0","533/0"],"_prefixed":["458/0","554/1","647/0"],"_tohexstring":["458/0","532/0"],"_isbignumber":["459/0"],"_couple":["460/0"],"_questions":["460/0"],"_come":["460/0"],"_frequently":["460/0","464/0","730/4","849/0"],"_problem":["461/0","775/3","789/4"],"_dealing":["461/0","462/2"],"_concept":["461/0"],"_currencies":["461/1"],"_broken":["461/1","462/6","786/6"],"_granularity":["461/1"],"_cents":["461/2"],"_dollar":["461/2"],"_ieee":["461/4"],"_double":["461/4"],"_precision":["461/4"],"_floating":["461/4","534/0"],"_holes":["461/5","797/3"],"_problematic":["461/5","464/1"],"_because":["461/5","463/0","663/0"],"_rounding":["461/5","534/1"],"_demonstrate":["461/6"],"_issue":["461/6","756/5","789/4","860/1","863/3","866/3","867/3","872/1"],"_consider":["461/6"],"_just":["461/0","594/0","667/2"],"_stored":["461/7","746/0"],"_manipulated":["461/7","799/1"],"_parseether":["461/8","508/0"],"_vaporstring":["461/8"],"_formatether":["461/8","506/0"],"_representations":["461/8","667/0"],"_displayed":["461/8"],"_entered":["461/8"],"_handled":["461/8"],"_everyone":["462/0"],"_favourite":["462/0"],"_someone":["462/0","462/6"],"_becomes":["462/0","464/1","872/1"],"_identity":["462/0","546/0"],"_editor":["462/0"],"_vi":["462/0"],"_emacs":["462/0"],"_npm":["462/1","594/3"],"_biggest":["462/2"],"_differences":["462/2","863/2"],"_nature":["462/2"],"_capturing":["462/3"],"_immutability":["462/3"],"_protects":["462/3"],"_us":["462/3","464/0","867/4"],"_mistakes":["462/3"],"_myriad":["462/3"],"_second":["462/4","735/1"],"_rare":["462/4","667/1","692/3","853/2"],"_easier":["462/5","822/0","836/1","871/0"],"_swap":["462/5"],"_impacting":["462/5"],"_consumers":["462/5"],"_bn":["462/6","462/0","463/0"],"_greatest":["462/6"],"_denominator":["462/6"],"_replacing":["462/6","628/0"],"_anyone":["462/6"],"_depending":["462/6","730/5"],"_bigdecimal":["462/0"],"_elliptic":["463/0","693/0","694/0","695/0"],"_regardless":["463/1","629/3"],"_we":["463/1","623/0","647/1","647/2","789/4","842/1","842/2","866/3","867/0","867/4","872/0"],"_leverage":["463/1"],"_adding":["463/1","789/3","839/0","842/2"],"_mean":["463/1"],"_offering":["463/1"],"_saved":["463/2"],"_about":["463/2","628/2","775/3","787/0","856/0"],"_kb":["463/2","844/1"],"_size":["463/2","720/1","789/3"],"_separate":["463/2","876/2"],"_purposes":["463/2","537/5"],"_comes":["464/0","836/6"],"_desire":["464/0"],"_global":["464/0","596/0","734/2","854/1"],"_live":["464/1"],"_fact":["464/2"],"_plus":["464/3"],"_break":["464/3","792/2"],"_tries":["464/3"],"_logic":["464/3","501/0","741/2"],"_prototype":["464/4"],"_tomycustombignumber":["464/4"],"_globally":["464/4"],"_manipulation":["465/0"],"_typedarray":["466/0"],"_prefix":["469/0","513/0","664/0","669/0","669/1","672/0","673/0","674/0","737/0","792/2"],"_followed":["469/0","537/1"],"_insensitive":["469/1"],"_hexadecimal":["469/1"],"_co":["470/0"],"_ordinate":["470/0"],"_compact":["470/0","738/2","843/0"],"_recoveryparam":["470/0","472/2","642/2"],"_signaturelike":["472/0"],"_redundant":["472/0","734/2"],"_likewise":["472/2"],"_isbytes":["473/0"],"_isbyteslike":["474/0"],"_ishexstring":["475/0"],"_converts":["476/0","477/0","478/0","738/0"],"_datahexstringorarrayish":["476/0"],"_arrayish":["476/0","477/0"],"_uint8":["476/0","479/0","480/0","481/0","489/0","651/0","873/0"],"_hexstringorarrayish":["477/0"],"_hexlify":["477/0"],"_leading":["478/0","480/0","485/0"],"_zeros":["478/0","480/0","485/0"],"_hexvalue":["478/0"],"_concatenates":["479/0","482/0"],"_arrayofbyteslike":["479/0","482/0"],"_concat":["479/0","482/0"],"_abtyeslike":["480/0"],"_strip":["480/0","485/0"],"_stripzeros":["480/0"],"_abyteslike":["480/0","481/0","481/1","483/0","484/0","484/1","485/0","486/0","486/1","510/0","512/0","515/0","521/0","547/0","548/0","549/0","550/0","575/0","649/0","654/0","696/0"],"_prepended":["481/0"],"_already":["481/1","486/1","627/0","628/0","663/0","663/1","671/0","745/1","775/3","827/2"],"_pad":["481/0","486/0"],"_zeropad":["481/0"],"_hexconcat":["482/0"],"_hexdatalength":["483/0"],"_slice":["484/0","755/0"],"_endoffset":["484/0","484/1"],"_hexdataslice":["484/0"],"_hexstripzeros":["485/0"],"_hexzeropad":["486/0"],"_asignaturelike":["487/0","488/0"],"_concatenating":["487/0"],"_join":["487/0","717/0"],"_joinsignature":["487/0"],"_expanded":["488/0","784/1","843/1"],"_split":["488/0","653/1","716/0"],"_splitsignature":["488/0"],"_asignaturelikeorbyteslike":["488/0"],"_randombytes":["489/0","873/0","874/0"],"_shuffled":["490/0"],"_fisher":["490/0"],"_yates":["490/0"],"_shuffle":["490/0"],"_contants":["491/0"],"_commonly":["491/0","655/0"],"_hashzero":["493/0"],"_xi":["494/0"],"_vaporsymbol":["494/0"],"_negativeone":["495/0"],"_weiperether":["499/0"],"_maxuint256":["500/0"],"_friendly":["501/0"],"_usually":["501/0","536/1","741/0","755/0","785/3"],"_machine":["501/0"],"_maths":["501/0"],"_prices":["501/1"],"_gwei":["501/1","628/2"],"_display":["501/0"],"_bitcoin":["502/3","502/4"],"_satoshi":["502/3","502/4"],"_grouped":["504/0"],"_digits":["504/0","505/0","507/0"],"_separated":["504/0","571/1"],"_commify":["504/0"],"_textdata":["509/0","511/0"],"_base58":["509/0","510/0"],"_uin8":["509/0","511/0"],"_uin8array":["509/0","511/0"],"_base64":["511/0","512/0"],"_recursive":["513/0","516/0","872/3"],"_nested":["513/0"],"_structures":["513/0","516/0","556/1"],"_structured":["514/0","515/0","810/0"],"_rlp":["514/0","515/0","684/1"],"_r":["514/0","515/0","601/0","602/0","614/0","616/0","617/0","618/0","619/0","620/0","621/0","623/0","626/0","627/0","628/0","629/0","632/0","633/0","664/0","666/0","667/0","668/0","670/0","732/0","805/0","806/0","807/0","808/0","810/0","834/0","872/0"],"_l":["514/0","515/0","613/0","619/0","620/0","624/0","628/0","629/0","667/0","739/0","742/0","751/0","802/0","803/0","804/0"],"_dataobject":["514/0","515/0"],"_recursively":["516/3","564/0","811/0"],"_nesting":["516/3"],"_xdead":["517/0"],"_xbeef":["517/0"],"_fixednumber":["518/0","519/0","519/1","520/0","521/0","522/0","523/0","524/0","525/0","526/0","527/0","528/0","529/0","530/0","531/0","532/0","533/0","534/0","535/0","536/1"],"_fractional":["518/0"],"_frombytes":["521/0"],"_permits":["522/1","846/0"],"_fromstring":["522/0"],"_fromvalue":["523/0"],"_fixedformat":["524/0","536/0","538/0","538/1","539/0","540/0","541/0","542/0"],"_fixedvalue":["525/0","526/0","527/0","528/0","529/0","531/0"],"_addunsafe":["525/0"],"_subunsafe":["526/0"],"_mulunsafe":["527/0"],"_divunsafe":["528/0"],"_round":["529/0"],"_toformat":["531/0"],"_approximate":["534/1"],"_float":["534/0"],"_tounsafefloat":["534/0"],"_isfixednumber":["535/0"],"_composed":["537/0","657/0","657/1","659/0"],"_three":["537/0"],"_ness":["537/0","539/0"],"_begins":["537/1","637/1","638/1","809/2"],"_ufixed":["537/1","537/5"],"_congruent":["537/2"],"_larger":["537/3"],"_fixed128x18":["537/5","538/0"],"_wide":["537/5","846/0"],"_fixed32x0":["537/5"],"_int32":["537/5"],"_ufixed32x0":["537/5"],"_uint32":["537/5"],"_shorthand":["537/5","543/0"],"_ufixed128x18":["537/5"],"_points":["541/0","652/0","695/1","789/2","867/4"],"_recreate":["542/0"],"_fixed128x80":["543/0"],"_hashing":["544/0","565/0","866/6"],"_algorithms":["544/0","565/0"],"_complex":["544/0","775/1"],"_usages":["544/0"],"_facilitate":["544/0"],"_cryptographic":["545/0"],"_family":["545/0"],"_computes":["546/0","554/0","640/2","645/0","697/0","785/3"],"_keccak256":["546/0","547/0","567/0","684/1","865/0"],"_ripemd":["548/0"],"_ripemd160":["548/0"],"_sha2":["549/0","550/0","552/0","553/0","568/0"],"_sha256":["549/0","552/0","568/0"],"_sha512":["550/0","553/0"],"_hmac":["551/0"],"_algorithm":["551/0","552/0","553/0","565/1","785/3","786/0","786/5","786/7","788/1","881/0"],"_computehmac":["551/0"],"_supportedalgorithm":["552/0","553/0"],"_personal":["554/0","554/1"],"_x19vapory":["554/1"],"_hashmessage":["554/0"],"_namehash":["555/0","881/0"],"_typeddataencoder":["556/0","557/2","558/0","559/0","560/0","561/0","562/0","563/0","564/0"],"_members":["556/1"],"_mapping":["556/3"],"_descriptions":["556/3"],"_eip712domain":["556/4"],"_unless":["556/4","682/1","775/2"],"_encoder":["556/0","558/0","559/0","560/0","561/0","562/0","563/0","564/0"],"_exported":["557/2","557/0","866/1"],"_below":["558/2","611/0","730/0","787/0","798/1"],"_hashed":["559/0","563/0","655/0"],"_eth":["560/0"],"_getpayload":["560/0"],"_constructs":["561/0"],"_directed":["561/0"],"_acyclic":["561/0"],"_graph":["561/0"],"_primarytype":["561/0"],"_payloads":["561/0"],"_primary":["561/0"],"_getprimarytype":["561/0"],"_hashdomain":["563/0"],"_leaf":["564/0"],"_replacedwith":["564/0"],"_resolvenames":["564/0"],"_packencoded":["565/0"],"_tightly":["565/0","565/1"],"_packed":["565/0","566/0","567/0","568/0","882/0"],"_packing":["565/1"],"_respective":["566/0","567/0","568/0"],"_pack":["566/0"],"_soliditypack":["566/0"],"_soliditykeccak256":["567/0"],"_soliditysha256":["568/0"],"_bip32":["569/0"],"_bip":["569/0","590/0","591/0","844/0","880/0"],"_whatnot":["569/0"],"_defaultpath":["570/0"],"_words":["571/1","647/0","717/0","718/0"],"_locale":["571/1","573/0","713/0","716/0","717/0","857/0"],"_hdnode":["574/0","575/0","576/0","576/1","577/0","578/0","579/0","580/0","581/0","582/0","583/0","584/0","585/0","586/0","587/0","588/0","589/0"],"_seed":["575/0","590/0","872/2","872/3","873/0","874/0","875/0"],"_fromseed":["575/0"],"_extendedkey":["576/0","576/1","587/0"],"_neutered":["576/1"],"_able":["576/1","786/5"],"_fromextendedkey":["576/0","587/1"],"_compresses":["578/0"],"_fingerprint":["579/0","580/0","580/1"],"_together":["579/0","717/0","779/3"],"_collisions":["579/0"],"_occur":["579/0","619/1","712/0","730/4","853/4"],"_software":["579/0","847/1","847/2","847/3","847/4"],"_parentfingerprint":["580/0"],"_ec":["584/0"],"_multiply":["584/0"],"_ability":["584/0","840/2"],"_derive":["584/0","589/0"],"_hardened":["584/0","588/1"],"_chaincode":["584/0"],"_last":["585/1","815/1"],"_depth":["586/0"],"_serialization":["587/1","697/2"],"_serializing":["587/1"],"_deserializing":["587/1"],"_preserved":["588/0"],"_leak":["588/1","775/1"],"_derived":["588/1"],"_neuter":["588/0"],"_deriving":["589/0"],"_derivepath":["589/0"],"_mnemonictoseed":["590/0"],"_mnemonictoentropy":["591/0"],"_testing":["592/0","789/3","866/0","871/0","876/1"],"_isvalidmnemonic":["592/0"],"_extensively":["593/0"],"_few":["594/0","733/0","756/8","786/5","789/2","790/0"],"_logging":["594/0","611/0"],"_standardize":["594/0"],"_facilities":["594/0"],"_logger":["594/1","595/0","596/0","597/0","598/0","599/0","601/0","602/0","603/0","605/0","606/0","607/0","608/0","609/0","610/0","611/0","613/0","614/0","615/0","616/0","617/0","618/0","619/0","620/0","621/0","622/0","623/0","624/0","625/0","626/0","627/0","628/0","629/0","630/0","631/0","632/0","633/0","634/0","854/0","854/1"],"_dependencies":["594/1","789/3","839/1","839/0","844/1","846/0"],"_light":["594/1"],"_censorship":["594/2","600/0","610/0"],"_relies":["594/2"],"_bundled":["594/3"],"_bundling":["594/4"],"_properly":["594/4","872/3"],"_singleton":["596/0"],"_globallogger":["596/0"],"_info":["598/0","631/0","698/0","764/0"],"_warnings":["599/0","631/0","632/0","740/1","740/0","775/5"],"_warn":["599/0"],"_honor":["600/0"],"_detecting":["600/0"],"_processing":["600/0","698/0"],"_rejected":["601/1","663/0"],"_makeerror":["601/0"],"_u":["601/0","602/0","615/0","616/0","617/0","618/0","619/0","620/0","621/0","623/0","625/0","628/0","629/0","630/0","662/0","665/0","666/0","668/0","669/0","670/0","671/0","732/0","739/0","806/0"],"_k":["601/0","602/0","616/0","626/0","659/0","660/0","739/0"],"_w":["601/0","602/0","616/0","622/0","626/0","632/0"],"_throwerror":["602/0","766/0"],"_throwargumenterror":["603/0"],"_actions":["604/0"],"_validation":["604/0","626/0"],"_kind":["605/0","607/0","847/3"],"_checknew":["605/0","607/0"],"_ensuring":["605/1"],"_checkabstract":["605/0"],"_expectedcount":["606/0"],"_unexpected":["606/0","623/0","669/0","789/3"],"_checkargumentcount":["606/0"],"_callers":["607/1"],"_correctly":["608/0","653/0","718/0","799/3"],"_functioning":["608/0"],"_normalize":["608/0"],"_unsupported":["608/1","617/0","775/5"],"_checknormalize":["608/0"],"_fault":["609/0","619/0"],"_uint53":["609/0"],"_checksafeuint53":["609/0"],"_preventing":["610/0"],"_uncensored":["610/0"],"_prevents":["610/1"],"_leaking":["610/1"],"_masking":["610/1"],"_making":["610/2","735/0","750/0","791/0","794/1"],"_difficult":["610/2","748/0","872/1"],"_setcensorship":["610/0"],"_censor":["610/0"],"_permanent":["610/0"],"_suppress":["611/0"],"_particular":["611/0","847/3"],"_setloglevel":["611/0"],"_loglevel":["611/0"],"_codes":["612/0"],"_implemented":["613/0"],"_communicating":["614/0"],"_occurred":["615/0"],"_cause":["618/0","756/5","775/1","775/5"],"_buffer":["618/0"],"_f":["618/0","619/0","625/0","631/0","634/0","657/0","658/0","659/0","660/0","662/0","664/0","666/0","671/0","732/0","739/0","810/0"],"_overrun":["618/0","668/0"],"_done":["619/0","793/2","856/0"],"_overflow":["619/1"],"_arithmetic":["619/1"],"_underflow":["619/1"],"_division":["619/1"],"_sensitive":["620/2"],"_redacted":["620/2"],"_g":["620/0","621/0","622/0","623/0","629/0","630/0","632/0","665/0","666/0","667/0","670/0","739/0","806/0","872/0"],"_x":["623/0","624/0","627/0","664/0","669/0"],"_getter":["624/0"],"_resulted":["624/0"],"_revert":["624/0","733/4"],"_attempting":["625/0","629/3","711/0","712/0"],"_costs":["625/0"],"_intrinsic":["625/1","625/2"],"_expired":["627/0"],"_yet":["628/0","756/4"],"_bribe":["628/1"],"_prefer":["628/1"],"_replacement":["628/2","628/0","674/0"],"_underpriced":["628/0"],"_unable":["629/1"],"_unwilling":["629/1"],"_predict":["629/1"],"_situation":["629/2"],"_unpredictable":["629/0"],"_levels":["630/0","631/0","632/0","633/0","634/0"],"_informational":["631/0"],"_signingkey":["635/0","636/0","637/0","638/0","639/0","640/0","641/0"],"_x04":["637/1","644/1"],"_x02":["638/1"],"_x03":["638/1"],"_compressedpublickey":["638/0"],"_signdigest":["639/0"],"_ecdh":["640/0"],"_otherkey":["640/0","640/1"],"_practice":["640/2","775/4","787/0","831/0"],"_symmetric":["640/2"],"_computesharedsecret":["640/0"],"_anobject":["641/0"],"_issigningkey":["641/0"],"_producing":["642/0"],"_canonical":["642/1","659/0","659/1","660/0","661/0"],"_completely":["642/2","786/4","789/1","844/1"],"_verifymessage":["642/0"],"_verifytypeddata":["643/0"],"_gave":["644/1"],"_recoverpublickey":["644/0"],"_compressing":["645/0"],"_computepublickey":["645/0"],"_deal":["647/1","847/1"],"_prefixing":["647/1"],"_terminate":["647/1","817/1"],"_word":["647/1","647/2","714/0","715/0","716/0","844/0"],"_termination":["647/2"],"_bytes32string":["647/0"],"_fewer":["648/0","730/6"],"_international":["648/0"],"_represented":["649/0","654/0"],"_parsebytes32string":["649/0"],"_exceeds":["650/1"],"_formatbytes32string":["650/0"],"_normalizing":["651/0","655/0"],"_unicodenormalizationform":["651/0","652/0","655/0","656/0","657/0","658/0","659/0","660/0"],"_toutf8bytes":["651/0"],"_codepoints":["652/0","657/1","658/1","658/2","662/0","663/0","666/0"],"_toutf8codepoints":["652/0"],"_splits":["653/0"],"_perceived":["653/0"],"_character":["653/0","657/1","658/1","658/2","667/0","667/1","674/0","716/0"],"_codepoint":["653/0","657/2","658/2","659/2","663/0","666/0","666/1","667/2","670/0"],"_accounting":["653/0"],"_surrogate":["653/0","653/1","670/0","670/1","672/0"],"_pairs":["653/0","653/1","670/0","672/0","739/0"],"_confused":["653/1"],"_destroys":["653/1"],"_splitting":["653/1"],"_codeunit":["653/1"],"_onerror":["654/1","654/0"],"_toutf8string":["654/0"],"_forms":["655/0","877/0"],"_unicode":["655/0","656/0","657/0","658/0","659/0","660/0"],"_normalization":["655/0","656/0","657/0","658/0","659/0","660/0"],"_eacute":["657/2","658/2"],"_x00e9":["657/2"],"_nfc":["657/0"],"_decomposed":["658/0","660/0"],"_compose":["658/1"],"_x0065":["658/2"],"_letter":["658/2","659/2","822/2","822/5"],"_x0301":["658/2"],"_special":["658/2","840/2","853/7","855/1"],"_diacritic":["658/2"],"_acute":["658/2"],"_accent":["658/2"],"_nfd":["658/0"],"_equivalence":["659/0","660/0","661/0"],"_folds":["659/1"],"_syntactic":["659/1"],"_semantic":["659/1"],"_roman":["659/2"],"_numeral":["659/2"],"_x2160":["659/2"],"_folded":["659/2","661/0"],"_capital":["659/2"],"_x0049":["659/2"],"_nfkc":["659/0","660/1"],"_nfkd":["660/0"],"_thus":["661/0"],"_achieve":["661/0"],"_homoglyph":["661/0"],"_attacks":["661/0","692/1"],"_converting":["662/0"],"_possibility":["662/0"],"_sequences":["662/0","667/0","667/1","672/0","673/0","674/0"],"_handling":["662/1","662/0","671/0","775/0","855/1"],"_encountered":["663/0","664/0","801/3"],"_badcodepoint":["663/0"],"_skip":["663/1","794/1"],"_consumed":["663/1","688/2","752/1"],"_errorfunction":["663/0"],"_bad":["663/0","664/0","669/0","669/1"],"_sequence":["664/0","665/0","668/0","669/0","672/0"],"_utf8errorreason":["664/0","665/0","666/0","667/0","668/0","669/0","670/0"],"_begun":["665/0"],"_did":["665/0"],"_continuation":["665/0","665/1","669/0","673/0","674/0","817/2"],"_ofset":["665/1"],"_continue":["665/0","669/0","842/2"],"_x10ffff":["666/1"],"_badcountpoint":["666/2","667/2","670/1"],"_variable":["667/0","817/2","822/2","822/4","822/5"],"_overlong":["667/0","667/1","672/0","673/0"],"_distinguished":["667/0"],"_formed":["667/0"],"_circumvent":["667/1"],"_produced":["667/1"],"_lazy":["667/1"],"_terminating":["667/1"],"_char":["667/1"],"_arrived":["667/2"],"_through":["667/2","748/0","769/3","794/0"],"_remaining":["668/0","787/2","790/1"],"_differently":["669/0"],"_want":["669/1","872/0"],"_trap":["669/1"],"_f16":["670/0"],"_utf16":["670/0"],"_funcs":["672/0","673/0","674/0"],"_utf8errorfuncs":["672/0","673/0","674/0"],"_consuming":["673/0","674/0"],"_final":["673/0","738/0"],"_permit":["673/0","847/1"],"_ignore":["673/0","740/0","836/5"],"_replace":["674/0"],"_fffd":["674/1"],"_flexible":["675/0"],"_disabled":["682/1","883/0"],"_identifier":["684/0"],"_order":["687/1","771/0","773/0","836/3"],"_replayability":["687/1"],"_unused":["688/2"],"_refunded":["688/2"],"_complete":["688/2","756/7","756/9","843/0","844/1"],"_effects":["688/2"],"_replay":["692/1","692/3"],"_unintended":["692/2"],"_almost":["692/3","867/1"],"_portion":["693/0","694/0","695/0","806/1"],"_curve":["693/0","694/0","695/0"],"_accurately":["693/1"],"_coordinate":["693/1","695/1"],"_refine":["695/1"],"_parses":["696/0"],"_present":["697/1","769/1","770/0","811/0","848/0","866/3"],"_explicitly":["697/4"],"_implicitly":["697/4"],"_mismatch":["697/5"],"_serializetransaction":["697/0"],"_fetch":["698/0","835/0"],"_content":["698/0","820/0","820/1","822/0","822/1","822/3"],"_urlorconnectioninfo":["698/0"],"_body":["698/0","801/1","801/2","801/3","802/2","803/2","804/1","805/0","805/1","806/1","807/1","808/1","809/1","810/0","811/0","811/1","812/2","813/1","817/0","817/2"],"_processfun":["698/0"],"_fetchjson":["698/0"],"_processfunc":["698/0"],"_repeatedly":["699/0"],"_pollfunc":["699/0","711/0","712/0"],"_polloptions":["699/0"],"_undefined":["699/0","710/0"],"_poll":["699/0","712/0"],"_authentication":["701/0","701/2","702/0","702/2","703/0"],"_insecure":["703/0"],"_allowinsecureauthentication":["703/0"],"_rejecting":["704/0"],"_headers":["705/0"],"_allowed":["706/0","751/1","756/6"],"_elapse":["706/0"],"_triggering":["706/0"],"_exponential":["707/0","708/0","709/0"],"_backoff":["707/0","708/0","709/0"],"_floor":["707/0"],"_ceiling":["708/0"],"_interval":["709/0"],"_calculation":["709/0"],"_retry":["710/0"],"_retrylimit":["710/0"],"_polling":["711/0","712/0"],"_onceblock":["711/0"],"_oncepoll":["712/0"],"_getword":["714/0"],"_getwordindex":["715/0"],"_individual":["716/0","730/1"],"_joining":["717/0"],"_map":["718/0"],"_directions":["718/0"],"_lists":["718/0","813/0","813/1"],"_validate":["718/1","756/8","769/4"],"_wordlists":["718/0","719/0","720/0","721/0","722/0","723/0","724/0","725/0","726/0","727/0","728/0","729/0"],"_overriding":["719/0"],"_registered":["719/0"],"_increases":["720/1"],"_dist":["720/1","789/3"],"_files":["720/1","811/1","815/0","840/0","844/1","847/1","866/1","868/0"],"_czech":["721/0"],"_cz":["721/0"],"_en":["722/0"],"_spanish":["723/0"],"_es":["723/0","867/2"],"_french":["724/0"],"_fr":["724/0"],"_italian":["725/0","844/0"],"_japanese":["726/0","844/0"],"_ja":["726/0"],"_korean":["727/0","844/0"],"_ko":["727/0"],"_chinese":["728/0","729/0","844/0"],"_zh":["728/0","729/0"],"_cn":["728/0"],"_traditional":["729/0","844/0"],"_tw":["729/0"],"_tl":["730/0"],"_dr":["730/0"],"_ndash":["730/0"],"_improve":["730/0"],"_track":["730/1"],"_works":["730/2"],"_box":["730/2","807/0","808/0"],"_community":["730/3"],"_resource":["730/3"],"_prototyping":["730/3","831/1"],"_aggressively":["730/4"],"_retries":["730/4","730/6"],"_slower":["730/4"],"_tier":["730/5"],"_advantages":["730/5"],"_rate":["730/6","731/4","732/4","733/4"],"_concurrent":["730/6"],"_faster":["730/6","786/7","787/2","788/2","794/1"],"_timeouts":["730/6"],"_metric":["730/6"],"_tuning":["730/6"],"_customer":["730/6","731/4","732/4","733/4","734/2"],"_archive":["730/6","732/4"],"_explorer":["731/0"],"_developer":["731/0","787/1"],"_building":["731/0","790/0","793/1","793/0","794/0","795/1","815/2","815/4"],"_extensive":["731/1","844/1"],"_benefits":["731/3","732/3","733/3","734/1"],"_reliable":["732/0","733/0","866/0"],"_makes":["732/1","748/0","787/2","787/3","836/1","868/0"],"_tools":["732/1"],"_versatile":["732/1"],"_upgrade":["732/4"],"_years":["733/0"],"_assist":["733/1"],"_metadata":["733/4","793/2"],"_pocket":["734/0"],"_decentralized":["734/2"],"_stake":["734/2"],"_opposed":["734/2"],"_paying":["734/2"],"_monthly":["734/2"],"_incentivized":["734/2"],"_cryptoeconomic":["734/2"],"_incentives":["734/2"],"_verifies":["735/0"],"_maximize":["735/2"],"_deployable":["736/0"],"_mnemonics":["736/0","743/0","747/0","748/0"],"_bin":["737/0"],"_passes":["738/0","748/0"],"_stage":["738/0"],"_approximating":["738/0"],"_portions":["738/1","847/2"],"_massaged":["738/1"],"_tweaked":["738/1"],"_stabilizes":["738/1"],"_destinations":["738/2"],"_scripting":["739/0","746/0"],"_somekey":["739/0"],"_define":["739/0"],"_y":["739/0"],"_flag":["739/0","741/2","770/0"],"_enabled":["740/1","883/0"],"_loops":["741/0"],"_flow":["741/0"],"_byt":["741/2"],"_independent":["741/2"],"_moved":["741/2","849/0","850/1","854/0","854/1"],"_incur":["741/3"],"_though":["741/3","831/1"],"_pic":["741/0"],"_option":["742/1","756/5","756/6","768/0","772/0","772/1"],"_usual":["742/2"],"_impacts":["742/2"],"_shows":["743/0","754/0","765/0","766/0","863/2"],"_sandbox":["745/0"],"_learning":["745/0"],"_managing":["745/0"],"_repl":["745/1"],"_eval":["746/0"],"_scripts":["746/0","848/1","877/1"],"_commands":["746/0"],"_variables":["746/0","810/1","815/5","822/1","822/3","822/0"],"_phrases":["747/0","844/0","857/0"],"_prompt":["747/2"],"_decrypt":["747/2","748/0","788/0"],"_xxx":["748/0","749/0"],"_scrypt":["748/0","785/3","788/1"],"_slow":["748/0","785/1"],"_brute":["748/0","786/1"],"_force":["748/0","786/1"],"_attack":["748/0","782/0","786/1"],"_far":["748/0"],"_passwords":["748/0","786/4","786/5","786/6"],"_hence":["749/0"],"_cli":["750/0","751/0","751/1","754/0","756/0","756/2","756/5","769/4"],"_handles":["751/0"],"_arguments":["751/0","751/1","753/1","756/8","769/0","769/3","769/4","789/3","839/0"],"_instantiates":["751/0"],"_plugin":["751/0","751/1","752/0","752/1","753/0","756/0","756/3","756/4","756/5","757/0","758/0","759/0","760/0","761/0","762/0","763/0","764/0","765/0","766/0","767/0","768/0"],"_standalone":["751/1"],"_exactly":["751/1","809/1","873/1"],"_addplugin":["752/0","753/1"],"_pluginclass":["752/0","753/0"],"_dedicated":["753/0"],"_conjunction":["753/1"],"_setplugin":["753/0"],"_screen":["754/0","756/2","765/0","767/0","768/0"],"_terminates":["754/0"],"_show":["754/0"],"_showusage":["754/0"],"_argv":["755/0"],"_manages":["756/0"],"_phases":["756/0"],"_requested":["756/2"],"_gethelp":["756/2","767/0"],"_getoptionhelp":["756/2","768/0"],"_prepareoptions":["756/3","756/4","756/7","769/4"],"_understands":["756/5"],"_bail":["756/5"],"_preparearguments":["756/7","756/9"],"_sense":["756/8"],"_allowzero":["763/1","763/0"],"_raised":["763/1"],"_dumps":["764/0"],"_contents":["764/0","802/1","803/1","810/1","811/0"],"_console":["764/0","799/3"],"_header":["764/0"],"_nicely":["764/0"],"_style":["764/0","792/1","810/2","821/0","829/0"],"_plugins":["764/1"],"_dump":["764/0","793/2"],"_stops":["765/0","766/0"],"_throwusageerror":["765/0"],"_subclass":["767/0","768/0"],"_argparser":["769/0","769/3","769/4","770/0","771/0","772/0","773/0"],"_arg":["769/0","770/0","771/0","772/0","773/0"],"_parser":["769/0","770/0","771/0","772/0","773/0"],"_yes":["769/1"],"_consumes":["769/4","817/0","822/4"],"_leaving":["769/4"],"_behind":["769/4","867/6"],"_prepareargs":["769/4"],"_consumeflag":["770/0"],"_consumemultioptions":["771/0"],"_usageerror":["772/1"],"_consumeoption":["772/0"],"_consumeoptions":["773/0"],"_incredibly":["775/1"],"_slight":["775/1"],"_seem":["775/1","867/4"],"_confusing":["775/1"],"_worst":["775/1"],"_loss":["775/1"],"_misrepresent":["775/1"],"_action":["775/1","847/4","866/2"],"_luckily":["775/2"],"_tricked":["775/2"],"_mistake":["775/2"],"_mainly":["775/3","848/1"],"_worry":["775/3"],"_surrounding":["775/3","819/0"],"_page":["775/3","775/4","793/2","801/0","802/3"],"_reloading":["775/3"],"_refresh":["775/4"],"_reset":["775/5","812/1"],"_banners":["775/5"],"_accomplished":["775/6"],"_hog":["778/0"],"_lightly":["779/1"],"_refers":["779/2"],"_ed":["779/3","779/7"],"_happens":["781/0"],"_retain":["781/0","848/1"],"_things":["781/0","789/1","833/1","837/0"],"_vectors":["782/0"],"_somewhat":["783/0","789/0"],"_bid":["783/0"],"_willing":["783/0","789/1"],"_brief":["784/0"],"_aspects":["784/0","876/0"],"_blockchains":["784/0"],"_aware":["784/0"],"_sparse":["784/1"],"_moment":["784/1"],"_goes":["784/1","788/2"],"_basics":["784/0"],"_technique":["785/0"],"_implications":["785/0"],"_people":["785/1","867/7"],"_concerned":["785/1"],"_encrypting":["785/1"],"_decrypting":["785/1","787/3"],"_intentional":["785/2"],"_stronger":["785/2"],"_cpu":["785/3","786/0"],"_pseudo":["785/3"],"_series":["785/3"],"_goal":["786/0"],"_computer":["786/0","786/4"],"_scale":["786/1"],"_attacker":["786/1","786/3","786/7"],"_computers":["786/1","788/2"],"_seconds":["786/2","786/3","786/4","786/5"],"_proceed":["786/2"],"_know":["786/3","836/3","848/2"],"_try":["786/4","792/2","867/0"],"_guessing":["786/4"],"_million":["786/4","786/5"],"_tied":["786/4"],"_days":["786/4"],"_instantly":["786/5"],"_period":["786/6"],"_legitimate":["786/7"],"_reducing":["787/0"],"_better":["787/0","831/0","867/1"],"_feel":["787/0","787/2","787/3","867/3"],"_waiting":["787/0"],"_encryption":["787/1"],"_incorporate":["787/1"],"_periodically":["787/1"],"_indication":["787/1","787/2"],"_percent":["787/1"],"_comfortable":["787/2"],"_clear":["787/2"],"_needlessly":["787/3","867/7"],"_wasted":["787/3"],"_mitigating":["787/0"],"_doing":["788/0"],"_tuned":["788/1","788/2"],"_main":["788/2","853/4"],"_purpose":["788/2","792/0","843/1","847/3"],"_arounds":["788/0"],"_something":["789/0","842/1"],"_ve":["789/0"],"_written":["789/0","792/0","866/4"],"_necessity":["789/0"],"_grown":["789/0"],"_good":["789/1"],"_welcome":["789/1","789/2"],"_criticism":["789/1"],"_am":["789/1"],"_my":["789/1"],"_changed":["789/1","848/0","851/0","851/2","852/0"],"_pull":["789/2","789/4","842/0"],"_backwards":["789/3","842/0"],"_compatibility":["789/3"],"_breaking":["789/3"],"_convincing":["789/3","839/0"],"_aims":["789/3","843/0","848/1"],"_lean":["789/3"],"_eye":["789/3"],"_test":["789/3","844/1","866/1","866/3","866/4","866/5","866/6","867/4","868/0","868/1","869/0","870/1","870/0","871/0","872/0","876/0","876/1","876/2","878/0","881/0"],"_me":["789/3","848/2"],"_migration":["789/3","848/0","858/0","859/0"],"_overly":["789/3"],"_complicated":["789/3"],"_beginning":["789/4"],"_discussion":["789/4"],"_figure":["789/4"],"_contributing":["789/0"],"_hacking":["789/0","837/0"],"_modify":["790/0","847/1"],"_steps":["790/0","793/0"],"_involved":["790/0"],"_setting":["790/0"],"_monorepo":["790/1"],"_install":["790/1","799/2","868/0"],"_repo":["790/1"],"_documents":["792/0"],"_flatworm":["792/0","792/2","800/0"],"_generation":["792/0"],"_writing":["792/0"],"_guide":["792/1","848/2","858/0","859/0"],"_coming":["792/1","844/0"],"_lines":["792/2","815/5","817/3","822/4"],"_avoid":["792/2"],"_inline":["792/2"],"_externallinks":["792/2"],"_anchor":["792/2"],"_justified":["792/2"],"_symlinks":["792/2"],"_aim":["792/2"],"_xonsistency":["792/2"],"_look":["792/2","835/0","867/6"],"_build":["793/0","794/1","867/4"],"_docs":["793/1","795/0","795/1","800/0","800/1"],"_html":["793/2"],"_pages":["793/2"],"_linking":["793/2","845/0"],"_anchors":["793/2"],"_readme":["793/2"],"_md":["793/2"],"_organized":["793/2"],"_browsable":["793/2"],"_linkable":["793/2"],"_github":["793/2","866/2","867/3","877/1"],"_ingestion":["793/2"],"_latex":["793/2"],"_pdf":["793/2"],"_samples":["794/0","814/0"],"_vm":["794/0"],"_typos":["794/0"],"_injected":["794/0"],"_headache":["794/1"],"_step":["794/1"],"_preview":["795/0"],"_locally":["795/0"],"_folder":["795/0","823/0"],"_built":["795/0"],"_caveats":["795/1"],"_apply":["795/1"],"_flushing":["795/1"],"_caches":["795/1"],"_previewing":["795/0"],"_grow":["796/0"],"_snippets":["796/0"],"_cookbook":["796/0","798/1"],"_react":["797/0","797/1","798/0","799/0","799/2","867/4"],"_native":["797/0","797/1","798/0","799/0","799/2"],"_forks":["797/0"],"_expo":["797/0","867/4"],"_javascriptcore":["797/1"],"_webkit":["797/1"],"_dom":["797/1"],"_shims":["797/3","798/0","799/2"],"_ilk":["797/0"],"_shim":["798/0"],"_reactnative":["798/1"],"_instructions":["798/1"],"_installing":["798/1","798/2","798/0","830/0"],"_restart":["798/2"],"_packager":["798/2"],"_company":["798/2"],"_stolen":["799/1"],"_worked":["799/3"],"_regarding":["799/3"],"_rendering":["800/0"],"_engine":["800/0"],"_formatting":["800/0"],"_documenting":["800/0"],"_inspiration":["800/1"],"_came":["800/1"],"_sphinx":["800/1"],"_directive":["801/1","812/0","814/0","817/0","817/1","822/1","824/0","825/0","827/0","827/2","828/0","828/1","829/0"],"_extensions":["801/1","802/4","803/3","804/2","806/2","809/3","810/2"],"_directives":["801/2"],"_markdown":["801/2","802/2","803/2","804/1","805/1","806/1","807/1","808/1","809/1","810/1","811/1","812/2","813/0","824/1","824/0","827/1","827/0"],"_continues":["801/3"],"_title":["802/0","803/0","803/2","804/0","804/1","805/1","813/1"],"_h1":["802/0"],"_font":["802/0","803/0","804/0"],"_linked":["802/1","803/1","828/0"],"_table":["802/1","803/1","810/0","811/0","817/0","817/1","821/0","822/0","822/1","822/3","822/4","829/0"],"_dividing":["802/1","803/1"],"_drawn":["802/1","803/1"],"_inherit":["802/4","803/3","804/2","824/0","827/2"],"_nav":["802/4","826/0"],"_subsection":["803/0"],"_h2":["803/0"],"_subsections":["803/1","811/0"],"_heading":["804/0"],"_h3":["804/0"],"_term":["805/0"],"_indented":["805/0","812/1"],"_placed":["807/0","808/0","823/0"],"_blue":["807/0"],"_bordered":["807/0","808/0"],"_draw":["807/0","808/0"],"_attention":["807/0","808/0"],"_banner":["807/0","808/0"],"_orange":["808/0"],"_escaped":["809/2"],"_lang":["809/3","816/0","825/0"],"_caption":["809/0"],"_cell":["810/1","818/0","819/0","820/1"],"_footer":["810/0"],"_toc":["811/0"],"_injects":["811/0"],"_loading":["811/0"],"_loads":["811/0"],"_interpreted":["811/1"],"_directories":["811/1"],"_terminated":["812/0"],"_bodies":["812/1"],"_indentation":["812/1"],"_flexibility":["813/0"],"_dialects":["813/0"],"_bold":["813/0"],"_italic":["813/0"],"_underlined":["813/0"],"_monospaced":["813/0"],"_superscript":["813/0"],"_strike":["813/0"],"_supporting":["813/0"],"_rendered":["813/1"],"_monospace":["814/0"],"_substitution":["815/0"],"_bare":["815/1","815/3"],"_statement":["815/1"],"_hide":["815/5"],"_setup":["815/5"],"_java":["815/0"],"_extension":["816/0","821/0","827/2","833/0","870/1"],"_row":["817/2","818/0","820/1","820/0","822/4"],"_declaration":["817/2","822/4"],"_blank":["817/3"],"_gap":["818/0"],"_alignment":["818/0","819/0"],"_column":["818/0","820/0"],"_spanning":["818/0","820/0"],"_columns":["820/0","820/1"],"_appearance":["821/0"],"_styles":["821/0"],"_layout":["822/0"],"_express":["822/0","847/3"],"_uneven":["822/0"],"_separately":["822/1"],"_repeated":["822/3"],"_declared":["822/4"],"_consist":["822/5"],"_z0":["822/7"],"_highlighted":["825/0"],"_evaluated":["825/1"],"_breadcrumbs":["826/0"],"_getsourceurl":["828/0"],"_import":["830/0","844/0","867/6","868/0"],"_under":["830/0","839/2","846/0"],"_vaporsproject":["830/0","868/0"],"_organization":["830/0"],"_umbrella":["830/0","849/0"],"_started":["830/0"],"_webserver":["831/0"],"_serve":["831/0"],"_yourself":["831/0"],"_demos":["831/1"],"_our":["831/1"],"_cdn":["831/1"],"_terminology":["832/0"],"_quickest":["833/0"],"_experiment":["833/0"],"_holds":["833/1","834/4"],"_typically":["834/3"],"_thing":["834/4"],"_historic":["835/0"],"_lives":["836/0"],"_mapped":["836/1"],"_familiar":["836/2"],"_databases":["836/2"],"_relational":["836/2"],"_mapper":["836/2"],"_orm":["836/2"],"_communicate":["836/3"],"_don":["836/5","867/7"],"_smaller":["836/5"],"_subset":["836/5"],"_vyper":["836/6"],"_dependency":["839/0"],"_mit":["839/1","839/2","841/0","844/1","846/0","847/0"],"_licensed":["839/1"],"_cc0":["839/1"],"_contributions":["839/2"],"_license":["839/2","841/0","844/1","846/0","847/0"],"_printable":["840/0"],"_ascii":["840/0","840/2"],"_bu":["840/1"],"_transmission":["840/2"],"_servers":["840/2"],"_proxies":["840/2"],"_mangle":["840/2"],"_editors":["840/2"],"_platforms":["840/2","867/0"],"_terminals":["840/2"],"_elegantly":["840/2"],"_keyboards":["840/2"],"_devices":["840/2"],"_administrative":["840/2"],"_priviledges":["840/2"],"_perpetuity":["842/1"],"_obscure":["842/2"],"_platform":["842/2"],"_dot":["842/2"],"_carries":["842/2"],"_implication":["842/2"],"_date":["842/2","845/0"],"_versions":["842/2","845/0","858/0"],"_released":["842/2"],"_considerations":["842/0"],"_ecosystem":["843/0"],"_originally":["843/1"],"_io":["843/1"],"_sound":["844/0"],"_export":["844/0"],"_crowdsale":["844/0"],"_backup":["844/0"],"_soon":["844/0"],"_abiv2":["844/0","876/2"],"_citizens":["844/1"],"_tiny":["844/1"],"_maintained":["844/1"],"_typescript":["844/1","869/0","871/0"],"_open":["844/1"],"_kept":["845/0"],"_variety":["846/0"],"_copyright":["846/0","847/0","847/2","847/4"],"_richard":["847/0"],"_moore":["847/0"],"_permission":["847/1","847/2"],"_hereby":["847/1"],"_granted":["847/1"],"_person":["847/1"],"_obtaining":["847/1"],"_restriction":["847/1"],"_limitation":["847/1"],"_rights":["847/1"],"_merge":["847/1"],"_publish":["847/1"],"_distribute":["847/1"],"_sublicense":["847/1"],"_sell":["847/1"],"_persons":["847/1"],"_whom":["847/1"],"_furnished":["847/1"],"_subject":["847/1"],"_conditions":["847/1"],"_notice":["847/2"],"_shall":["847/2","847/4"],"_substantial":["847/2"],"_warranty":["847/3"],"_implied":["847/3"],"_limited":["847/3"],"_warranties":["847/3"],"_merchantability":["847/3"],"_fitness":["847/3"],"_noninfringement":["847/3"],"_holders":["847/4"],"_liable":["847/4"],"_claim":["847/4"],"_damages":["847/4"],"_liability":["847/4"],"_tort":["847/4"],"_arising":["847/4"],"_dealings":["847/4"],"_document":["848/0"],"_covers":["848/0"],"_v5":["848/0","853/3","859/0"],"_updating":["848/1"],"_let":["848/2"],"_ll":["848/2"],"_update":["848/2"],"_namespace":["849/0","854/0"],"_bignumberify":["850/0"],"_circuit":["850/0"],"_instantiation":["850/0"],"_addresspromise":["851/2"],"_resolution":["851/0"],"_difference":["852/0","853/1","853/4","853/6"],"_estimation":["852/0"],"_bucket":["852/0","853/0","853/2","853/3","853/5"],"_exposes":["853/0"],"_collided":["853/2"],"_buckets":["853/2"],"_dereference":["853/5"],"_preserve":["853/5"],"_having":["853/7"],"_belong":["854/0"],"_undergone":["855/0"],"_dramatic":["855/0"],"_inspection":["855/1","856/0"],"_edge":["855/1"],"_interrogating":["856/0"],"_mostly":["856/0"],"_merged":["857/0","876/2"],"_guides":["858/0"],"_upgrading":["858/0"],"_focuses":["859/0"],"_migrating":["859/0"],"_smart":["862/0","862/1"],"_overloaded":["863/0","863/1","863/2"],"_wishes":["866/0"],"_tests":["866/1","866/2","867/1","870/0","877/1","880/0","882/0","882/1","885/0"],"_among":["866/1"],"_suites":["866/1","866/5","868/0","876/2"],"_gzip":["866/1","868/0"],"_seen":["866/2"],"_ci":["866/2"],"_strive":["866/3"],"_constantly":["866/3"],"_especially":["866/3","867/0"],"_arise":["866/3"],"_prior":["866/3"],"_fix":["866/3"],"_corrected":["866/3"],"_causing":["866/3"],"_regression":["866/3"],"_procedurally":["866/4","866/5","878/0","882/1"],"_generating":["866/5","882/1"],"_choosing":["866/5"],"_solc":["866/5"],"_captured":["866/5"],"_technologies":["867/0"],"_move":["867/0"],"_fast":["867/0"],"_universe":["867/0"],"_accessible":["867/0"],"_es3":["867/1"],"_umd":["867/2"],"_modules":["867/2"],"_overlooked":["867/3"],"_suggestions":["867/3"],"_reach":["867/3"],"_opening":["867/3"],"_pain":["867/4"],"_ideas":["867/4"],"_bug":["867/4"],"_probably":["867/5"],"_summer":["867/5"],"_es2015":["867/5"],"_proxy":["867/5"],"_avoided":["867/6"],"_regular":["867/6"],"_expressions":["867/6"],"_caused":["867/6"],"_conflicts":["867/6"],"_otto":["867/6"],"_basically":["867/7"],"_moral":["867/7"],"_story":["867/7"],"_gzipped":["868/0"],"_testcases":["868/0","870/0","871/0","873/0","874/0","875/0"],"_suite":["868/1","869/0"],"_schema":["868/1","871/0"],"_convenience":["869/0"],"_loadtests":["870/0"],"_testcase":["870/0","871/0"],"_perspective":["872/0"],"_runs":["872/0"],"_reproduce":["872/1"],"_sure":["872/3"],"_tweak":["872/3"],"_iteration":["872/3"],"_concatenate":["872/3"],"_deterministic":["872/0","880/0"],"_drng":["872/0"],"_upper":["873/0","873/1","874/0","875/0"],"_exclusive":["873/0"],"_randomhexstring":["874/0"],"_randomnumber":["875/0"],"_outline":["876/0"],"_nuanced":["876/0"],"_overhaul":["876/1"],"_coverage":["876/1"],"_collapse":["876/1"],"_redundancy":["876/1"],"_schemas":["876/0"],"_vaporyjs":["877/1"],"_https":["877/1"],"_cpp":["877/1"],"_gz":["877/2"],"_coding":["878/0"],"_hierarchal":["880/0"],"_constructing":["882/1"],"_soldity":["882/1"],"_compiling":["882/1"],"_evaluating":["882/1"],"_conversion":["884/0"],"_keystore":["885/0"]}}